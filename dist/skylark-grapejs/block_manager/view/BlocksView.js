/**
 * skylark-grapejs - A version of garpejs that ported to running on skylarkjs
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-grapejs/
 * @license MIT
 */
define(["skylark-backbone","skylark-underscore","./BlockView","./CategoryView"],function(t,e,s,i){"use strict";return t.View.extend({initialize(t,s){e.bindAll(this,"getSorter","onDrag","onDrop"),this.config=s||{},this.categories=t.categories||"",this.renderedCategories=[];var i=this.config.pStylePrefix||"";this.ppfx=i,this.noCatClass=`${i}blocks-no-cat`,this.blockContClass=`${i}blocks-c`,this.catsClass=`${i}block-categories`;const o=this.collection;this.listenTo(o,"add",this.addTo),this.listenTo(o,"reset",this.render),this.em=this.config.em,this.tac="test-tac",this.grabbingCls=this.ppfx+"grabbing",this.em&&(this.config.getSorter=this.getSorter,this.canvas=this.em.get("Canvas"))},updateConfig(t={}){this.config={...this.config,...t}},getSorter(){if(this.em){if(!this.sorter){var t=this.em.get("Utils"),e=this.canvas;this.sorter=new t.Sorter({container:e.getBody(),placer:e.getPlacerEl(),containerSel:"*",itemSel:"*",pfx:this.ppfx,onStart:this.onDrag,onEndMove:this.onDrop,onMove:this.onMove,document:e.getFrameEl().contentDocument,direction:"a",wmargin:1,nested:1,em:this.em,canvasRelative:1})}return this.sorter}},onDrag(t){this.em.stopDefault(),this.em.trigger("block:drag:start",t)},onMove(t){this.em.trigger("block:drag:move",t)},onDrop(t){const e=this.em;e.runDefault(),t&&t.get&&(t.get("activeOnRender")&&(t.trigger("active"),t.set("activeOnRender",0)),e.trigger("block:drag:stop",t))},addTo(t){this.add(t)},add(t,o){const{config:r}=this;var n=o||null,a=new s({model:t,attributes:t.get("attributes")},r).render().el,l=t.get("category");if(l&&this.categories&&!r.ignoreCategories){e.isString(l)?l={id:l,label:l}:e.isObject(l)&&!l.id&&(l.id=l.label);var c=this.categories.add(l),h=c.get("id"),d=this.renderedCategories[h],g=this.getCategoriesEl();return t.set("category",c),!d&&g&&(d=new i({model:c},this.config).render(),this.renderedCategories[h]=d,g.appendChild(d.el)),void(d&&d.append(a))}n?n.appendChild(a):this.append(a)},getCategoriesEl(){return this.catsEl||(this.catsEl=this.el.querySelector(`.${this.catsClass}`)),this.catsEl},getBlocksEl(){return this.blocksEl||(this.blocksEl=this.el.querySelector(`.${this.noCatClass} .${this.blockContClass}`)),this.blocksEl},append(t){let e=this.getBlocksEl();e&&e.appendChild(t)},render(){const t=this.ppfx,e=document.createDocumentFragment();this.catsEl=null,this.blocksEl=null,this.renderedCategories=[],this.el.innerHTML=`\n      <div class="${this.catsClass}"></div>\n      <div class="${this.noCatClass}">\n        <div class="${this.blockContClass}"></div>\n      </div>\n    `,this.collection.each(t=>this.add(t,e)),this.append(e);const s=`${this.blockContClass}s ${t}one-bg ${t}two-color`;return this.$el.addClass(s),this}})});
//# sourceMappingURL=../../sourcemaps/block_manager/view/BlocksView.js.map

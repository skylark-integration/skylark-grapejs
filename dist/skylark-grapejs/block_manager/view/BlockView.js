/**
 * skylark-grapejs - A version of garpejs that ported to running on skylarkjs
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-grapejs/
 * @license MIT
 */
define(["skylark-backbone","skylark-underscore","../../utils/mixins"],function(e,t,r){"use strict";return e.View.extend({events:{click:"handleClick",mousedown:"startDrag",dragstart:"handleDragStart",drag:"handleDrag",dragend:"handleDragEnd"},initialize(e,t={}){const{model:r}=this;this.em=t.em,this.config=t,this.endDrag=this.endDrag.bind(this),this.ppfx=t.pStylePrefix||"",this.listenTo(r,"destroy remove",this.remove),this.listenTo(r,"change",this.render)},handleClick(){const{config:e,model:t,em:r}=this;if(!e.appendOnClick)return;const n=e.getSorter(),s=t.get("content"),a=r.getSelected();let i,l;if(n.setDropContent(s),a)if((l=n.validTarget(a.getEl(),s)).valid)i=a;else{const e=a.parent();(l=n.validTarget(e.getEl(),s)).valid&&(i=e)}if(!i){const e=r.getWrapper();(l=n.validTarget(e.getEl(),s)).valid&&(i=e)}const d=i&&i.append(s)[0];d&&r.setSelected(d,{scroll:1})},startDrag(e){const{config:t,em:n}=this;if(0!==e.button||!t.getSorter||this.el.draggable)return;n.refreshCanvas();const s=t.getSorter();s.setDragHelper(this.el,e),s.setDropContent(this.model.get("content")),s.startSort(this.el),r.on(document,"mouseup",this.endDrag)},handleDragStart(e){const{em:r,model:n}=this,s=n.get("content"),a=t.isObject(s)?JSON.stringify(s):s;r.set("dragResult"),e.dataTransfer.setData("text",a),r.set("dragContent",s),r.trigger("block:drag:start",n,e)},handleDrag(e){this.em.trigger("block:drag",this.model,e)},handleDragEnd(){const{em:e,model:t}=this,r=e.get("dragResult");if(r){const n="activeOnRender",s=r.get&&r.get(n);(t.get("activate")||s)&&(r.trigger("active"),r.set(n,0)),t.get("select")&&e.setSelected(r),t.get("resetId")&&r.onAll(e=>e.resetId())}e.set({dragResult:null,dragContent:null}),e.trigger("block:drag:stop",r,t)},endDrag(e){r.off(document,"mouseup",this.endDrag);const t=this.config.getSorter();t.moved=0,t.endMove()},render(){const{em:e,el:t,ppfx:n,model:s}=this,a=`${n}block`,i=e&&e.t(`blockManager.labels.${s.id}`)||s.get("label"),l=s.get("render"),d=s.get("media");t.className+=` ${a} ${n}one-bg ${n}four-color-h`,t.innerHTML=`\n      ${d?`<div class="${a}__media">${d}</div>`:""}\n      <div class="${a}-label">${i}</div>\n    `,t.title=t.textContent.trim(),r.hasDnd(e)&&t.setAttribute("draggable",!0);const o=l&&l({el:t,model:s,className:a,prefix:n});return o&&(t.innerHTML=o),this}})});
//# sourceMappingURL=../../sourcemaps/block_manager/view/BlockView.js.map

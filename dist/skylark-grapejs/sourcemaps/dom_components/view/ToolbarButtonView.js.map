{"version":3,"sources":["dom_components/view/ToolbarButtonView.js"],"names":["define","Backbone","View","extend","[object Object]","this","model","get","mousedown","opts","config","em","editor","event","preventDefault","stopPropagation","left","top","Canvas","getFrameEl","getBoundingClientRect","calibrated","clientX","clientY","trigger","execCommand","command","runCommand","$el","id","label","pfx","getConfig","addClass","append"],"mappings":";;;;;;;AAAAA,QAAQ,oBAAqB,SAAUC,GACnC,aACA,OAAOA,EAASC,KAAKC,QACjBC,SACI,OAAOC,KAAKC,MAAMC,IAAI,YAAeC,UAAW,gBAEpDJ,aACI,OAAOC,KAAKC,MAAMC,IAAI,eAE1BH,WAAWK,MACP,MAAMC,OACFA,MACAD,EACJJ,KAAKM,GAAKD,EAAOC,GACjBN,KAAKO,OAASF,EAAOE,QAEzBR,YAAYS,GACRA,EAAMC,iBACND,EAAME,kBACN,MAAMH,OAACA,EAAMD,GAAEA,GAAMN,MACfW,KAACA,EAAIC,IAAEA,GAAOL,EAAOM,OAAOC,aAAaC,wBACzCC,MACCR,EACHS,QAAST,EAAMS,QAAUN,EACzBO,QAASV,EAAMU,QAAUN,GAE7BN,EAAGa,QAAQ,sBACXnB,KAAKoB,YAAYJ,IAErBjB,YAAYS,GACR,MAAMJ,GAASI,MAAAA,GACTa,EAAUrB,KAAKC,MAAMC,IAAI,WACzBK,EAASP,KAAKO,OACG,mBAAZc,GACPA,EAAQd,EAAQ,KAAMH,GAEH,iBAAZiB,GACPd,EAAOe,WAAWD,EAASjB,IAGnCL,SACI,MAAMQ,OAACA,EAAMgB,IAAEA,EAAGtB,MAAEA,GAASD,KACvBwB,EAAKvB,EAAMC,IAAI,MACfuB,EAAQxB,EAAMC,IAAI,SAClBwB,EAAMnB,EAAOoB,UAAU,eAI7B,OAHAJ,EAAIK,YAAaF,iBACjBF,GAAMD,EAAIK,YAAaF,kBAAsBF,KAC7CC,GAASF,EAAIM,OAAOJ,GACbzB","file":"../../../dom_components/view/ToolbarButtonView.js","sourcesContent":["define(['skylark-backbone'], function (Backbone) {\n    'use strict';\n    return Backbone.View.extend({\n        events() {\n            return this.model.get('events') || { mousedown: 'handleClick' };\n        },\n        attributes() {\n            return this.model.get('attributes');\n        },\n        initialize(opts = {}) {\n            const {\n                config = {}\n            } = opts;\n            this.em = config.em;\n            this.editor = config.editor;\n        },\n        handleClick(event) {\n            event.preventDefault();\n            event.stopPropagation();\n            const {editor, em} = this;\n            const {left, top} = editor.Canvas.getFrameEl().getBoundingClientRect();\n            const calibrated = {\n                ...event,\n                clientX: event.clientX - left,\n                clientY: event.clientY - top\n            };\n            em.trigger('toolbar:run:before');\n            this.execCommand(calibrated);\n        },\n        execCommand(event) {\n            const opts = { event };\n            const command = this.model.get('command');\n            const editor = this.editor;\n            if (typeof command === 'function') {\n                command(editor, null, opts);\n            }\n            if (typeof command === 'string') {\n                editor.runCommand(command, opts);\n            }\n        },\n        render() {\n            const {editor, $el, model} = this;\n            const id = model.get('id');\n            const label = model.get('label');\n            const pfx = editor.getConfig('stylePrefix');\n            $el.addClass(`${ pfx }toolbar-item`);\n            id && $el.addClass(`${ pfx }toolbar-item__${ id }`);\n            label && $el.append(label);\n            return this;\n        }\n    });\n});"]}
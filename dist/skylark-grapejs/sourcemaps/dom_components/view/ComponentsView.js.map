{"version":3,"sources":["dom_components/view/ComponentsView.js"],"names":["define","Backbone","a","View","extend","[object Object]","o","this","opts","config","em","coll","collection","listenTo","addTo","resetChildren","removeChildren","removed","tempRemove","temporary","views","forEach","view","remove","apply","childrenView","scriptContainer","stopListening","components","it","id","getId","get","componentsById","allRules","getAll","filter","rule","getSelectors","getFullString","opt","cm","optStyle","target","run","trigger","model","i","indexOf","addToCollection","triggerAdd","comp","fragmentEl","index","compView","require","default","fragment","dt","componentTypes","getTypes","type","viewObject","length","rendered","render","el","appendChild","parent","parentEl","children","childNodes","isUndefined","lastIndex","insertBefore","innerHTML","each","frag","document","createDocumentFragment"],"mappings":"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","file":"../../../dom_components/view/ComponentsView.js","sourcesContent":["define([\n    'skylark-backbone',\n    'skylark-underscore'\n], function (Backbone, a) {\n    'use strict';\n    return Backbone.View.extend({\n        initialize(o) {\n            this.opts = o || {};\n            this.config = o.config || {};\n            this.em = this.config.em;\n            const coll = this.collection;\n            this.listenTo(coll, 'add', this.addTo);\n            this.listenTo(coll, 'reset', this.resetChildren);\n            this.listenTo(coll, 'remove', this.removeChildren);\n        },\n        removeChildren(removed, coll, opts = {}) {\n            const {em} = this.config;\n            const tempRemove = opts.temporary;\n            removed.views.forEach(view => {\n                if (!view)\n                    return;\n                view.remove.apply(view);\n                const {childrenView, scriptContainer} = view;\n                childrenView && childrenView.stopListening();\n                scriptContainer && scriptContainer.remove();\n            });\n            removed.components().forEach(it => this.removeChildren(it, coll, opts));\n            if (em && !tempRemove) {\n                const id = removed.getId();\n                const domc = em.get('DomComponents');\n                delete domc.componentsById[id];\n                const allRules = em.get('CssComposer').getAll();\n                allRules.remove(allRules.filter(rule => rule.getSelectors().getFullString() === `#${ id }`));\n                if (!removed.opt.temporary) {\n                    const cm = em.get('Commands');\n                    const hasSign = removed.get('style-signature');\n                    const optStyle = { target: removed };\n                    hasSign && cm.run('core:component-style-clear', optStyle);\n                    removed.removed();\n                    em.trigger('component:remove', removed);\n                }\n            }\n        },\n        addTo(model, coll = {}, opts = {}) {\n            const em = this.config.em;\n            const i = this.collection.indexOf(model);\n            this.addToCollection(model, null, i);\n            if (em && !opts.temporary) {\n                const triggerAdd = model => {\n                    em.trigger('component:add', model);\n                    model.components().forEach(comp => triggerAdd(comp));\n                };\n                triggerAdd(model);\n            }\n        },\n        addToCollection(model, fragmentEl, index) {\n            if (!this.compView)\n                this.compView = require('./ComponentView').default;\n            const {config, opts, em} = this;\n            const fragment = fragmentEl || null;\n            const dt = opts.componentTypes || em && em.get('DomComponents').getTypes();\n            const type = model.get('type');\n            let viewObject = this.compView;\n            for (let it = 0; it < dt.length; it++) {\n                if (dt[it].id == type) {\n                    viewObject = dt[it].view;\n                    break;\n                }\n            }\n            const view = new viewObject({\n                model,\n                config,\n                componentTypes: dt\n            });\n            let rendered = view.render().el;\n            if (fragment) {\n                fragment.appendChild(rendered);\n            } else {\n                const parent = this.parentEl;\n                const children = parent.childNodes;\n                if (!a.isUndefined(index)) {\n                    const lastIndex = children.length == index;\n                    if (lastIndex) {\n                        index--;\n                    }\n                    if (lastIndex || !children.length) {\n                        parent.appendChild(rendered);\n                    } else {\n                        parent.insertBefore(rendered, children[index]);\n                    }\n                } else {\n                    parent.appendChild(rendered);\n                }\n            }\n            return rendered;\n        },\n        resetChildren() {\n            this.parentEl.innerHTML = '';\n            this.collection.each(model => this.addToCollection(model));\n        },\n        render(parent) {\n            const el = this.el;\n            const frag = document.createDocumentFragment();\n            this.parentEl = parent || this.el;\n            this.collection.each(model => this.addToCollection(model, frag));\n            el.innerHTML = '';\n            el.appendChild(frag);\n            return this;\n        }\n    });\n});"]}
{"version":3,"sources":["dom_components/model/Component.js"],"names":["define","langx","_","b","Styleable","Backbone","Components","Selector","Selectors","Traits","escapeRegExp","str","replace","Component","Model","extend","defaults","tagName","type","name","removable","draggable","droppable","badgable","stylable","stylable-require","style-signature","unstylable","highlightable","copyable","resizable","editable","layerable","selectable","hoverable","void","state","status","content","icon","style","classes","script","script-export","attributes","traits","propagate","dmode","toolbar","[object Object]","property","value","previous","props","opt","em","parent","this","parentAttr","newAttr","toPropagate","forEach","prop","get","mixin","set","isArray","config","voidElements","indexOf","frame","ccid","createId","initClasses","initTraits","initComponents","initToolbar","listenTo","scriptUpdated","tagUpdated","attrUpdated","_idUpdated","views","events","trim","args","emitUpdate","temporary","init","trigger","collection","query","result","$els","view","$el","find","each","i","model","eq","data","push","id","components","item","is","closest","length","coll","at","remove","add","el","m","v","opts","attrs","class","setClass","setStyle","attrPrev","diff","shallowDiff","keys","pr","newAttrs","getAttributes","setAttributes","getConfig","rule","getIdRule","getId","getStyle","call","isString","parseStyle","cc","propOrig","setIdRule","silent","apply","arguments","sm","cls","join","has","hasStyle","avoidInline","TYPE_ID","isEmpty","added","addClass","reset","removed","selectors","TYPE_CLASS","classe","split","selector","where","classStr","toListen","clsArr","stopListening","normalizeClasses","comps","addChild","avoidChildren","isFunction","changed","loadTraits","trait","getInitValue","isUndefined","append","ppfx","tb","command","ed","runCommand","force","trt","setTarget","tr","filter","getTrait","toRemove","map","arr","res","clm","val","attr","md","clone","cloned","constructor","cName","isDiv","defName","nameTag","i18nPfx","i18nName","t","i18nNameTag","i18nDefName","capitalize","tag","sTag","customAttr","getAttrToHTML","isObject","isBoolean","code","comp","toHTML","obj","prototype","toJSON","key","cid","getView","_getFrame","scr","scrStr","toString","tagVarStart","tagVarEnd","reg","RegExp","match","JSON","stringify","event","updated","clb","onAll","oldId","newId","setId","idS","_getStyleRule","idUpdate","idPrev","list","getList","_getStyleSelector","label","isComponent","toLowerCase","nextId","getIncrementId","getNewId","ilen","Object","Math","random","slice","counter","domc","componentsById","styles","sel","idx","checkId","eventDrag"],"mappings":"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","file":"../../../dom_components/model/Component.js","sourcesContent":["define([\n    \"skylark-langx/langx\",\n    'skylark-underscore',\n    '../../utils/mixins',\n    '../../domain_abstract/model/Styleable',\n    'skylark-backbone',\n    './Components',\n    '../../selector_manager/model/Selector',\n    '../../selector_manager/model/Selectors',\n    '../../trait_manager/model/Traits'\n], function (langx,_, b, Styleable, Backbone, Components, Selector, Selectors, Traits) {\n    'use strict';\n\n    const componentList = {};\n    let componentIndex = 0;\n    const escapeRegExp = str => {\n        return str.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&');\n    };\n    const avoidInline = em => em && em.getConfig('avoidInlineStyle');\n    const eventDrag = 'component:drag';\n    const Component = Backbone.Model.extend(Styleable).extend({\n        defaults: {\n            tagName: 'div',\n            type: '',\n            name: '',\n            removable: true,\n            draggable: true,\n            droppable: true,\n            badgable: true,\n            stylable: true,\n            'stylable-require': '',\n            'style-signature': '',\n            unstylable: '',\n            highlightable: true,\n            copyable: true,\n            resizable: false,\n            editable: false,\n            layerable: true,\n            selectable: true,\n            hoverable: true,\n            void: false,\n            state: '',\n            status: '',\n            content: '',\n            icon: '',\n            style: '',\n            classes: '',\n            script: '',\n            'script-export': '',\n            attributes: '',\n            traits: [\n                'id',\n                'title'\n            ],\n            propagate: '',\n            dmode: '',\n            toolbar: null\n        },\n        init() {\n        },\n        updated(property, value, previous) {\n        },\n        removed() {\n        },\n        initialize(props = {}, opt = {}) {\n            const em = opt.em;\n            const parent = this.parent();\n            const parentAttr = parent && parent.attributes;\n            if (parentAttr && parentAttr.propagate) {\n                let newAttr = {};\n                const toPropagate = parentAttr.propagate;\n                toPropagate.forEach(prop => newAttr[prop] = parent.get(prop));\n                newAttr.propagate = toPropagate;\n                newAttr = langx.mixin({},newAttr,props);\n                this.set(newAttr);\n            }\n            const propagate = this.get('propagate');\n            propagate && this.set('propagate', _.isArray(propagate) ? propagate : [propagate]);\n            if (opt && opt.config && opt.config.voidElements.indexOf(this.get('tagName')) >= 0) {\n                this.set('void', true);\n            }\n            opt.em = em;\n            this.opt = opt;\n            this.em = em;\n            this.frame = opt.frame;\n            this.config = opt.config || {};\n            this.set('attributes', langx.mixin({},this.defaults.attributes ,this.get('attributes') ));\n            this.ccid = Component.createId(this);\n            this.initClasses();\n            this.initTraits();\n            this.initComponents();\n            this.initToolbar();\n            this.listenTo(this, 'change:script', this.scriptUpdated);\n            this.listenTo(this, 'change:tagName', this.tagUpdated);\n            this.listenTo(this, 'change:attributes', this.attrUpdated);\n            this.listenTo(this, 'change:attributes:id', this._idUpdated);\n            this.set('status', '');\n            this.views = [];\n            [\n                'classes',\n                'traits',\n                'components'\n            ].forEach(name => {\n                const events = `add remove ${ name !== 'components' ? 'change' : '' }`;\n                this.listenTo(this.get(name), events.trim(), (...args) => this.emitUpdate(name, ...args));\n            });\n            if (!opt.temporary) {\n                this.init();\n                em && em.trigger('component:create', this);\n            }\n        },\n        is(type) {\n            return !!(this.get('type') == type);\n        },\n        props() {\n            return this.attributes;\n        },\n        index() {\n            const {collection} = this;\n            return collection && collection.indexOf(this);\n        },\n        setDragMode(value) {\n            return this.set('dmode', value);\n        },\n        find(query) {\n            const result = [];\n            const $els = this.view.$el.find(query);\n            $els.each(i => {\n                const $el = $els.eq(i);\n                const model = $el.data('model');\n                model && result.push(model);\n            });\n            return result;\n        },\n        findType(id) {\n            const result = [];\n            const find = components => components.forEach(item => {\n                item.is(id) && result.push(item);\n                find(item.components());\n            });\n            find(this.components());\n            return result;\n        },\n        closest(query) {\n            const result = this.view.$el.closest(query);\n            return result.length && result.data('model');\n        },\n        tagUpdated() {\n            const coll = this.collection;\n            const at = coll.indexOf(this);\n            coll.remove(this);\n            coll.add(this, { at });\n        },\n        replaceWith(el) {\n            const coll = this.collection;\n            const at = coll.indexOf(this);\n            coll.remove(this);\n            return coll.add(el, { at });\n        },\n        attrUpdated(m, v, opts = {}) {\n            const attrs = this.get('attributes');\n            const classes = attrs.class;\n            classes && this.setClass(classes);\n            delete attrs.class;\n            const style = attrs.style;\n            style && this.setStyle(style);\n            delete attrs.style;\n            const attrPrev = { ...this.previous('attributes') };\n            const diff = b.shallowDiff(attrPrev, this.get('attributes'));\n            _.keys(diff).forEach(pr => this.trigger(`change:attributes:${ pr }`, this, diff[pr], opts));\n        },\n        setAttributes(attrs, opts = {}) {\n            this.set('attributes', { ...attrs }, opts);\n            return this;\n        },\n        addAttributes(attrs) {\n            const newAttrs = {\n                ...this.getAttributes(),\n                ...attrs\n            };\n            this.setAttributes(newAttrs);\n            return this;\n        },\n        getStyle() {\n            const em = this.em;\n            if (em && em.getConfig('avoidInlineStyle')) {\n                const state = em.get('state');\n                const cc = em.get('CssComposer');\n                const rule = cc.getIdRule(this.getId(), { state });\n                this.rule = rule;\n                if (rule) {\n                    return rule.getStyle();\n                }\n            }\n            return Styleable.getStyle.call(this);\n        },\n        setStyle(prop = {}, opts = {}) {\n            const em = this.em;\n            const {opt} = this;\n            if (em && em.getConfig('avoidInlineStyle') && !opt.temporary) {\n                const style = this.get('style') || {};\n                prop = _.isString(prop) ? this.parseStyle(prop) : prop;\n                prop = {\n                    ...prop,\n                    ...style\n                };\n                const state = em.get('state');\n                const cc = em.get('CssComposer');\n                const propOrig = this.getStyle();\n                this.rule = cc.setIdRule(this.getId(), prop, {\n                    ...opts,\n                    state\n                });\n                const diff = b.shallowDiff(propOrig, prop);\n                this.set('style', {}, { silent: 1 });\n                _.keys(diff).forEach(pr => this.trigger(`change:style:${ pr }`));\n            } else {\n                prop = Styleable.setStyle.apply(this, arguments);\n            }\n            return prop;\n        },\n        getAttributes() {\n            const {em} = this;\n            const classes = [];\n            const attributes = { ...this.get('attributes') };\n            const sm = em && em.get('SelectorManager');\n            const id = this.getId();\n            this.get('classes').forEach(cls => classes.push(_.isString(cls) ? cls : cls.get('name')));\n            classes.length && (attributes.class = classes.join(' '));\n            if (!_.has(attributes, 'id')) {\n                let hasStyle;\n                if (avoidInline(em)) {\n                    hasStyle = sm && sm.get(id, sm.Selector.TYPE_ID);\n                } else if (!_.isEmpty(this.getStyle())) {\n                    hasStyle = 1;\n                }\n                if (hasStyle) {\n                    attributes.id = this.getId();\n                }\n            }\n            return attributes;\n        },\n        addClass(classes) {\n            const added = this.em.get('SelectorManager').addClass(classes);\n            return this.get('classes').add(added);\n        },\n        setClass(classes) {\n            this.get('classes').reset();\n            return this.addClass(classes);\n        },\n        removeClass(classes) {\n            const removed = [];\n            classes = _.isArray(classes) ? classes : [classes];\n            const selectors = this.get('classes');\n            const type = Selector.TYPE_CLASS;\n            classes.forEach(classe => {\n                const classes = classe.split(' ');\n                classes.forEach(name => {\n                    const selector = selectors.where({\n                        name,\n                        type\n                    })[0];\n                    selector && removed.push(selectors.remove(selector));\n                });\n            });\n            return removed;\n        },\n        getClasses() {\n            const attr = this.getAttributes();\n            const classStr = attr.class;\n            return classStr ? classStr.split(' ') : [];\n        },\n        initClasses() {\n            const event = 'change:classes';\n            const toListen = [\n                this,\n                event,\n                this.initClasses\n            ];\n            const cls = this.get('classes') || [];\n            const clsArr = _.isString(cls) ? cls.split(' ') : cls;\n            this.stopListening(...toListen);\n            const classes = this.normalizeClasses(clsArr);\n            const selectors = new Selectors([]);\n            this.set('classes', selectors);\n            selectors.add(classes);\n            this.listenTo(...toListen);\n            return this;\n        },\n        initComponents() {\n            const event = 'change:components';\n            const toListen = [\n                this,\n                event,\n                this.initComponents\n            ];\n            this.stopListening(...toListen);\n            const comps = new Components(null, this.opt);\n            comps.parent = this;\n            const components = this.get('components');\n            const addChild = !this.opt.avoidChildren;\n            this.set('components', comps);\n            addChild && comps.add(_.isFunction(components) ? components(this) : components);\n            this.listenTo(...toListen);\n            return this;\n        },\n        initTraits(changed) {\n            const {em} = this;\n            const event = 'change:traits';\n            const toListen = [\n                this,\n                event,\n                this.initTraits\n            ];\n            this.stopListening(...toListen);\n            this.loadTraits();\n            const attrs = { ...this.get('attributes') };\n            const traits = this.get('traits');\n            traits.each(trait => {\n                if (!trait.get('changeProp')) {\n                    const name = trait.get('name');\n                    const value = trait.getInitValue();\n                    if (name && value)\n                        attrs[name] = value;\n                }\n            });\n            traits.length && this.set('attributes', attrs);\n            this.listenTo(...toListen);\n            changed && em && em.trigger('component:toggled');\n            return this;\n        },\n        append(components, opts = {}) {\n            const result = this.components().add(components, opts);\n            return _.isArray(result) ? result : [result];\n        },\n        components(components) {\n            const coll = this.get('components');\n            if (_.isUndefined(components)) {\n                return coll;\n            } else {\n                coll.reset();\n                return components && this.append(components);\n            }\n        },\n        parent() {\n            const coll = this.collection;\n            return coll && coll.parent;\n        },\n        scriptUpdated() {\n            this.set('scriptUpdated', 1);\n        },\n        initToolbar() {\n            const {em} = this;\n            const model = this;\n            const ppfx = em && em.getConfig('stylePrefix') || '';\n            if (!model.get('toolbar')) {\n                var tb = [];\n                if (model.collection) {\n                    tb.push({\n                        attributes: { class: 'fa fa-arrow-up' },\n                        command: ed => ed.runCommand('core:component-exit', { force: 1 })\n                    });\n                }\n                if (model.get('draggable')) {\n                    tb.push({\n                        attributes: {\n                            class: `fa fa-arrows ${ ppfx }no-touch-actions`,\n                            draggable: true\n                        },\n                        command: 'tlb-move'\n                    });\n                }\n                if (model.get('copyable')) {\n                    tb.push({\n                        attributes: { class: 'fa fa-clone' },\n                        command: 'tlb-clone'\n                    });\n                }\n                if (model.get('removable')) {\n                    tb.push({\n                        attributes: { class: 'fa fa-trash-o' },\n                        command: 'tlb-delete'\n                    });\n                }\n                model.set('toolbar', tb);\n            }\n        },\n        loadTraits(traits, opts = {}) {\n            traits = traits || this.get('traits');\n            traits = _.isFunction(traits) ? traits(this) : traits;\n            if (!(traits instanceof Traits)) {\n                const trt = new Traits([], this.opt);\n                trt.setTarget(this);\n                if (traits.length) {\n                    traits.forEach(tr => tr.attributes && delete tr.attributes.value);\n                    trt.add(traits);\n                }\n                this.set('traits', trt, opts);\n            }\n            return this;\n        },\n        getTrait(id) {\n            return this.get('traits').filter(trait => {\n                return trait.get('id') === id || trait.get('name') === id;\n            })[0];\n        },\n        updateTrait(id, props) {\n            const {em} = this;\n            const trait = this.getTrait(id);\n            trait && trait.set(props);\n            em && em.trigger('component:toggled');\n            return this;\n        },\n        getTraitIndex(id) {\n            const trait = this.getTrait(id);\n            return trait ? this.get('traits').indexOf(trait) : trait;\n        },\n        removeTrait(id) {\n            const {em} = this;\n            const ids = _.isArray(id) ? id : [id];\n            const toRemove = ids.map(id => this.getTrait(id));\n            const removed = this.get('traits').remove(toRemove);\n            em && em.trigger('component:toggled');\n            return removed;\n        },\n        addTrait(trait, opts = {}) {\n            const {em} = this;\n            const added = this.get('traits').add(trait, opts);\n            em && em.trigger('component:toggled');\n            return added;\n        },\n        normalizeClasses(arr) {\n            var res = [];\n            const em = this.em;\n            if (!em)\n                return;\n            var clm = em.get('SelectorManager');\n            if (!clm)\n                return;\n            arr.forEach(val => {\n                var name = '';\n                if (typeof val === 'string')\n                    name = val;\n                else\n                    name = val.name;\n                var model = clm.add(name);\n                res.push(model);\n            });\n            return res;\n        },\n        clone() {\n            const em = this.em;\n            const style = this.getStyle();\n            const attr = { ...this.attributes };\n            const opts = { ...this.opt };\n            attr.attributes = { ...attr.attributes };\n            delete attr.attributes.id;\n            attr.components = [];\n            attr.classes = [];\n            attr.traits = [];\n            this.get('components').each((md, i) => {\n                attr.components[i] = md.clone();\n            });\n            this.get('traits').each((md, i) => {\n                attr.traits[i] = md.clone();\n            });\n            this.get('classes').each((md, i) => {\n                attr.classes[i] = md.get('name');\n            });\n            attr.status = '';\n            attr.view = '';\n            opts.collection = null;\n            if (em && em.getConfig('avoidInlineStyle') && !_.isEmpty(style)) {\n                attr.style = style;\n            }\n            const cloned = new this.constructor(attr, opts);\n            const event = 'component:clone';\n            em && em.trigger(event, cloned);\n            this.trigger(event, cloned);\n            return cloned;\n        },\n        getName() {\n            const {em} = this;\n            const {type, tagName} = this.attributes;\n            const cName = this.get('name');\n            const isDiv = tagName == 'div';\n            const tag = isDiv ? 'box' : tagName;\n            const defName = type || tag;\n            const nameTag = !type && tagName && !isDiv && tagName;\n            const i18nPfx = 'domComponents.names.';\n            const i18nName = cName && em && em.t(`${ i18nPfx }${ cName }`);\n            const i18nNameTag = nameTag && em && em.t(`${ i18nPfx }${ nameTag }`);\n            const i18nDefName = em && (em.t(`${ i18nPfx }${ type }`) || em.t(`${ i18nPfx }${ tagName }`));\n            return this.get('custom-name') || i18nName || cName || i18nNameTag || b.capitalize(nameTag) || i18nDefName || b.capitalize(defName);\n        },\n        getIcon() {\n            let icon = this.get('icon');\n            return icon ? icon + ' ' : '';\n        },\n        toHTML(opts = {}) {\n            const model = this;\n            const attrs = [];\n            const customTag = opts.tag;\n            const tag = customTag || model.get('tagName');\n            const sTag = model.get('void');\n            const customAttr = opts.attributes;\n            let attributes = this.getAttrToHTML();\n            delete opts.tag;\n            if (customAttr) {\n                if (_.isFunction(customAttr)) {\n                    attributes = customAttr(model, attributes) || {};\n                } else if (_.isObject(customAttr)) {\n                    attributes = customAttr;\n                }\n            }\n            for (let attr in attributes) {\n                const val = attributes[attr];\n                const value = _.isString(val) ? val.replace(/\"/g, '&quot;') : val;\n                if (!_.isUndefined(value)) {\n                    if (_.isBoolean(value)) {\n                        value && attrs.push(attr);\n                    } else {\n                        attrs.push(`${ attr }=\"${ value }\"`);\n                    }\n                }\n            }\n            let attrString = attrs.length ? ` ${ attrs.join(' ') }` : '';\n            let code = `<${ tag }${ attrString }${ sTag ? '/' : '' }>${ model.get('content') }`;\n            model.get('components').each(comp => code += comp.toHTML(opts));\n            !sTag && (code += `</${ tag }>`);\n            return code;\n        },\n        getAttrToHTML() {\n            var attr = this.getAttributes();\n            delete attr.style;\n            return attr;\n        },\n        toJSON(...args) {\n            const obj = Backbone.Model.prototype.toJSON.apply(this, args);\n            obj.attributes = this.getAttributes();\n            delete obj.attributes.class;\n            delete obj.toolbar;\n            delete obj.traits;\n            if (this.em.getConfig('avoidDefaults')) {\n                const defaults = _.result(this, 'defaults');\n                _.forEach(defaults, (value, key) => {\n                    if ([\n                            'type',\n                            'content'\n                        ].indexOf(key) === -1 && obj[key] === value) {\n                        delete obj[key];\n                    }\n                });\n                if (_.isEmpty(obj.type)) {\n                    delete obj.type;\n                }\n                _.forEach([\n                    'attributes',\n                    'style'\n                ], prop => {\n                    if (_.isEmpty(defaults[prop]) && _.isEmpty(obj[prop])) {\n                        delete obj[prop];\n                    }\n                });\n                _.forEach([\n                    'classes',\n                    'components'\n                ], prop => {\n                    if (_.isEmpty(defaults[prop]) && !obj[prop].length) {\n                        delete obj[prop];\n                    }\n                });\n            }\n            return obj;\n        },\n        getId() {\n            let attrs = this.get('attributes') || {};\n            return attrs.id || this.ccid || this.cid;\n        },\n        setId(id, opts) {\n            const attrs = { ...this.get('attributes') };\n            attrs.id = id;\n            this.set('attributes', attrs, opts);\n            return this;\n        },\n        getEl(frame) {\n            const view = this.getView(frame);\n            return view && view.el;\n        },\n        getView(frame) {\n            let {view, views} = this;\n            if (frame) {\n                view = views.filter(view => view._getFrame() === frame.view)[0];\n            }\n            return view;\n        },\n        getCurrentView() {\n            const frame = (this.em.get('currentFrame') || {}).model;\n            return this.getView(frame);\n        },\n        getScriptString(script) {\n            var scr = script || this.get('script');\n            if (!scr) {\n                return scr;\n            }\n            if (typeof scr == 'function') {\n                var scrStr = scr.toString().trim();\n                scrStr = scrStr.replace(/^function[\\s\\w]*\\(\\)\\s?\\{/, '').replace(/\\}$/, '');\n                scr = scrStr.trim();\n            }\n            var config = this.em.getConfig();\n            var tagVarStart = escapeRegExp(config.tagVarStart || '{[ ');\n            var tagVarEnd = escapeRegExp(config.tagVarEnd || ' ]}');\n            var reg = new RegExp(`${ tagVarStart }([\\\\w\\\\d-]*)${ tagVarEnd }`, 'g');\n            scr = scr.replace(reg, (match, v) => {\n                this.scriptUpdated();\n                const result = this.attributes[v] || '';\n                return _.isArray(result) || typeof result == 'object' ? JSON.stringify(result) : result;\n            });\n            return scr;\n        },\n        emitUpdate(property, ...args) {\n            const em = this.em;\n            const event = 'component:update' + (property ? `:${ property }` : '');\n            property && this.updated(property, property && this.get(property), property && this.previous(property), ...args);\n            this.trigger(event, ...args);\n            em && em.trigger(event, this, ...args);\n        },\n        onAll(clb) {\n            if (_.isFunction(clb)) {\n                clb(this);\n                this.components().forEach(model => model.onAll(clb));\n            }\n            return this;\n        },\n        remove() {\n            const coll = this.collection;\n            return coll && coll.remove(this);\n        },\n        resetId(opts = {}) {\n            const {em} = this;\n            const oldId = this.getId();\n            if (!oldId)\n                return;\n            const newId = Component.createId(this);\n            this.setId(newId);\n            const rule = em && em.get('CssComposer').getIdRule(oldId);\n            const selector = rule && rule.get('selectors').at(0);\n            selector && selector.set('name', newId);\n            return this;\n        },\n        _getStyleRule({id} = {}) {\n            const {em} = this;\n            const idS = id || this.getId();\n            return em && em.get('CssComposer').getIdRule(idS);\n        },\n        _getStyleSelector(opts) {\n            const rule = this._getStyleRule(opts);\n            return rule && rule.get('selectors').at(0);\n        },\n        _idUpdated(m, v, opts = {}) {\n            if (opts.idUpdate)\n                return;\n            const {ccid} = this;\n            const {id} = this.get('attributes') || {};\n            const idPrev = (this.previous('attributes') || {}).id || ccid;\n            const list = Component.getList(this);\n            if (list[id]) {\n                return this.setId(idPrev, { idUpdate: 1 });\n            }\n            delete list[idPrev];\n            list[id] = this;\n            this.ccid = id;\n            const selector = this._getStyleSelector({ id: idPrev });\n            selector && selector.set({\n                name: id,\n                label: id\n            });\n        }\n    }, {\n        isComponent(el) {\n            return { tagName: el.tagName ? el.tagName.toLowerCase() : '' };\n        },\n        createId(model) {\n            const list = Component.getList(model);\n            let {id} = model.get('attributes');\n            let nextId;\n            if (id) {\n                nextId = Component.getIncrementId(id, list);\n                model.setId(nextId);\n            } else {\n                nextId = Component.getNewId(list);\n            }\n            list[nextId] = model;\n            return nextId;\n        },\n        getNewId(list) {\n            const count = Object.keys(list).length;\n            const ilen = count.toString().length + 2;\n            const uid = (Math.random() + 1.1).toString(36).slice(-ilen);\n            let newId = `i${ uid }`;\n            while (list[newId]) {\n                newId = Component.getNewId(list);\n            }\n            return newId;\n        },\n        getIncrementId(id, list) {\n            let counter = 1;\n            let newId = id;\n            while (list[newId]) {\n                counter++;\n                newId = `${ id }-${ counter }`;\n            }\n            return newId;\n        },\n        getList(model) {\n            const domc = model.opt && model.opt.domc;\n            return domc ? domc.componentsById : {};\n        },\n        checkId(components, styles = [], list = {}) {\n            const comps = _.isArray(components) ? components : [components];\n            comps.forEach(comp => {\n                const {attributes = {}, components} = comp;\n                const {id} = attributes;\n                if (id && list[id]) {\n                    const newId = Component.getIncrementId(id, list);\n                    attributes.id = newId;\n                    _.isArray(styles) && styles.forEach(style => {\n                        const {selectors} = style;\n                        selectors.forEach((sel, idx) => {\n                            if (sel === `#${ id }`)\n                                selectors[idx] = `#${ newId }`;\n                        });\n                    });\n                }\n                components && Component.checkId(components, styles, list);\n            });\n        }\n    });\n    \n    Component.eventDrag = eventDrag;\n\n    Components.Component = Component;\n    \n    \n    return Component;\n});"]}
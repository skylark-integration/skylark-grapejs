{"version":3,"sources":["dom_components/model/ComponentSvg.js"],"names":["define","Component","extend","defaults","prototype","resizable","ratioDefault","highlightable","[object Object]","name","this","get","customName","charAt","toUpperCase","slice","el","SVGElement","tagName","type"],"mappings":";;;;;;;AAAAA,QAAQ,eAAgB,SAAUC,GAC9B,aACA,OAAOA,EAAUC,QACbC,aACOF,EAAUG,UAAUD,SACvBE,WAAaC,aAAc,GAC3BC,cAAe,GAEnBC,UACI,IAAIC,EAAOC,KAAKC,IAAI,WAChBC,EAAaF,KAAKC,IAAI,eAE1B,OADAF,EAAOA,EAAKI,OAAO,GAAGC,cAAgBL,EAAKM,MAAM,GAC1CH,GAAcH,KAGzBD,YAAYQ,GACR,GAAIC,YAAcD,aAAcC,WAC5B,OACIC,QAASF,EAAGE,QACZC,KAAM","file":"../../../dom_components/model/ComponentSvg.js","sourcesContent":["define(['./Component'], function (Component) {\n    'use strict';\n    return Component.extend({\n        defaults: {\n            ...Component.prototype.defaults,\n            resizable: { ratioDefault: 1 },\n            highlightable: 0\n        },\n        getName() {\n            let name = this.get('tagName');\n            let customName = this.get('custom-name');\n            name = name.charAt(0).toUpperCase() + name.slice(1);\n            return customName || name;\n        }\n    }, {\n        isComponent(el) {\n            if (SVGElement && el instanceof SVGElement) {\n                return {\n                    tagName: el.tagName,\n                    type: 'svg'\n                };\n            }\n        }\n    });\n});"]}
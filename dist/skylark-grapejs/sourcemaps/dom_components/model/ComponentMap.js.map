{"version":3,"sources":["dom_components/model/ComponentMap.js"],"names":["define","Component","OComponent","extend","defaults","prototype","type","src","void","mapUrl","tagName","mapType","address","zoom","attributes","frameborder","toolbar","traits","label","name","placeholder","changeProp","options","value","min","max","[object Object]","o","opt","this","get","parseFromSrc","updateSrc","initialize","apply","arguments","listenTo","set","getMapUrl","addr","result","qr","parseUri","query","q","z","t","el","test"],"mappings":";;;;;;;AAAAA,QACI,mBACA,eACD,SAAUC,EAAWC,GACpB,aACA,OAAOD,EAAUE,QACbC,aACOH,EAAUI,UAAUD,SACvBE,KAAM,MACNC,IAAK,GACLC,KAAM,EACNC,OAAQ,+BACRC,QAAS,SACTC,QAAS,IACTC,QAAS,GACTC,KAAM,IACNC,YAAcC,YAAa,GAC3BC,QAASd,EAAWG,UAAUD,SAASY,QACvCC,SAEQC,MAAO,UACPC,KAAM,UACNC,YAAa,iBACbC,WAAY,IAGZf,KAAM,SACNY,MAAO,WACPC,KAAM,UACNE,WAAY,EACZC,UAEQC,MAAO,IACPJ,KAAM,YAGNI,MAAO,IACPJ,KAAM,gBAKdD,MAAO,OACPC,KAAM,OACNb,KAAM,QACNkB,IAAK,IACLC,IAAK,KACLJ,WAAY,KAIxBK,WAAWC,EAAGC,GACNC,KAAKC,IAAI,OACTD,KAAKE,eAELF,KAAKG,YACT/B,EAAUI,UAAU4B,WAAWC,MAAML,KAAMM,WAC3CN,KAAKO,SAASP,KAAM,4CAA6CA,KAAKG,YAE1EN,YACIG,KAAKQ,IAAI,MAAOR,KAAKS,cAEzBZ,YACI,IACIa,EADKV,KACKC,IAAI,WACdjB,EAFKgB,KAEKC,IAAI,QACdxB,EAHKuB,KAGKC,IAAI,WAElBS,EAAOA,EAAO,MAAQA,EAAO,GAC7B1B,EAAOA,EAAO,MAAQA,EAAO,GAC7BP,EAAOA,EAAO,MAAQA,EAAO,GAC7B,IAAIkC,EARKX,KAQOC,IAAI,UAAY,IAAMS,EAAO1B,EAAOP,EAEpD,OADAkC,GAAU,iBAGdd,eACI,IACIe,EADMZ,KAAKa,SAASb,KAAKC,IAAI,QACpBa,MACTF,EAAGG,GACHf,KAAKQ,IAAI,UAAWI,EAAGG,GACvBH,EAAGI,GACHhB,KAAKQ,IAAI,OAAQI,EAAGI,GACpBJ,EAAGK,GACHjB,KAAKQ,IAAI,UAAWI,EAAGK,MAG/BpB,YAAYqB,GACR,IAAIP,EAAS,GAOb,MANkB,UAAdO,EAAGrC,SAAuB,oBAAoBsC,KAAKD,EAAGxC,OACtDiC,GACIlC,KAAM,MACNC,IAAKwC,EAAGxC,MAGTiC","file":"../../../dom_components/model/ComponentMap.js","sourcesContent":["define([\n    './ComponentImage',\n    './Component'\n], function (Component, OComponent) {\n    'use strict';\n    return Component.extend({\n        defaults: {\n            ...Component.prototype.defaults,\n            type: 'map',\n            src: '',\n            void: 0,\n            mapUrl: 'https://maps.google.com/maps',\n            tagName: 'iframe',\n            mapType: 'q',\n            address: '',\n            zoom: '1',\n            attributes: { frameborder: 0 },\n            toolbar: OComponent.prototype.defaults.toolbar,\n            traits: [\n                {\n                    label: 'Address',\n                    name: 'address',\n                    placeholder: 'eg. London, UK',\n                    changeProp: 1\n                },\n                {\n                    type: 'select',\n                    label: 'Map type',\n                    name: 'mapType',\n                    changeProp: 1,\n                    options: [\n                        {\n                            value: 'q',\n                            name: 'Roadmap'\n                        },\n                        {\n                            value: 'w',\n                            name: 'Satellite'\n                        }\n                    ]\n                },\n                {\n                    label: 'Zoom',\n                    name: 'zoom',\n                    type: 'range',\n                    min: '1',\n                    max: '20',\n                    changeProp: 1\n                }\n            ]\n        },\n        initialize(o, opt) {\n            if (this.get('src'))\n                this.parseFromSrc();\n            else\n                this.updateSrc();\n            Component.prototype.initialize.apply(this, arguments);\n            this.listenTo(this, 'change:address change:zoom change:mapType', this.updateSrc);\n        },\n        updateSrc() {\n            this.set('src', this.getMapUrl());\n        },\n        getMapUrl() {\n            var md = this;\n            var addr = md.get('address');\n            var zoom = md.get('zoom');\n            var type = md.get('mapType');\n            var size = '';\n            addr = addr ? '&q=' + addr : '';\n            zoom = zoom ? '&z=' + zoom : '';\n            type = type ? '&t=' + type : '';\n            var result = md.get('mapUrl') + '?' + addr + zoom + type;\n            result += '&output=embed';\n            return result;\n        },\n        parseFromSrc() {\n            var uri = this.parseUri(this.get('src'));\n            var qr = uri.query;\n            if (qr.q)\n                this.set('address', qr.q);\n            if (qr.z)\n                this.set('zoom', qr.z);\n            if (qr.t)\n                this.set('mapType', qr.t);\n        }\n    }, {\n        isComponent(el) {\n            var result = '';\n            if (el.tagName == 'IFRAME' && /maps\\.google\\.com/.test(el.src)) {\n                result = {\n                    type: 'map',\n                    src: el.src\n                };\n            }\n            return result;\n        }\n    });\n});"]}
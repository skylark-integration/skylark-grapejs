{"version":3,"sources":["editor/view/EditorView.js"],"names":["define","$","Backbone","mixins","View","extend","[object Object]","model","this","view","conf","config","pn","get","cv","on","active","disableButtons","setTimeout","runDefault","trigger","$el","pfx","stylePrefix","contEl","el","container","appendStyles","cssIcons","unique","prepand","empty","width","css","height","append","render","attr","addClass"],"mappings":";;;;;;;AAAAA,QACI,iBACA,mBACA,sBACD,SAAUC,EAAEC,EAAUC,GACrB,aACA,OAAOD,EAASE,KAAKC,QACjBC,aACI,MAAMC,MAACA,GAASC,KAChBD,EAAME,KAAOD,KACbA,KAAKE,KAAOH,EAAMI,OAClBH,KAAKI,GAAKL,EAAMM,IAAI,UACpBL,KAAKM,GAAKP,EAAMM,IAAI,UACpBN,EAAMQ,GAAG,SAAU,KACfP,KAAKI,GAAGI,SACRR,KAAKI,GAAGK,iBACRC,WAAW,KACPX,EAAMY,aACNZ,EAAMa,QAAQ,OAAQb,EAAMM,IAAI,gBAI5CP,SACI,MAAMC,MAACA,EAAKc,IAAEA,EAAGX,KAAEA,GAAQF,KACrBc,EAAMZ,EAAKa,YACXC,EAASvB,EAAES,EAAKe,YAAef,EAAKgB,aAc1C,OAbAvB,EAAOwB,aAAajB,EAAKkB,UACrBC,OAAQ,EACRC,QAAS,IAEbT,EAAIU,QACArB,EAAKsB,OACLR,EAAOS,IAAI,QAASvB,EAAKsB,OACzBtB,EAAKwB,QACLV,EAAOS,IAAI,SAAUvB,EAAKwB,QAC9Bb,EAAIc,OAAO3B,KAAKM,GAAGsB,UACnBf,EAAIc,OAAO3B,KAAKI,GAAGwB,UACnBf,EAAIgB,KAAK,WAAaf,WAAeA,WAAeA,cACpDE,EAAOc,YAAahB,gBAAmBS,QAAQI,OAAOd,GAC/Cb","file":"../../../editor/view/EditorView.js","sourcesContent":["define([\n    \"skylark-jquery\",\n    'skylark-backbone',\n    '../../utils/mixins'\n], function ($,Backbone, mixins) {\n    'use strict';\n    return Backbone.View.extend({\n        initialize() {\n            const {model} = this;\n            model.view = this;\n            this.conf = model.config;\n            this.pn = model.get('Panels');\n            this.cv = model.get('Canvas');\n            model.on('loaded', () => {\n                this.pn.active();\n                this.pn.disableButtons();\n                setTimeout(() => {\n                    model.runDefault();\n                    model.trigger('load', model.get('Editor'));\n                });\n            });\n        },\n        render() {\n            const {model, $el, conf} = this;\n            const pfx = conf.stylePrefix;\n            const contEl = $(conf.el || `body ${ conf.container }`);\n            mixins.appendStyles(conf.cssIcons, {\n                unique: 1,\n                prepand: 1\n            });\n            $el.empty();\n            if (conf.width)\n                contEl.css('width', conf.width);\n            if (conf.height)\n                contEl.css('height', conf.height);\n            $el.append(this.cv.render());\n            $el.append(this.pn.render());\n            $el.attr('class', `${ pfx }editor ${ pfx }one-bg ${ pfx }two-color`);\n            contEl.addClass(`${ pfx }editor-cont`).empty().append($el);\n            return this;\n        }\n    });\n});"]}
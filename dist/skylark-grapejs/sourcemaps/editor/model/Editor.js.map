{"version":3,"sources":["editor/model/Editor.js"],"names":["define","langx","_","$","Backbone","Extender","b","_utils","_i18n","_keymaps","_undo_manager","_storage_manager","_device_manager","_parser","_selector_manager","_style_manager","_modal_dialog","_code_manager","_panels","_rich_text_editor","_asset_manager","_css_composer","_trait_manager","_dom_components","_navigator","_canvas","_commands","_block_manager","deps","Collection","timedInterval","updateItr","logs","debug","console","log","info","warning","warn","error","Model","extend","defaults","editing","selected","clipboard","dmode","componentHovered","previousModel","changesCount","storables","modules","toLoad","opened","device","[object Object]","c","this","config","set","dragMode","el","toLog","keys","isArray","bindAll","fromElement","components","innerHTML","attrsOrig","toArray","attributes","reduce","res","next","nodeName","nodeValue","forEach","name","loadModule","on","updateChanges","e","listenLog","from","to","event","eventFrom","eventTo","listenTo","args","trigger","logWarning","prop","isUndefined","clb","sm","get","module","onLoad","postLoad","canAutoload","load","stm","changes","clearTimeout","setTimeout","noticeOnUnload","window","onbeforeunload","isAutosave","getStepsBeforeSave","store","moduleName","Mod","default","charAt","toLowerCase","slice","cfgParent","cfg","pStylePrefix","_disable","storageKey","mth","em","init","private","push","editor","model","val","opt","temporary","clearInterval","avoidStore","component","options","prev","previous","last","models","opts","multiple","els","added","removeSelected","filter","s","contains","getModel","addSelected","forceChange","remove","setComponents","cmp","cm","wrp","getComponents","getCode","style","rules","getAll","i","len","length","pop","add","value","exportWrapper","wrapperIsBody","js","jsInHtml","getJs","getComponent","html","avoidProt","avoidProtected","keepUnusedStyles","cssc","protectedCss","getWrapper","trim","m","obj","getCacheLoad","force","cacheLoad","key","isFunction","k","command","defaultCommand","defaultRunning","stop","run","getOffset","win","getSelection","removeAllRanges","getDeviceModel","condition","mediaCondition","preview","devicePreviewMode","width","frameView","getCurrentFrame","getZoomDecimal","getZoomMultiplier","t","DomComponents","CssComposer","UndoManager","Panels","Canvas","Keymaps","RichTextEditor","clear","removeAll","getPanels","reset","getCanvasView","destroy","view","stopListening","empty","attr","msg","ns","level","logNs","mixin","evel","getConfig","colorPicker","elToAppend","ppfx","stylePrefix","spectrum","containerClassName","appendTo","maxSelectionSize","showPalette","palette","showAlpha","chooseText","cancelText"],"mappings":";;;;;;;AAAAA,QACI,sBACA,qBACA,iBACA,mBACA,uBACA,qBACA,oBACA,mBACA,sBACA,2BACA,8BACA,6BACA,qBACA,+BACA,4BACA,2BACA,2BACA,qBACA,+BACA,4BACA,2BACA,4BACA,6BACA,wBACA,qBACA,uBACA,6BACD,SAAUC,EAAMC,EAAGC,EAAGC,EAAUC,EAAUC,EACzCC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAEA,aACAvB,EAASD,EAAIA,EACb,MAAMyB,GACFrB,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,IAEEE,WAACA,GAAczB,EACrB,IAAI0B,EACAC,EACJ1B,GACID,SAAUA,EACVD,EAAGC,EAASD,IAEhB,MAAM6B,GACFC,MAAOC,QAAQC,IACfC,KAAMF,QAAQE,KACdC,QAASH,QAAQI,KACjBC,MAAOL,QAAQK,OAEnB,OAAOnC,EAASoC,MAAMC,QAClBC,SAAQ,MAEAC,QAAS,EACTC,SAAU,IAAIf,EACdgB,UAAW,KACXC,MAAO,EACPC,iBAAkB,KAClBC,cAAe,KACfC,aAAc,EACdC,aACAC,WACAC,UACAC,UACAC,OAAQ,KAGhBC,WAAWC,MACPC,KAAKC,OAASF,EACdC,KAAKE,IAAI,SAAUH,GACnBC,KAAKE,IAAI,cACTF,KAAKE,IAAI,aACTF,KAAKE,IAAI,gBACTF,KAAKE,IAAI,QAASH,EAAEI,UACpB,MAAMC,EAAKL,EAAEK,GACP1B,EAAMqB,EAAErB,IACR2B,GAAgB,IAAR3B,EAAejC,EAAE6D,KAAK/B,GAAQ9B,EAAE8D,QAAQ7B,GAAOA,KAC7DjC,EAAE+D,QAAQR,KAAM,uBACZI,GAAML,EAAEU,cACRT,KAAKC,OAAOS,WAAaN,EAAGO,WAChCX,KAAKY,UAAYR,EAAK3D,EAAEoE,QAAQT,EAAGU,YAAY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","file":"../../../editor/model/Editor.js","sourcesContent":["define([\n    \"skylark-langx/langx\",\n    'skylark-underscore',\n    'skylark-jquery',\n    'skylark-backbone',\n    '../../utils/extender',\n    '../../utils/mixins',\n    \"../../utils/index\",\n    \"../../i18n/index\",\n    \"../../keymaps/index\",\n    \"../../undo_manager/index\",\n    \"../../storage_manager/index\",\n    \"../../device_manager/index\",\n    \"../../parser/index\",\n    \"../../selector_manager/index\",\n    \"../../style_manager/index\",\n    \"../../modal_dialog/index\",\n    \"../../code_manager/index\",\n    \"../../panels/index\",\n    \"../../rich_text_editor/index\",\n    \"../../asset_manager/index\",\n    \"../../css_composer/index\",\n    \"../../trait_manager/index\",\n    \"../../dom_components/index\",\n    \"../../navigator/index\",\n    \"../../canvas/index\",\n    \"../../commands/index\",\n    \"../../block_manager/index\"\n], function (langx,_, $, Backbone, Extender, b,\n    _utils,\n    _i18n,\n    _keymaps,\n    _undo_manager,\n    _storage_manager,\n    _device_manager,\n    _parser,\n    _selector_manager,\n    _style_manager,\n    _modal_dialog,\n    _code_manager,\n    _panels,\n    _rich_text_editor,\n    _asset_manager,\n    _css_composer,\n    _trait_manager,\n    _dom_components,\n    _navigator,\n    _canvas,\n    _commands,\n    _block_manager\n) {\n    'use strict';\n    Backbone.$ = $;\n    const deps = [\n        _utils,\n        _i18n,\n        _keymaps,\n        _undo_manager,\n        _storage_manager,\n        _device_manager,\n        _parser,\n        _selector_manager,\n        _style_manager,\n        _modal_dialog,\n        _code_manager,\n        _panels,\n        _rich_text_editor,\n        _asset_manager,\n        _css_composer,\n        _trait_manager,\n        _dom_components,\n        _navigator,\n        _canvas,\n        _commands,\n        _block_manager\n    ];\n    const {Collection} = Backbone;\n    let timedInterval;\n    let updateItr;\n    Extender({\n        Backbone: Backbone,\n        $: Backbone.$\n    });\n    const logs = {\n        debug: console.log,\n        info: console.info,\n        warning: console.warn,\n        error: console.error\n    };\n    return Backbone.Model.extend({\n        defaults() {\n            return {\n                editing: 0,\n                selected: new Collection(),\n                clipboard: null,\n                dmode: 0,\n                componentHovered: null,\n                previousModel: null,\n                changesCount: 0,\n                storables: [],\n                modules: [],\n                toLoad: [],\n                opened: {},\n                device: ''\n            };\n        },\n        initialize(c = {}) {\n            this.config = c;\n            this.set('Config', c);\n            this.set('modules', []);\n            this.set('toLoad', []);\n            this.set('storables', []);\n            this.set('dmode', c.dragMode);\n            const el = c.el;\n            const log = c.log;\n            const toLog = log === true ? _.keys(logs) : _.isArray(log) ? log : [];\n            _.bindAll(this, 'initBaseColorPicker');\n            if (el && c.fromElement)\n                this.config.components = el.innerHTML;\n            this.attrsOrig = el ? _.toArray(el.attributes).reduce((res, next) => {\n                res[next.nodeName] = next.nodeValue;\n                return res;\n            }, {}) : '';\n            deps.forEach(name => this.loadModule(name));\n            this.on('change:componentHovered', this.componentHovered, this);\n            this.on('change:changesCount', this.updateChanges, this);\n            toLog.forEach(e => this.listenLog(e));\n            [{\n                    from: 'change:selectedComponent',\n                    to: 'component:toggled'\n                }].forEach(event => {\n                const eventFrom = event.from;\n                const eventTo = event.to;\n                this.listenTo(this, eventFrom, (...args) => {\n                    this.trigger(eventTo, ...args);\n                    this.logWarning(`The event '${ eventFrom }' is deprecated, replace it with '${ eventTo }'`);\n                });\n            });\n        },\n        getContainer() {\n            return this.config.el;\n        },\n        listenLog(event) {\n            this.listenTo(this, `log:${ event }`, logs[event]);\n        },\n        getConfig(prop) {\n            const config = this.config;\n            return _.isUndefined(prop) ? config : config[prop];\n        },\n        loadOnStart(clb = null) {\n            const sm = this.get('StorageManager');\n            this.get('toLoad').forEach(module => {\n                module.onLoad();\n            });\n            const postLoad = () => {\n                const modules = this.get('modules');\n                modules.forEach(module => module.postLoad && module.postLoad(this));\n                clb && clb();\n            };\n            if (sm && sm.canAutoload()) {\n                this.load(postLoad);\n            } else {\n                postLoad();\n            }\n        },\n        updateChanges() {\n            const stm = this.get('StorageManager');\n            const changes = this.get('changesCount');\n            updateItr && clearTimeout(updateItr);\n            updateItr = setTimeout(() => this.trigger('update'));\n            if (this.config.noticeOnUnload) {\n                window.onbeforeunload = changes ? e => 1 : null;\n            }\n            if (stm.isAutosave() && changes >= stm.getStepsBeforeSave()) {\n                this.store();\n            }\n        },\n        loadModule(moduleName) {\n            const {config} = this;\n            const Module = moduleName.default || moduleName;\n            const Mod =  Module(); // new Module() modified by lwf\n            const name = Mod.name.charAt(0).toLowerCase() + Mod.name.slice(1);\n            const cfgParent = !_.isUndefined(config[name]) ? config[name] : config[Mod.name];\n            const cfg = cfgParent || {};\n            const sm = this.get('StorageManager');\n            cfg.pStylePrefix = config.pStylePrefix || '';\n            if (!_.isUndefined(cfgParent) && !cfgParent) {\n                cfg._disable = 1;\n            }\n            if (Mod.storageKey && Mod.store && Mod.load && sm) {\n                cfg.stm = sm;\n                const mth = name == 'domComponents' ? 'unshift' : 'push';\n                this.get('storables')[mth](Mod);\n            }\n            cfg.em = this;\n            Mod.init(cfg);\n            !Mod.private && this.set(Mod.name, Mod);\n            Mod.onLoad && this.get('toLoad').push(Mod);\n            this.get('modules').push(Mod);\n            return this;\n        },\n        init(editor) {\n            this.set('Editor', editor);\n        },\n        getEditor() {\n            return this.get('Editor');\n        },\n        handleUpdates(model, val, opt = {}) {\n            if (opt.temporary) {\n                return;\n            }\n            timedInterval && clearInterval(timedInterval);\n            timedInterval = setTimeout(() => {\n                if (!opt.avoidStore) {\n                    this.set('changesCount', this.get('changesCount') + 1, opt);\n                }\n            }, 0);\n        },\n        componentHovered(editor, component, options) {\n            const prev = this.previous('componentHovered');\n            prev && this.trigger('component:unhovered', prev, options);\n            component && this.trigger('component:hovered', component, options);\n        },\n        getSelected() {\n            return this.get('selected').last();\n        },\n        getSelectedAll() {\n            return this.get('selected').models;\n        },\n        setSelected(el, opts = {}) {\n            const multiple = _.isArray(el);\n            const els = multiple ? el : [el];\n            const selected = this.get('selected');\n            let added;\n            multiple && this.removeSelected(selected.filter(s => !_.contains(els, s)));\n            els.forEach(el => {\n                const model = b.getModel(el, $);\n                if (model && !model.get('selectable'))\n                    return;\n                !multiple && this.removeSelected(selected.filter(s => s !== model));\n                this.addSelected(model, opts);\n                added = model;\n            });\n        },\n        addSelected(el, opts = {}) {\n            const model = b.getModel(el, $);\n            const models = _.isArray(model) ? model : [model];\n            models.forEach(model => {\n                if (model && !model.get('selectable'))\n                    return;\n                const selected = this.get('selected');\n                opts.forceChange && selected.remove(model, opts);\n                selected.push(model, opts);\n            });\n        },\n        removeSelected(el, opts = {}) {\n            this.get('selected').remove(b.getModel(el, $), opts);\n        },\n        toggleSelected(el, opts = {}) {\n            const model = b.getModel(el, $);\n            const models = _.isArray(model) ? model : [model];\n            models.forEach(model => {\n                if (this.get('selected').contains(model)) {\n                    this.removeSelected(model, opts);\n                } else {\n                    this.addSelected(model, opts);\n                }\n            });\n        },\n        setHovered(el, opts = {}) {\n            const model = b.getModel(el, $);\n            if (model && !model.get('hoverable'))\n                return;\n            opts.forceChange && this.set('componentHovered', '');\n            this.set('componentHovered', model, opts);\n        },\n        getHovered() {\n            return this.get('componentHovered');\n        },\n        setComponents(components) {\n            return this.get('DomComponents').setComponents(components);\n        },\n        getComponents() {\n            var cmp = this.get('DomComponents');\n            var cm = this.get('CodeManager');\n            if (!cmp || !cm)\n                return;\n            var wrp = cmp.getComponents();\n            return cm.getCode(wrp, 'json');\n        },\n        setStyle(style) {\n            var rules = this.get('CssComposer').getAll();\n            for (var i = 0, len = rules.length; i < len; i++)\n                rules.pop();\n            rules.add(style);\n            return this;\n        },\n        getStyle() {\n            return this.get('CssComposer').getAll();\n        },\n        setState(value) {\n            this.set('state', value);\n            return this;\n        },\n        getState() {\n            return this.get('state');\n        },\n        getHtml() {\n            const config = this.config;\n            const exportWrapper = config.exportWrapper;\n            const wrapperIsBody = config.wrapperIsBody;\n            const js = config.jsInHtml ? this.getJs() : '';\n            var wrp = this.get('DomComponents').getComponent();\n            var html = this.get('CodeManager').getCode(wrp, 'html', {\n                exportWrapper,\n                wrapperIsBody\n            });\n            html += js ? `<script>${ js }</script>` : '';\n            return html;\n        },\n        getCss(opts = {}) {\n            const config = this.config;\n            const wrapperIsBody = config.wrapperIsBody;\n            const avoidProt = opts.avoidProtected;\n            const keepUnusedStyles = !_.isUndefined(opts.keepUnusedStyles) ? opts.keepUnusedStyles : config.keepUnusedStyles;\n            const cssc = this.get('CssComposer');\n            const wrp = this.get('DomComponents').getComponent();\n            const protCss = !avoidProt ? config.protectedCss : '';\n            return protCss + this.get('CodeManager').getCode(wrp, 'css', {\n                cssc,\n                wrapperIsBody,\n                keepUnusedStyles\n            });\n        },\n        getJs() {\n            var wrp = this.get('DomComponents').getWrapper();\n            return this.get('CodeManager').getCode(wrp, 'js').trim();\n        },\n        store(clb) {\n            var sm = this.get('StorageManager');\n            var store = {};\n            if (!sm)\n                return;\n            this.get('storables').forEach(m => {\n                var obj = m.store(1);\n                for (var el in obj)\n                    store[el] = obj[el];\n            });\n            sm.store(store, res => {\n                clb && clb(res);\n                this.set('changesCount', 0);\n                this.trigger('storage:store', store);\n            });\n            return store;\n        },\n        load(clb = null) {\n            this.getCacheLoad(1, res => {\n                this.get('storables').forEach(module => module.load(res));\n                clb && clb(res);\n            });\n        },\n        getCacheLoad(force, clb) {\n            if (this.cacheLoad && !force)\n                return this.cacheLoad;\n            const sm = this.get('StorageManager');\n            const load = [];\n            if (!sm)\n                return {};\n            this.get('storables').forEach(m => {\n                let key = m.storageKey;\n                key = _.isFunction(key) ? key() : key;\n                const keys = _.isArray(key) ? key : [key];\n                keys.forEach(k => load.push(k));\n            });\n            sm.load(load, res => {\n                this.cacheLoad = res;\n                clb && clb(res);\n                setTimeout(() => this.trigger('storage:load', res));\n            });\n        },\n        getDeviceModel() {\n            var name = this.get('device');\n            return this.get('DeviceManager').get(name);\n        },\n        runDefault(opts = {}) {\n            var command = this.get('Commands').get(this.config.defaultCommand);\n            if (!command || this.defaultRunning)\n                return;\n            command.stop(this, this, opts);\n            command.run(this, this, opts);\n            this.defaultRunning = 1;\n        },\n        stopDefault(opts = {}) {\n            var command = this.get('Commands').get(this.config.defaultCommand);\n            if (!command)\n                return;\n            command.stop(this, this, opts);\n            this.defaultRunning = 0;\n        },\n        refreshCanvas() {\n            this.set('canvasOffset', null);\n            this.set('canvasOffset', this.get('Canvas').getOffset());\n        },\n        clearSelection(win) {\n            var w = win || window;\n            w.getSelection().removeAllRanges();\n        },\n        getCurrentMedia() {\n            const config = this.config;\n            const device = this.getDeviceModel();\n            const condition = config.mediaCondition;\n            const preview = config.devicePreviewMode;\n            const width = device && device.get('widthMedia');\n            return device && width && !preview ? `(${ condition }: ${ width })` : '';\n        },\n        getWrapper() {\n            return this.get('DomComponents').getWrapper();\n        },\n        setCurrentFrame(frameView) {\n            return this.set('currentFrame', frameView);\n        },\n        getCurrentFrame() {\n            return this.get('currentFrame');\n        },\n        getCurrentFrameModel() {\n            return (this.getCurrentFrame() || {}).model;\n        },\n        getDirtyCount() {\n            return this.get('changesCount');\n        },\n        getZoomDecimal() {\n            return this.get('Canvas').getZoomDecimal();\n        },\n        getZoomMultiplier() {\n            return this.get('Canvas').getZoomMultiplier();\n        },\n        setDragMode(value) {\n            return this.set('dmode', value);\n        },\n        t(...args) {\n            return this.get('I18n').t(...args);\n        },\n        inAbsoluteMode() {\n            return this.get('dmode') === 'absolute';\n        },\n        destroyAll() {\n            const {DomComponents, CssComposer, UndoManager, Panels, Canvas, Keymaps, RichTextEditor} = this.attributes;\n            DomComponents.clear();\n            CssComposer.clear();\n            UndoManager.clear().removeAll();\n            Panels.getPanels().reset();\n            Canvas.getCanvasView().remove();\n            Keymaps.removeAll();\n            RichTextEditor.destroy();\n            this.view.remove();\n            this.stopListening();\n            $(this.config.el).empty().attr(this.attrsOrig);\n        },\n        setEditing(value) {\n            this.set('editing', value);\n            return this;\n        },\n        isEditing() {\n            return !!this.get('editing');\n        },\n        log(msg, opts = {}) {\n            const {ns, level = 'debug'} = opts;\n            this.trigger('log', msg, opts);\n            level && this.trigger(`log:${ level }`, msg, opts);\n            if (ns) {\n                const logNs = `log-${ ns }`;\n                this.trigger(logNs, msg, opts);\n                level && this.trigger(`${ logNs }:${ level }`, msg, opts);\n            }\n        },\n        logInfo(msg, opts) {\n            this.log(msg, langx.mixin({},opts, {evel: 'info' }));\n        },\n        logWarning(msg, opts) {\n            this.log(msg, langx.mixin({},opts, {evel: 'warning' }));\n        },\n        logError(msg, opts) {\n            this.log(msg, langx.mixin({},opts, {evel: 'error' }));\n        },\n        initBaseColorPicker(el, opts = {}) {\n            const config = this.getConfig();\n            const {\n                colorPicker = {}\n            } = config;\n            const elToAppend = config.el;\n            const ppfx = config.stylePrefix;\n            return $(el).spectrum(langx.mixin({\n                    containerClassName: `${ ppfx }one-bg ${ ppfx }two-color`,\n                    appendTo: elToAppend || 'body',\n                    maxSelectionSize: 8,\n                    showPalette: true,\n                    palette: [],\n                    showAlpha: true,\n                    chooseText: 'Ok',\n                    cancelText: '\\u2A2F',\n                },opts,colorPicker)\n            );\n        },\n        data(el, name, value) {\n            const varName = '_gjs-data';\n            if (!el[varName]) {\n                el[varName] = {};\n            }\n            if (_.isUndefined(value)) {\n                return el[varName][name];\n            } else {\n                el[varName][name] = value;\n            }\n        }\n    });\n});"]}
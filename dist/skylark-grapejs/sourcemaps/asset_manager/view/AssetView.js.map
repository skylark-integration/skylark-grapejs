{"version":3,"sources":["asset_manager/view/AssetView.js"],"names":["define","Backbone","_","View","extend","[object Object]","o","this","options","collection","config","pfx","stylePrefix","ppfx","pStylePrefix","em","className","listenTo","model","remove","view","init","bind","getPreview","getInfo","target","set","clone","get","el","innerHTML","template"],"mappings":";;;;;;;AAAAA,QACI,mBACA,sBACD,SAAUC,EAAUC,GACnB,aACA,OAAOD,EAASE,KAAKC,QACjBC,WAAWC,MACPC,KAAKC,QAAUF,EACfC,KAAKE,WAAaH,EAAEG,WACpB,MAAMC,EAASJ,EAAEI,WACjBH,KAAKG,OAASA,EACdH,KAAKI,IAAMD,EAAOE,aAAe,GACjCL,KAAKM,KAAOH,EAAOI,cAAgB,GACnCP,KAAKQ,GAAKL,EAAOK,GACjBR,KAAKS,UAAYT,KAAKI,IAAM,QAC5BJ,KAAKU,SAASV,KAAKW,MAAO,iBAAkBX,KAAKY,QACjDZ,KAAKW,MAAME,KAAOb,KAClB,MAAMc,EAAOd,KAAKc,MAAQd,KAAKc,KAAKC,KAAKf,MACzCc,GAAQA,EAAKf,IAEjBD,WACI,MAAMM,EAAMJ,KAAKI,IACjB,6BACSA,4BACVJ,KAAKgB,iDAEKZ,oBACVJ,KAAKiB,8CAEKb,4EAKbN,aAAaoB,GACLA,GAAUA,EAAOC,MACjBD,EAAOC,IAAI,aAAcxB,EAAEyB,MAAMF,EAAOG,IAAI,gBAC5CH,EAAOC,IAAI,MAAOnB,KAAKW,MAAMU,IAAI,UAGzCL,WAAU,IACC,GAEXC,QAAO,IACI,GAEXnB,SACI,MAAMwB,EAAKtB,KAAKsB,GAGhB,OAFAA,EAAGC,UAAYvB,KAAKwB,SAASxB,KAAMA,KAAKW,OACxCW,EAAGb,UAAYT,KAAKS,UACbT","file":"../../../asset_manager/view/AssetView.js","sourcesContent":["define([\n    'skylark-backbone',\n    'skylark-underscore'\n], function (Backbone, _) {\n    'use strict';\n    return Backbone.View.extend({\n        initialize(o = {}) {\n            this.options = o;\n            this.collection = o.collection;\n            const config = o.config || {};\n            this.config = config;\n            this.pfx = config.stylePrefix || '';\n            this.ppfx = config.pStylePrefix || '';\n            this.em = config.em;\n            this.className = this.pfx + 'asset';\n            this.listenTo(this.model, 'destroy remove', this.remove);\n            this.model.view = this;\n            const init = this.init && this.init.bind(this);\n            init && init(o);\n        },\n        template() {\n            const pfx = this.pfx;\n            return `\n      <div class=\"${ pfx }preview-cont\">\n        ${ this.getPreview() }\n      </div>\n      <div class=\"${ pfx }meta\">\n        ${ this.getInfo() }\n      </div>\n      <div class=\"${ pfx }close\" data-toggle=\"asset-remove\">\n        &Cross;\n      </div>\n    `;\n        },\n        updateTarget(target) {\n            if (target && target.set) {\n                target.set('attributes', _.clone(target.get('attributes')));\n                target.set('src', this.model.get('src'));\n            }\n        },\n        getPreview() {\n            return '';\n        },\n        getInfo() {\n            return '';\n        },\n        render() {\n            const el = this.el;\n            el.innerHTML = this.template(this, this.model);\n            el.className = this.className;\n            return this;\n        }\n    });\n});"]}
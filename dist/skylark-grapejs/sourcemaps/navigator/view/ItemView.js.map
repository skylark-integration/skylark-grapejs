{"version":3,"sources":["navigator/view/ItemView.js"],"names":["define","_","b","Backbone","ComponentView","Component","$","ItemsView","View","extend","events","mousedown [data-toggle-move]","touchstart [data-toggle-move]","click [data-toggle-visible]","click [data-toggle-select]","mouseover [data-toggle-select]","click [data-toggle-open]","dblclick [data-name]","focusout [data-name]","[object Object]","model","pfx","ppfx","config","clsNoEdit","this","hidable","count","countChildren","addClass","clsNoChild","clsTitle","clsTitleC","clsCaret","clsInput","inputNameCls","gut","level","name","getName","icon","getIcon","clsBase","isVisible","clsCount","clsMove","clsChildren","o","opt","em","get","stylePrefix","sorter","parentView","components","type","set","listenTo","checkChildren","updateStatus","updateOpening","updateLayerable","updateVisibility","className","clsEdit","$el","data","viewLayer","eyeEl","children","hClass","method","getStyle","display","getVisibilityEl","e","stopPropagation","prevDisplay","style","unset","setStyle","inputEl","getInputName","focus","setEditing","find","removeClass","textContent","scrollLeft","custom-name","inputName","el","querySelector","opened","getCaret","cid","length","setSelected","fromLayers","scroll","scrollCanvas","views","forEach","view","scrollIntoView","showHover","setHovered","button","onStart","trigger","eventDrag","onMoveClb","startSort","target","prototype","apply","avoidHover","highlightHover","pr","title","cnt","innerHTML","each","m","isCountable","hide","hideTextnode","caret","isString","getWrapper","getModel","stopListening","initialize","render","hidden","vis","empty","isUndefined","require","default","collection","parent","showWrapper","html","template","append","sortable","remove","attr"],"mappings":"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","file":"../../../navigator/view/ItemView.js","sourcesContent":["define([\n    'skylark-underscore',\n    '../../utils/mixins',\n    'skylark-backbone',\n    '../../dom_components/view/ComponentView',\n    '../../dom_components/model/Component'\n], function (_, b, Backbone, ComponentView, Component) {\n    'use strict';\n    const inputProp = 'contentEditable';\n    const $ = Backbone.$;\n    let ItemsView;\n    return Backbone.View.extend({\n        events: {\n            'mousedown [data-toggle-move]': 'startSort',\n            'touchstart [data-toggle-move]': 'startSort',\n            'click [data-toggle-visible]': 'toggleVisibility',\n            'click [data-toggle-select]': 'handleSelect',\n            'mouseover [data-toggle-select]': 'handleHover',\n            'click [data-toggle-open]': 'toggleOpening',\n            'dblclick [data-name]': 'handleEdit',\n            'focusout [data-name]': 'handleEditEnd'\n        },\n        template(model) {\n            const {pfx, ppfx, config, clsNoEdit} = this;\n            const {hidable} = config;\n            const count = this.countChildren(model);\n            const addClass = !count ? this.clsNoChild : '';\n            const clsTitle = `${ this.clsTitle } ${ addClass }`;\n            const clsTitleC = `${ this.clsTitleC } ${ ppfx }one-bg`;\n            const clsCaret = `${ this.clsCaret } fa fa-chevron-right`;\n            const clsInput = `${ this.inputNameCls } ${ clsNoEdit } ${ ppfx }no-app`;\n            const level = this.level + 1;\n            const gut = `${ 30 + level * 10 }px`;\n            const name = model.getName();\n            const icon = model.getIcon();\n            const clsBase = `${ pfx }layer`;\n            return `\n      ${ hidable ? `<i class=\"${ pfx }layer-vis fa fa-eye ${ this.isVisible() ? '' : 'fa-eye-slash' }\" data-toggle-visible></i>` : '' }\n      <div class=\"${ clsTitleC }\">\n        <div class=\"${ clsTitle }\" style=\"padding-left: ${ gut }\" data-toggle-select>\n          <div class=\"${ pfx }layer-title-inn\">\n            <i class=\"${ clsCaret }\" data-toggle-open></i>\n            ${ icon ? `<span class=\"${ clsBase }__icon\">${ icon }</span>` : '' }\n            <span class=\"${ clsInput }\" data-name>${ name }</span>\n          </div>\n        </div>\n      </div>\n      <div class=\"${ this.clsCount }\" data-count>${ count || '' }</div>\n      <div class=\"${ this.clsMove }\" data-toggle-move>\n        <i class=\"fa fa-arrows\"></i>\n      </div>\n      <div class=\"${ this.clsChildren }\"></div>`;\n        },\n        initialize(o = {}) {\n            this.opt = o;\n            this.level = o.level;\n            this.config = o.config;\n            this.em = o.config.em;\n            this.ppfx = this.em.get('Config').stylePrefix;\n            this.sorter = o.sorter || '';\n            this.pfx = this.config.stylePrefix;\n            this.parentView = o.parentView;\n            const pfx = this.pfx;\n            const ppfx = this.ppfx;\n            const model = this.model;\n            const components = model.get('components');\n            const type = model.get('type') || 'default';\n            model.set('open', false);\n            this.listenTo(components, 'remove add reset', this.checkChildren);\n            this.listenTo(model, 'change:status', this.updateStatus);\n            this.listenTo(model, 'change:open', this.updateOpening);\n            this.listenTo(model, 'change:layerable', this.updateLayerable);\n            this.listenTo(model, 'change:style:display', this.updateVisibility);\n            this.className = `${ pfx }layer ${ pfx }layer__t-${ type } no-select ${ ppfx }two-color`;\n            this.inputNameCls = `${ ppfx }layer-name`;\n            this.clsTitleC = `${ pfx }layer-title-c`;\n            this.clsTitle = `${ pfx }layer-title`;\n            this.clsCaret = `${ pfx }layer-caret`;\n            this.clsCount = `${ pfx }layer-count`;\n            this.clsMove = `${ pfx }layer-move`;\n            this.clsChildren = `${ pfx }layer-children`;\n            this.clsNoChild = `${ pfx }layer-no-chld`;\n            this.clsEdit = `${ this.inputNameCls }--edit`;\n            this.clsNoEdit = `${ this.inputNameCls }--no-edit`;\n            this.$el.data('model', model);\n            this.$el.data('collection', components);\n            model.viewLayer = this;\n        },\n        getVisibilityEl() {\n            if (!this.eyeEl) {\n                this.eyeEl = this.$el.children(`.${ this.pfx }layer-vis`);\n            }\n            return this.eyeEl;\n        },\n        updateVisibility() {\n            const pfx = this.pfx;\n            const model = this.model;\n            const hClass = `${ pfx }layer-hidden`;\n            const hideIcon = 'fa-eye-slash';\n            const hidden = model.getStyle().display == 'none';\n            const method = hidden ? 'addClass' : 'removeClass';\n            this.$el[method](hClass);\n            this.getVisibilityEl()[method](hideIcon);\n        },\n        toggleVisibility(e) {\n            e && e.stopPropagation();\n            const {model} = this;\n            const prevDspKey = '__prev-display';\n            const prevDisplay = model.get(prevDspKey);\n            const style = model.getStyle();\n            const {display} = style;\n            const hidden = display == 'none';\n            if (hidden) {\n                delete style.display;\n                if (prevDisplay) {\n                    style.display = prevDisplay;\n                    model.unset(prevDspKey);\n                }\n            } else {\n                display && model.set(prevDspKey, display);\n                style.display = 'none';\n            }\n            model.setStyle(style);\n        },\n        handleEdit(e) {\n            e && e.stopPropagation();\n            const {em, $el, clsNoEdit, clsEdit} = this;\n            const inputEl = this.getInputName();\n            inputEl[inputProp] = true;\n            inputEl.focus();\n            em && em.setEditing(1);\n            $el.find(`.${ this.inputNameCls }`).removeClass(clsNoEdit).addClass(clsEdit);\n        },\n        handleEditEnd(e) {\n            e && e.stopPropagation();\n            const {em, $el, clsNoEdit, clsEdit} = this;\n            const inputEl = this.getInputName();\n            const name = inputEl.textContent;\n            inputEl.scrollLeft = 0;\n            inputEl[inputProp] = false;\n            this.model.set({ 'custom-name': name });\n            em && em.setEditing(0);\n            $el.find(`.${ this.inputNameCls }`).addClass(clsNoEdit).removeClass(clsEdit);\n        },\n        getInputName() {\n            if (!this.inputName) {\n                this.inputName = this.el.querySelector(`.${ this.inputNameCls }`);\n            }\n            return this.inputName;\n        },\n        updateOpening() {\n            var opened = this.opt.opened || {};\n            var model = this.model;\n            const chvDown = 'fa-chevron-down';\n            if (model.get('open')) {\n                this.$el.addClass('open');\n                this.getCaret().addClass(chvDown);\n                opened[model.cid] = model;\n            } else {\n                this.$el.removeClass('open');\n                this.getCaret().removeClass(chvDown);\n                delete opened[model.cid];\n            }\n        },\n        toggleOpening(e) {\n            e.stopPropagation();\n            if (!this.model.get('components').length)\n                return;\n            this.model.set('open', !this.model.get('open'));\n        },\n        handleSelect(e) {\n            e.stopPropagation();\n            const {em, config} = this;\n            if (em) {\n                const model = this.model;\n                em.setSelected(model, { fromLayers: 1 });\n                const scroll = config.scrollCanvas;\n                scroll && model.views.forEach(view => view.scrollIntoView(scroll));\n            }\n        },\n        handleHover(e) {\n            e.stopPropagation();\n            const {em, config, model} = this;\n            em && config.showHover && em.setHovered(model, { fromLayers: 1 });\n        },\n        startSort(e) {\n            e.stopPropagation();\n            const {em, sorter} = this;\n            if (e.button && e.button !== 0)\n                return;\n            if (sorter) {\n                sorter.onStart = data => em.trigger(`${ Component.eventDrag }:start`, data);\n                sorter.onMoveClb = data => em.trigger(Component.eventDrag, data);\n                sorter.startSort(e.target);\n            }\n        },\n        freeze() {\n            this.$el.addClass(this.pfx + 'opac50');\n            this.model.set('open', 0);\n        },\n        unfreeze() {\n            this.$el.removeClass(this.pfx + 'opac50');\n        },\n        updateStatus(e) {\n            ComponentView.prototype.updateStatus.apply(this, [{ avoidHover: !this.config.highlightHover }]);\n        },\n        isVisible() {\n            var css = this.model.get('style'), pr = css.display;\n            if (pr && pr == 'none')\n                return;\n            return 1;\n        },\n        checkChildren() {\n            const {model, clsNoChild} = this;\n            const count = this.countChildren(model);\n            const title = this.$el.children(`.${ this.clsTitleC }`).children(`.${ this.clsTitle }`);\n            let {cnt} = this;\n            if (!cnt) {\n                cnt = this.$el.children('[data-count]').get(0);\n                this.cnt = cnt;\n            }\n            title[count ? 'removeClass' : 'addClass'](clsNoChild);\n            if (cnt)\n                cnt.innerHTML = count || '';\n            !count && model.set('open', 0);\n        },\n        countChildren(model) {\n            var count = 0;\n            model.get('components').each(function (m) {\n                var isCountable = this.opt.isCountable;\n                var hide = this.config.hideTextnode;\n                if (isCountable && !isCountable(m, hide))\n                    return;\n                count++;\n            }, this);\n            return count;\n        },\n        getCaret() {\n            if (!this.caret || !this.caret.length) {\n                const pfx = this.pfx;\n                this.caret = this.$el.children(`.${ this.clsTitleC }`).find(`.${ this.clsCaret }`);\n            }\n            return this.caret;\n        },\n        setRoot(el) {\n            el = _.isString(el) ? this.em.getWrapper().find(el)[0] : el;\n            const model = b.getModel(el, $);\n            if (!model)\n                return;\n            this.stopListening();\n            this.model = model;\n            this.initialize(this.opt);\n            this.render();\n        },\n        updateLayerable() {\n            const {parentView} = this;\n            const toRerender = parentView || this;\n            toRerender.render();\n        },\n        render() {\n            const {model, config, pfx, ppfx, opt} = this;\n            const {isCountable} = opt;\n            const hidden = isCountable && !isCountable(model, config.hideTextnode);\n            const vis = this.isVisible();\n            const el = this.$el.empty();\n            const level = this.level + 1;\n            if (_.isUndefined(ItemsView)) {\n                ItemsView = require('./ItemsView').default;\n            }\n            const children = new ItemsView({\n                collection: model.get('components'),\n                config: this.config,\n                sorter: this.sorter,\n                opened: this.opt.opened,\n                parentView: this,\n                parent: model,\n                level\n            }).render().$el;\n            if (!this.config.showWrapper && level === 1) {\n                el.append(children);\n            } else {\n                el.html(this.template(model));\n                el.find(`.${ this.clsChildren }`).append(children);\n            }\n            if (!model.get('draggable') || !this.config.sortable) {\n                el.children(`.${ this.clsMove }`).remove();\n            }\n            !vis && (this.className += ` ${ pfx }hide`);\n            hidden && (this.className += ` ${ ppfx }hidden`);\n            el.attr('class', this.className);\n            this.updateOpening();\n            this.updateStatus();\n            this.updateVisibility();\n            return this;\n        }\n    });\n});"]}
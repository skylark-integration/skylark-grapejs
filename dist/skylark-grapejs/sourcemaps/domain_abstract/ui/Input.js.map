{"version":3,"sources":["domain_abstract/ui/Input.js"],"names":["define","Backbone","$","View","extend","events","change","[object Object]","this","holderClass","ppfx","opts","em","target","listenTo","model","handleModelChange","trigger","value","val","get","input","getInputEl","setValue","e","stopPropagation","set","fromInput","elementUpdated","inputEl","plh","el","$el","addClass","inputClass","html","template","find","append"],"mappings":";;;;;;;AAAAA,QAAQ,oBAAqB,SAAUC,GACnC,aACA,MAAMC,EAAID,EAASC,EACnB,OAAOD,EAASE,KAAKC,QACjBC,QAAUC,OAAQ,gBAClBC,WACI,sBAAwBC,KAAKC,0BAEjCF,aACI,SAAWC,KAAKE,aAEpBH,cACI,SAAWC,KAAKE,oBAEpBH,WAAWI,MACP,MAAMD,EAAOC,EAAKD,MAAQ,GAC1BF,KAAKG,KAAOA,EACZH,KAAKE,KAAOA,EACZF,KAAKI,GAAKD,EAAKE,WACfL,KAAKM,SAASN,KAAKO,MAAO,eAAgBP,KAAKQ,oBAEnDT,iBACIC,KAAKO,MAAME,QAAQ,cAEvBV,SAASW,GACL,MAAMH,EAAQP,KAAKO,MACnB,IAAII,EAAMD,GAASH,EAAMK,IAAI,YAC7B,MAAMC,EAAQb,KAAKc,aACnBD,IAAUA,EAAMH,MAAQC,IAE5BZ,kBAAkBQ,EAAOG,EAAOP,GAC5BH,KAAKe,SAASL,EAAOP,IAEzBJ,aAAaiB,GACTA,EAAEC,kBACF,MAAMP,EAAQV,KAAKc,aAAaJ,MAChCV,KAAKO,MAAMW,KAAMR,MAAAA,IAAWS,UAAW,IACvCnB,KAAKoB,kBAETrB,aACI,IAAKC,KAAKqB,QAAS,CACf,MAAMd,MAACA,GAASP,KACVsB,EAAMf,EAAMK,IAAI,gBAAkBL,EAAMK,IAAI,aAAe,GACjEZ,KAAKqB,QAAU3B,qCAAsC4B,OAEzD,OAAOtB,KAAKqB,QAAQT,IAAI,IAE5Bb,SACIC,KAAKqB,QAAU,KACf,MAAME,EAAKvB,KAAKwB,IAIhB,OAHAD,EAAGE,SAASzB,KAAK0B,cACjBH,EAAGI,KAAK3B,KAAK4B,YACbL,EAAGM,SAAU7B,KAAKC,iBAAkB6B,OAAO9B,KAAKc,cACzCd","file":"../../../domain_abstract/ui/Input.js","sourcesContent":["define(['skylark-backbone'], function (Backbone) {\n    'use strict';\n    const $ = Backbone.$;\n    return Backbone.View.extend({\n        events: { change: 'handleChange' },\n        template() {\n            return `<span class=\"${ this.holderClass() }\"></span>`;\n        },\n        inputClass() {\n            return `${ this.ppfx }field`;\n        },\n        holderClass() {\n            return `${ this.ppfx }input-holder`;\n        },\n        initialize(opts = {}) {\n            const ppfx = opts.ppfx || '';\n            this.opts = opts;\n            this.ppfx = ppfx;\n            this.em = opts.target || {};\n            this.listenTo(this.model, 'change:value', this.handleModelChange);\n        },\n        elementUpdated() {\n            this.model.trigger('el:change');\n        },\n        setValue(value) {\n            const model = this.model;\n            let val = value || model.get('defaults');\n            const input = this.getInputEl();\n            input && (input.value = val);\n        },\n        handleModelChange(model, value, opts) {\n            this.setValue(value, opts);\n        },\n        handleChange(e) {\n            e.stopPropagation();\n            const value = this.getInputEl().value;\n            this.model.set({ value }, { fromInput: 1 });\n            this.elementUpdated();\n        },\n        getInputEl() {\n            if (!this.inputEl) {\n                const {model} = this;\n                const plh = model.get('placeholder') || model.get('defaults') || '';\n                this.inputEl = $(`<input type=\"text\" placeholder=\"${ plh }\">`);\n            }\n            return this.inputEl.get(0);\n        },\n        render() {\n            this.inputEl = null;\n            const el = this.$el;\n            el.addClass(this.inputClass());\n            el.html(this.template());\n            el.find(`.${ this.holderClass() }`).append(this.getInputEl());\n            return this;\n        }\n    });\n});"]}
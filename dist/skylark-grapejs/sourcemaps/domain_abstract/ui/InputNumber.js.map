{"version":3,"sources":["domain_abstract/ui/InputNumber.js"],"names":["define","Backbone","a","b","Input","$","extend","events","change input","change select","click [data-arrow-up]","click [data-arrow-down]","mousedown [data-arrows]","[object Object]","ppfx","this","opts","contClass","prototype","initialize","apply","arguments","bindAll","doc","document","listenTo","model","handleModelChange","value","opt","valid","validateInputValue","deepCheck","validObj","unit","force","set","silent","e","stopPropagation","setValue","getInputEl","elementUpdated","getUnitEl","trigger","get","unitEl","units","length","options","forEach","selected","push","temp","createElement","innerHTML","join","firstChild","step","parseInt","normalizeValue","val","preventDefault","moved","current","y","pageY","on","moveIncrement","upIncrement","ev","data","pos","prValue","avoidStore","off","defValue","stepDecimals","isNaN","parseFloat","Math","floor","side","toString","split","toFixed","isUndefined","max","min","fixed","regFixed","RegExp","test","match","valCopy","replace","uN","indexOf","render","call","$el","find","appendChild"],"mappings":"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","file":"../../../domain_abstract/ui/InputNumber.js","sourcesContent":["define([\n    'skylark-backbone',\n    'skylark-underscore',\n    '../../utils/mixins',\n    './Input'\n], function (Backbone, a, b, Input) {\n    'use strict';\n    const $ = Backbone.$;\n    return Input.extend({\n        events: {\n            'change input': 'handleChange',\n            'change select': 'handleUnitChange',\n            'click [data-arrow-up]': 'upArrowClick',\n            'click [data-arrow-down]': 'downArrowClick',\n            'mousedown [data-arrows]': 'downIncrement'\n        },\n        template() {\n            const ppfx = this.ppfx;\n            return `\n      <span class=\"${ ppfx }input-holder\"></span>\n      <span class=\"${ ppfx }field-units\"></span>\n      <div class=\"${ ppfx }field-arrows\" data-arrows>\n        <div class=\"${ ppfx }field-arrow-u\" data-arrow-up></div>\n        <div class=\"${ ppfx }field-arrow-d\" data-arrow-down></div>\n      </div>\n    `;\n        },\n        inputClass() {\n            const ppfx = this.ppfx;\n            return this.opts.contClass || `${ ppfx }field ${ ppfx }field-integer`;\n        },\n        initialize(opts = {}) {\n            Input.prototype.initialize.apply(this, arguments);\n            a.bindAll(this, 'moveIncrement', 'upIncrement');\n            this.doc = document;\n            this.listenTo(this.model, 'change:unit', this.handleModelChange);\n        },\n        setValue(value, opts) {\n            var opt = opts || {};\n            var valid = this.validateInputValue(value, { deepCheck: 1 });\n            var validObj = { value: valid.value };\n            if (valid.unit || valid.force) {\n                validObj.unit = valid.unit;\n            }\n            this.model.set(validObj, opt);\n            if (opt.silent) {\n                this.handleModelChange();\n            }\n        },\n        handleChange(e) {\n            e.stopPropagation();\n            this.setValue(this.getInputEl().value);\n            this.elementUpdated();\n        },\n        handleUnitChange(e) {\n            e.stopPropagation();\n            var value = this.getUnitEl().value;\n            this.model.set('unit', value);\n            this.elementUpdated();\n        },\n        elementUpdated() {\n            this.model.trigger('el:change');\n        },\n        handleModelChange() {\n            const model = this.model;\n            this.getInputEl().value = model.get('value');\n            const unitEl = this.getUnitEl();\n            unitEl && (unitEl.value = model.get('unit') || '');\n        },\n        getUnitEl() {\n            if (!this.unitEl) {\n                const model = this.model;\n                const units = model.get('units') || [];\n                if (units.length) {\n                    const options = [];\n                    units.forEach(unit => {\n                        const selected = unit == model.get('unit') ? 'selected' : '';\n                        options.push(`<option ${ selected }>${ unit }</option>`);\n                    });\n                    const temp = document.createElement('div');\n                    temp.innerHTML = `<select class=\"${ this.ppfx }input-unit\">${ options.join('') }</select>`;\n                    this.unitEl = temp.firstChild;\n                }\n            }\n            return this.unitEl;\n        },\n        upArrowClick() {\n            const model = this.model;\n            const step = model.get('step');\n            let value = parseInt(model.get('value'), 10);\n            value = this.normalizeValue(value + step);\n            var valid = this.validateInputValue(value);\n            model.set('value', valid.value);\n            this.elementUpdated();\n        },\n        downArrowClick() {\n            const model = this.model;\n            const step = model.get('step');\n            const value = parseInt(model.get('value'), 10);\n            const val = this.normalizeValue(value - step);\n            var valid = this.validateInputValue(val);\n            model.set('value', valid.value);\n            this.elementUpdated();\n        },\n        downIncrement(e) {\n            e.preventDefault();\n            this.moved = 0;\n            var value = this.model.get('value');\n            value = this.normalizeValue(value);\n            this.current = {\n                y: e.pageY,\n                val: value\n            };\n            b.on(this.doc, 'mousemove', this.moveIncrement);\n            b.on(this.doc, 'mouseup', this.upIncrement);\n        },\n        moveIncrement(ev) {\n            this.moved = 1;\n            const model = this.model;\n            const step = model.get('step');\n            const data = this.current;\n            var pos = this.normalizeValue(data.val + (data.y - ev.pageY) * step);\n            this.prValue = this.validateInputValue(pos).value;\n            model.set('value', this.prValue, { avoidStore: 1 });\n            return false;\n        },\n        upIncrement() {\n            const model = this.model;\n            const step = model.get('step');\n            b.off(this.doc, 'mouseup', this.upIncrement);\n            b.off(this.doc, 'mousemove', this.moveIncrement);\n            if (this.prValue && this.moved) {\n                var value = this.prValue - step;\n                model.set('value', value, { avoidStore: 1 }).set('value', value + step);\n                this.elementUpdated();\n            }\n        },\n        normalizeValue(value, defValue = 0) {\n            const model = this.model;\n            const step = model.get('step');\n            let stepDecimals = 0;\n            if (isNaN(value)) {\n                return defValue;\n            }\n            value = parseFloat(value);\n            if (Math.floor(value) !== value) {\n                const side = step.toString().split('.')[1];\n                stepDecimals = side ? side.length : 0;\n            }\n            return stepDecimals ? parseFloat(value.toFixed(stepDecimals)) : value;\n        },\n        validateInputValue(value, opts) {\n            var force = 0;\n            var opt = opts || {};\n            var model = this.model;\n            const defValue = '';\n            var val = !a.isUndefined(value) ? value : defValue;\n            var units = model.get('units') || [];\n            var unit = model.get('unit') || units.length && units[0] || '';\n            var max = model.get('max');\n            var min = model.get('min');\n            if (opt.deepCheck) {\n                var fixed = model.get('fixedValues') || [];\n                if (val) {\n                    var regFixed = new RegExp('^' + fixed.join('|'), 'g');\n                    if (fixed.length && regFixed.test(val)) {\n                        val = val.match(regFixed)[0];\n                        unit = '';\n                        force = 1;\n                    } else {\n                        var valCopy = val + '';\n                        val += '';\n                        val = parseFloat(val.replace(',', '.'));\n                        val = !isNaN(val) ? val : defValue;\n                        var uN = valCopy.replace(val, '');\n                        if (a.indexOf(units, uN) >= 0)\n                            unit = uN;\n                    }\n                }\n            }\n            if (!a.isUndefined(max) && max !== '')\n                val = val > max ? max : val;\n            if (!a.isUndefined(min) && min !== '')\n                val = val < min ? min : val;\n            return {\n                force,\n                value: val,\n                unit\n            };\n        },\n        render() {\n            Input.prototype.render.call(this);\n            this.unitEl = null;\n            const unit = this.getUnitEl();\n            unit && this.$el.find(`.${ this.ppfx }field-units`).get(0).appendChild(unit);\n            return this;\n        }\n    });\n});"]}
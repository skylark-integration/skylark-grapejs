{"version":3,"sources":["domain_abstract/model/Styleable.js"],"names":["define","a","b","ParserHtml","parseStyle","[object Object]","prop","this","getStyle","get","opts","isString","propOrig","propNew","set","diff","shallowDiff","keys","forEach","pr","em","trigger","value","extendStyle","setStyle","style","result","imp","important","isArray","indexOf","propPrv","substr","push","join","selectorsToString","getSelectors","getFullString"],"mappings":";;;;;;;AAAAA,QACI,qBACA,qBACA,iCACD,SAAUC,EAAGC,EAAGC,GACf,aACA,MAAMC,EAAaD,IAAaC,WAChC,OACIA,WAAAA,EACAC,YAAYC,GACR,UACOC,KAAKC,cACLF,IAGXD,WAEI,UADcE,KAAKE,IAAI,eAG3BJ,SAASC,KAAWI,MACZT,EAAEU,SAASL,KACXA,EAAOF,EAAWE,IAEtB,MAAMM,EAAWL,KAAKC,WAChBK,MAAeP,GACrBC,KAAKO,IAAI,QAASD,EAASH,GAC3B,MAAMK,EAAOb,EAAEc,YAAYJ,EAAUC,GASrC,OARAZ,EAAEgB,KAAKF,GAAMG,QAAQC,IACjB,MAAMC,EAAKb,KAAKa,GAChBb,KAAKc,wBAAyBF,KAC1BC,IACAA,EAAGC,QAAQ,mBAAoBd,KAAMY,GACrCC,EAAGC,4BAA6BF,IAAOZ,KAAMY,MAG9CN,GAEXR,SAASC,EAAMgB,EAAQ,GAAIZ,MACJ,iBAARJ,EACPA,GAASA,KAAMgB,GAEfZ,EAAOY,MAEXhB,EAAOC,KAAKgB,YAAYjB,GACxBC,KAAKiB,SAASlB,EAAMI,IAExBL,YAAYC,GACR,IAAImB,EAAQlB,KAAKC,kBACViB,EAAMnB,GACbC,KAAKiB,SAASC,IAElBpB,cAAcK,MACV,MAAMgB,KACAD,EAAQlB,KAAKC,WACnB,IAAK,IAAIF,KAAQmB,EAAO,CACpB,MAAME,EAAMjB,EAAKkB,UACXA,EAAY3B,EAAE4B,QAAQF,GAAOA,EAAIG,QAAQxB,IAAS,EAAIqB,EACtDL,KAAYG,EAAMnB,KAAUsB,EAAY,cAAgB,KACxDG,EAA+B,MAArBzB,EAAK0B,OAAO,EAAG,GAC/BV,IAAUS,GAAWL,EAAOO,QAAS3B,KAAUgB,MAEnD,OAAOI,EAAOQ,KAAK,KAEvB7B,eACI,OAAOE,KAAKE,IAAI,cAAgBF,KAAKE,IAAI,YAE7CJ,qBACI,OAAOE,KAAK4B,kBAAoB5B,KAAK4B,oBAAsB5B,KAAK6B,eAAeC","file":"../../../domain_abstract/model/Styleable.js","sourcesContent":["define([\n    'skylark-underscore',\n    '../../utils/mixins',\n    '../../parser/model/ParserHtml'\n], function (a, b, ParserHtml) {\n    'use strict';\n    const parseStyle = ParserHtml().parseStyle;\n    return {\n        parseStyle,\n        extendStyle(prop) {\n            return {\n                ...this.getStyle(),\n                ...prop\n            };\n        },\n        getStyle() {\n            const style = this.get('style') || {};\n            return { ...style };\n        },\n        setStyle(prop = {}, opts = {}) {\n            if (a.isString(prop)) {\n                prop = parseStyle(prop);\n            }\n            const propOrig = this.getStyle();\n            const propNew = { ...prop };\n            this.set('style', propNew, opts);\n            const diff = b.shallowDiff(propOrig, propNew);\n            a.keys(diff).forEach(pr => {\n                const em = this.em;\n                this.trigger(`change:style:${ pr }`);\n                if (em) {\n                    em.trigger(`styleable:change`, this, pr);\n                    em.trigger(`styleable:change:${ pr }`, this, pr);\n                }\n            });\n            return propNew;\n        },\n        addStyle(prop, value = '', opts = {}) {\n            if (typeof prop == 'string') {\n                prop = { prop: value };\n            } else {\n                opts = value || {};\n            }\n            prop = this.extendStyle(prop);\n            this.setStyle(prop, opts);\n        },\n        removeStyle(prop) {\n            let style = this.getStyle();\n            delete style[prop];\n            this.setStyle(style);\n        },\n        styleToString(opts = {}) {\n            const result = [];\n            const style = this.getStyle();\n            for (let prop in style) {\n                const imp = opts.important;\n                const important = a.isArray(imp) ? imp.indexOf(prop) >= 0 : imp;\n                const value = `${ style[prop] }${ important ? ' !important' : '' }`;\n                const propPrv = prop.substr(0, 2) == '__';\n                value && !propPrv && result.push(`${ prop }:${ value };`);\n            }\n            return result.join('');\n        },\n        getSelectors() {\n            return this.get('selectors') || this.get('classes');\n        },\n        getSelectorsString() {\n            return this.selectorsToString ? this.selectorsToString() : this.getSelectors().getFullString();\n        }\n    };\n});"]}
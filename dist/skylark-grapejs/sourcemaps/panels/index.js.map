{"version":3,"sources":["panels/index.js"],"names":["define","defaults","Panel","Panels","PanelView","PanelsView","panels","PanelsViewObj","c","name","[object Object]","config","ppfx","pStylePrefix","stylePrefix","collection","this","getPanels","getPanelsEl","el","addPanel","panel","add","removePanel","remove","id","res","where","length","panelId","button","pn","getPanel","get","render","each","p","btn","trigger"],"mappings":";;;;;;;AAAAA,QACI,kBACA,gBACA,iBACA,mBACA,qBACD,SAAUC,EAAUC,EAAOC,EAAQC,EAAWC,GAC7C,aACA,MAAO,KACH,IACIC,EAAQC,EADRC,KAEJ,OACIC,KAAM,SACNC,KAAKC,GAED,IAAK,IAAIF,KADTD,EAAIG,MACaV,EACPQ,KAAQD,IACVA,EAAEC,GAAQR,EAASQ,IAE3B,IAAIG,EAAOJ,EAAEK,aAQb,OAPID,IACAJ,EAAEM,YAAcF,EAAOJ,EAAEM,aAC7BR,EAAS,IAAIH,EAAOK,EAAEP,UACtBM,EAAgB,IAAIF,GAChBU,WAAYT,EACZK,OAAQH,IAELQ,MAEXC,UAAS,IACEX,EAEXY,YAAW,IACAX,EAAcY,GAEzBC,SAASC,GACEf,EAAOgB,IAAID,GAEtBE,YAAYF,GACDf,EAAOkB,OAAOH,GAEzBX,SAASe,GACL,IAAIC,EAAMpB,EAAOqB,OAAQF,GAAAA,IACzB,OAAOC,EAAIE,OAASF,EAAI,GAAK,MAEjChB,UAAUmB,EAASC,GACf,IAAIC,EAAKf,KAAKgB,SAASH,GACvB,OAAOE,EAAKA,EAAGE,IAAI,WAAWX,IAAIQ,GAAU,MAEhDpB,aAAamB,EAASC,GAClB,IAAIC,EAAKf,KAAKgB,SAASH,GACvB,OAAOE,GAAMA,EAAGE,IAAI,WAAWT,OAAOM,IAE1CpB,UAAUmB,EAASJ,GACf,IAAIM,EAAKf,KAAKgB,SAASH,GACvB,GAAIE,EAAI,CACJ,IAAIL,EAAMK,EAAGE,IAAI,WAAWN,OAAQF,GAAAA,IACpC,OAAOC,EAAIE,OAASF,EAAI,GAAK,KAEjC,OAAO,MAEXQ,OAAM,IACK3B,EAAc2B,SAASf,GAElCT,SACIM,KAAKC,YAAYkB,KAAKC,IAClBA,EAAEH,IAAI,WAAWE,KAAKE,IAClBA,EAAIJ,IAAI,WAAaI,EAAIC,QAAQ,qBAI7C5B,iBACIM,KAAKC,YAAYkB,KAAKC,IAClBA,EAAEH,IAAI,WAAWE,KAAKE,IACdA,EAAIJ,IAAI,YACRI,EAAIC,QAAQ,uBAI5BpC,MAAAA","file":"../../panels/index.js","sourcesContent":["define([\n    './config/config',\n    './model/Panel',\n    './model/Panels',\n    './view/PanelView',\n    './view/PanelsView'\n], function (defaults, Panel, Panels, PanelView, PanelsView) {\n    'use strict';\n    return () => {\n        var c = {};\n        var panels, PanelsViewObj;\n        return {\n            name: 'Panels',\n            init(config) {\n                c = config || {};\n                for (var name in defaults) {\n                    if (!(name in c))\n                        c[name] = defaults[name];\n                }\n                var ppfx = c.pStylePrefix;\n                if (ppfx)\n                    c.stylePrefix = ppfx + c.stylePrefix;\n                panels = new Panels(c.defaults);\n                PanelsViewObj = new PanelsView({\n                    collection: panels,\n                    config: c\n                });\n                return this;\n            },\n            getPanels() {\n                return panels;\n            },\n            getPanelsEl() {\n                return PanelsViewObj.el;\n            },\n            addPanel(panel) {\n                return panels.add(panel);\n            },\n            removePanel(panel) {\n                return panels.remove(panel);\n            },\n            getPanel(id) {\n                var res = panels.where({ id });\n                return res.length ? res[0] : null;\n            },\n            addButton(panelId, button) {\n                var pn = this.getPanel(panelId);\n                return pn ? pn.get('buttons').add(button) : null;\n            },\n            removeButton(panelId, button) {\n                var pn = this.getPanel(panelId);\n                return pn && pn.get('buttons').remove(button);\n            },\n            getButton(panelId, id) {\n                var pn = this.getPanel(panelId);\n                if (pn) {\n                    var res = pn.get('buttons').where({ id });\n                    return res.length ? res[0] : null;\n                }\n                return null;\n            },\n            render() {\n                return PanelsViewObj.render().el;\n            },\n            active() {\n                this.getPanels().each(p => {\n                    p.get('buttons').each(btn => {\n                        btn.get('active') && btn.trigger('updateActive');\n                    });\n                });\n            },\n            disableButtons() {\n                this.getPanels().each(p => {\n                    p.get('buttons').each(btn => {\n                        if (btn.get('disable'))\n                            btn.trigger('change:disable');\n                    });\n                });\n            },\n            Panel\n        };\n    };\n});"]}
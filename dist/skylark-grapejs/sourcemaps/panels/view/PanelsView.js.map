{"version":3,"sources":["panels/view/PanelsView.js"],"names":["define","Backbone","PanelView","View","extend","[object Object]","o","this","opt","config","pfx","stylePrefix","items","collection","listenTo","addTo","render","onRemove","className","model","view","remove","addToCollection","fragmentEl","fragment","el","get","rendered","appendTo","document","querySelector","appendChild","$el","append","initResize","frag","createDocumentFragment","empty","each","attr"],"mappings":";;;;;;;AAAAA,QACI,mBACA,eACD,SAAUC,EAAUC,GACnB,aACA,OAAOD,EAASE,KAAKC,QACjBC,WAAWC,GACPC,KAAKC,IAAMF,MACXC,KAAKE,OAASF,KAAKC,IAAIC,WACvBF,KAAKG,IAAMH,KAAKE,OAAOE,aAAe,GACtC,MAAMC,EAAQL,KAAKM,WACnBN,KAAKO,SAASF,EAAO,MAAOL,KAAKQ,OACjCR,KAAKO,SAASF,EAAO,QAASL,KAAKS,QACnCT,KAAKO,SAASF,EAAO,SAAUL,KAAKU,UACpCV,KAAKW,UAAYX,KAAKG,IAAM,UAEhCL,SAASc,GACL,MAAMC,EAAOD,EAAMC,KACnBA,GAAQA,EAAKC,UAEjBhB,MAAMc,GACFZ,KAAKe,gBAAgBH,IAEzBd,gBAAgBc,EAAOI,GACnB,MAAMC,EAAWD,GAAc,KACzBd,EAASF,KAAKE,OACdgB,EAAKN,EAAMO,IAAI,MACfN,EAAO,IAAIlB,GACbuB,GAAAA,EACAN,MAAAA,EACAV,OAAAA,IAEEkB,EAAWP,EAAKJ,SAASS,GACzBG,EAAWT,EAAMO,IAAI,YAC3B,GAAID,QACG,GAAIG,EAAU,CACFC,SAASC,cAAcF,GAC7BG,YAAYJ,QAEjBH,EACAA,EAASO,YAAYJ,GAErBpB,KAAKyB,IAAIC,OAAON,GAIxB,OADAP,EAAKc,aACEP,GAEXtB,SACI,MAAM2B,EAAMzB,KAAKyB,IACXG,EAAON,SAASO,yBAKtB,OAJAJ,EAAIK,QACJ9B,KAAKM,WAAWyB,KAAKnB,GAASZ,KAAKe,gBAAgBH,EAAOgB,IAC1DH,EAAIC,OAAOE,GACXH,EAAIO,KAAK,QAAShC,KAAKW,WAChBX","file":"../../../panels/view/PanelsView.js","sourcesContent":["define([\n    'skylark-backbone',\n    './PanelView'\n], function (Backbone, PanelView) {\n    'use strict';\n    return Backbone.View.extend({\n        initialize(o) {\n            this.opt = o || {};\n            this.config = this.opt.config || {};\n            this.pfx = this.config.stylePrefix || '';\n            const items = this.collection;\n            this.listenTo(items, 'add', this.addTo);\n            this.listenTo(items, 'reset', this.render);\n            this.listenTo(items, 'remove', this.onRemove);\n            this.className = this.pfx + 'panels';\n        },\n        onRemove(model) {\n            const view = model.view;\n            view && view.remove();\n        },\n        addTo(model) {\n            this.addToCollection(model);\n        },\n        addToCollection(model, fragmentEl) {\n            const fragment = fragmentEl || null;\n            const config = this.config;\n            const el = model.get('el');\n            const view = new PanelView({\n                el,\n                model,\n                config\n            });\n            const rendered = view.render().el;\n            const appendTo = model.get('appendTo');\n            if (el) {\n            } else if (appendTo) {\n                var appendEl = document.querySelector(appendTo);\n                appendEl.appendChild(rendered);\n            } else {\n                if (fragment) {\n                    fragment.appendChild(rendered);\n                } else {\n                    this.$el.append(rendered);\n                }\n            }\n            view.initResize();\n            return rendered;\n        },\n        render() {\n            const $el = this.$el;\n            const frag = document.createDocumentFragment();\n            $el.empty();\n            this.collection.each(model => this.addToCollection(model, frag));\n            $el.append(frag);\n            $el.attr('class', this.className);\n            return this;\n        }\n    });\n});"]}
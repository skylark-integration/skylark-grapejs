{"version":3,"sources":["panels/view/ButtonsView.js"],"names":["define","Backbone","ButtonView","a","View","extend","[object Object]","o","this","opt","config","pfx","stylePrefix","parentM","listenTo","collection","addTo","render","className","model","addToCollection","fragmentEl","fragment","rendered","el","appendChild","$el","append","document","createDocumentFragment","empty","each","attr","result"],"mappings":";;;;;;;AAAAA,QACI,mBACA,eACA,sBACD,SAAUC,EAAUC,EAAYC,GAC/B,aACA,OAAOF,EAASG,KAAKC,QACjBC,WAAWC,GACPC,KAAKC,IAAMF,MACXC,KAAKE,OAASF,KAAKC,IAAIC,WACvBF,KAAKG,IAAMH,KAAKE,OAAOE,aAAe,GACtCJ,KAAKK,QAAUL,KAAKC,IAAII,SAAW,KACnCL,KAAKM,SAASN,KAAKO,WAAY,MAAOP,KAAKQ,OAC3CR,KAAKM,SAASN,KAAKO,WAAY,eAAgBP,KAAKS,QACpDT,KAAKU,UAAYV,KAAKG,IAAM,WAEhCL,MAAMa,GACFX,KAAKY,gBAAgBD,IAEzBb,gBAAgBa,EAAOE,GACnB,IAAIC,EAAWD,GAAc,KAOzBE,EALO,IADMrB,GAEbiB,MAAAA,EACAT,OAAQF,KAAKE,OACbG,QAASL,KAAKK,UAEEI,SAASO,GAM7B,OALIF,EACAA,EAASG,YAAYF,GAErBf,KAAKkB,IAAIC,OAAOJ,GAEbA,GAEXjB,SACI,IAAIgB,EAAWM,SAASC,yBAOxB,OANArB,KAAKkB,IAAII,QACTtB,KAAKO,WAAWgB,KAAK,SAAUZ,GAC3BX,KAAKY,gBAAgBD,EAAOG,IAC7Bd,MACHA,KAAKkB,IAAIC,OAAOL,GAChBd,KAAKkB,IAAIM,KAAK,QAAS7B,EAAE8B,OAAOzB,KAAM,cAC/BA","file":"../../../panels/view/ButtonsView.js","sourcesContent":["define([\n    'skylark-backbone',\n    './ButtonView',\n    'skylark-underscore'\n], function (Backbone, ButtonView, a) {\n    'use strict';\n    return Backbone.View.extend({\n        initialize(o) {\n            this.opt = o || {};\n            this.config = this.opt.config || {};\n            this.pfx = this.config.stylePrefix || '';\n            this.parentM = this.opt.parentM || null;\n            this.listenTo(this.collection, 'add', this.addTo);\n            this.listenTo(this.collection, 'reset remove', this.render);\n            this.className = this.pfx + 'buttons';\n        },\n        addTo(model) {\n            this.addToCollection(model);\n        },\n        addToCollection(model, fragmentEl) {\n            var fragment = fragmentEl || null;\n            var viewObject = ButtonView;\n            var view = new viewObject({\n                model,\n                config: this.config,\n                parentM: this.parentM\n            });\n            var rendered = view.render().el;\n            if (fragment) {\n                fragment.appendChild(rendered);\n            } else {\n                this.$el.append(rendered);\n            }\n            return rendered;\n        },\n        render() {\n            var fragment = document.createDocumentFragment();\n            this.$el.empty();\n            this.collection.each(function (model) {\n                this.addToCollection(model, fragment);\n            }, this);\n            this.$el.append(fragment);\n            this.$el.attr('class', a.result(this, 'className'));\n            return this;\n        }\n    });\n});"]}
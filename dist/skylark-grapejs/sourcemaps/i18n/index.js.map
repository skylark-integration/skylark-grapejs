{"version":3,"sources":["i18n/index.js"],"names":["define","langx","_","config","isObj","el","Array","isArray","deepAssign","args","target","lang","mixin","i","length","source","key","targValue","srcValue","name","[object Object]","opts","this","messages","detectLocale","locale","_localLang","em","evObj","value","valuePrev","trigger","_debug","msg","setMessages","param","params","l","getLocale","localeFlb","lFlb","localeFallback","result","_getMsg","isString","_addParams","nav","window","navigator","language","userLanguage","split","str","reg","RegExp","replace","m","val","trim","msgSet","getMessages","indexOf","reduce","isUndefined","debug","logWarning"],"mappings":"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","file":"../../i18n/index.js","sourcesContent":["define([\n    \"skylark-langx/langx\",\n    'skylark-underscore',\n    './config'\n], function (langx,_, config) {\n    'use strict';\n    const isObj = el => !Array.isArray(el) && el !== null && typeof el === 'object';\n    const deepAssign = (...args) => {\n        const target = lang.mixin({},args[0] );\n        for (let i = 1; i < args.length; i++) {\n            const source = lang.mixin({},args[i] );\n            for (let key in source) {\n                const targValue = target[key];\n                const srcValue = source[key];\n                if (isObj(targValue) && isObj(srcValue)) {\n                    target[key] = deepAssign(targValue, srcValue);\n                } else {\n                    target[key] = srcValue;\n                }\n            }\n        }\n        return target;\n    };\n    return () => {\n        return {\n            name: 'I18n',\n            config,\n            init(opts = {}) {\n                this.config = langx.mixin({},config,opts,{\n                    messages: langx.mixin({},\n                        config.messages,\n                        opts.messages\n                    )\n                });\n                if (this.config.detectLocale) {\n                    this.config.locale = this._localLang();\n                }\n                this.em = opts.em;\n                return this;\n            },\n            getConfig() {\n                return this.config;\n            },\n            setLocale(locale) {\n                const {em, config} = this;\n                const evObj = {\n                    value: locale,\n                    valuePrev: config.locale\n                };\n                em && em.trigger('i18n:locale', evObj);\n                config.locale = locale;\n                return this;\n            },\n            getLocale() {\n                return this.config.locale;\n            },\n            getMessages(lang, opts = {}) {\n                const {messages} = this.config;\n                lang && !messages[lang] && this._debug(`'${ lang }' i18n lang not found`, opts);\n                return lang ? messages[lang] : messages;\n            },\n            setMessages(msg) {\n                const {em, config} = this;\n                config.messages = msg;\n                em && em.trigger('i18n:update', msg);\n                return this;\n            },\n            addMessages(msg) {\n                const {em} = this;\n                const {messages} = this.config;\n                em && em.trigger('i18n:add', msg);\n                this.setMessages(deepAssign(messages, msg));\n                return this;\n            },\n            t(key, opts = {}) {\n                const {config} = this;\n                const param = opts.params || {};\n                const locale = opts.l || this.getLocale();\n                const localeFlb = opts.lFlb || config.localeFallback;\n                let result = this._getMsg(key, locale, opts);\n                if (!result)\n                    result = this._getMsg(key, localeFlb, opts);\n                !result && this._debug(`'${ key }' i18n key not found in '${ locale }' lang`, opts);\n                result = result && _.isString(result) ? this._addParams(result, param) : result;\n                return result;\n            },\n            _localLang() {\n                const nav = window.navigator || {};\n                const lang = nav.language || nav.userLanguage;\n                return lang ? lang.split('-')[0] : 'en';\n            },\n            _addParams(str, params) {\n                const reg = new RegExp(`\\{([\\\\w\\\\d-]*)\\}`, 'g');\n                return str.replace(reg, (m, val) => params[val] || '').trim();\n            },\n            _getMsg(key, locale, opts = {}) {\n                const msgSet = this.getMessages(locale, opts);\n                if (!msgSet)\n                    return;\n                let result = msgSet[key];\n                if (!result && key.indexOf('.') > 0) {\n                    result = key.split('.').reduce((lang, key) => {\n                        if (_.isUndefined(lang))\n                            return;\n                        return lang[key];\n                    }, msgSet);\n                }\n                return result;\n            },\n            _debug(str, opts = {}) {\n                const {em, config} = this;\n                (opts.debug || config.debug) && em && em.logWarning(str);\n            }\n        };\n    };\n});"]}
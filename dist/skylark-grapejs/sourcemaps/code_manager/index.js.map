{"version":3,"sources":["code_manager/index.js"],"names":["define","a","defaults","gHtml","gCss","gJson","gJs","eCM","editorView","c","generators","defGenerators","viewers","defViewers","getConfig","config","EditorView","name","[object Object]","ppfx","pStylePrefix","stylePrefix","html","css","json","js","CodeMirror","this","loadDefaultGenerators","loadDefaultViewers","id","generator","getGenerator","getGenerators","viewer","getViewer","getViewers","opts","type","isUndefined","clone","cont","document","createElement","txtarea","appendChild","set","init","setElement","code","setContent","model","genId","opt","em","build","addGenerator","addViewer"],"mappings":";;;;;;;AAAAA,QACI,qBACA,kBACA,wBACA,uBACA,wBACA,sBACA,2BACA,qBACD,SAAUC,EAAGC,EAAUC,EAAOC,EAAMC,EAAOC,EAAKC,EAAKC,GACpD,aACA,MAAO,KACH,IAAIC,KACAC,KAAiBC,KAAoBC,KAAcC,KAEvD,OACIC,UAAS,IACEL,EAEXM,OAAQN,EACRO,WAAYR,EACZS,KAAM,cACNC,KAAKH,GAED,IAAK,IAAIE,KADTR,EAAIM,MACab,EACPe,KAAQR,IACVA,EAAEQ,GAAQf,EAASe,IAE3B,IAAIE,EAAOV,EAAEW,aASb,OARID,IACAV,EAAEY,YAAcF,EAAOV,EAAEY,aAC7BV,EAAcW,KAAO,IAAInB,EACzBQ,EAAcY,IAAM,IAAInB,EACxBO,EAAca,KAAO,IAAInB,EACzBM,EAAcc,GAAK,IAAInB,EACvBO,EAAWa,WAAa,IAAInB,EAC5BoB,KAAKC,wBAAwBC,qBACtBF,MAEXT,aAAaY,EAAIC,GAEb,OADArB,EAAWoB,GAAMC,EACVJ,MAEXK,aAAaF,GACFpB,EAAWoB,IAAO,KAE7BG,cAAa,IACFvB,EAEXQ,UAAUY,EAAII,GAEV,OADAtB,EAAQkB,GAAMI,EACPP,MAEXQ,UAAUL,GACClB,EAAQkB,IAAO,KAE1BM,WAAU,IACCxB,EAEXM,aAAamB,MACT,MAAMC,EAAQrC,EAAEsC,YAAYF,EAAKC,MA9CnB,aA8C2BD,EAAKC,KACxCJ,EAASP,KAAKQ,UAAUG,IAASX,KAAKQ,UAAUG,GAAME,QACtDC,EAAOC,SAASC,cAAc,OAC9BC,EAAUF,SAASC,cAAc,YAKvC,OAJAF,EAAKI,YAAYD,GACjBV,EAAOY,IAAIT,GACXH,EAAOa,KAAKH,GACZV,EAAOc,WAAWP,GACXP,GAEXhB,aAAagB,EAAQe,GACjBf,EAAOgB,WAAWD,IAEtB/B,QAAQiC,EAAOC,EAAOC,MAClBA,EAAIC,GAAK7C,EAAE6C,GACX,IAAIvB,EAAYJ,KAAKK,aAAaoB,GAClC,OAAOrB,EAAYA,EAAUwB,MAAMJ,EAAOE,GAAO,IAErDnC,wBACI,IAAK,IAAIY,KAAMnB,EACXgB,KAAK6B,aAAa1B,EAAInB,EAAcmB,IACxC,OAAOH,MAEXT,qBACI,IAAK,IAAIY,KAAMjB,EACXc,KAAK8B,UAAU3B,EAAIjB,EAAWiB,IAClC,OAAOH","file":"../../code_manager/index.js","sourcesContent":["define([\n    'skylark-underscore',\n    './config/config',\n    './model/HtmlGenerator',\n    './model/CssGenerator',\n    './model/JsonGenerator',\n    './model/JsGenerator',\n    './model/CodeMirrorEditor',\n    './view/EditorView'\n], function (a, defaults, gHtml, gCss, gJson, gJs, eCM, editorView) {\n    'use strict';\n    return () => {\n        var c = {};\n        var generators = {}, defGenerators = {}, viewers = {}, defViewers = {};\n        const defaultViewer = 'CodeMirror';\n        return {\n            getConfig() {\n                return c;\n            },\n            config: c,\n            EditorView: editorView,\n            name: 'CodeManager',\n            init(config) {\n                c = config || {};\n                for (var name in defaults) {\n                    if (!(name in c))\n                        c[name] = defaults[name];\n                }\n                var ppfx = c.pStylePrefix;\n                if (ppfx)\n                    c.stylePrefix = ppfx + c.stylePrefix;\n                defGenerators.html = new gHtml();\n                defGenerators.css = new gCss();\n                defGenerators.json = new gJson();\n                defGenerators.js = new gJs();\n                defViewers.CodeMirror = new eCM();\n                this.loadDefaultGenerators().loadDefaultViewers();\n                return this;\n            },\n            addGenerator(id, generator) {\n                generators[id] = generator;\n                return this;\n            },\n            getGenerator(id) {\n                return generators[id] || null;\n            },\n            getGenerators() {\n                return generators;\n            },\n            addViewer(id, viewer) {\n                viewers[id] = viewer;\n                return this;\n            },\n            getViewer(id) {\n                return viewers[id] || null;\n            },\n            getViewers() {\n                return viewers;\n            },\n            createViewer(opts = {}) {\n                const type = !a.isUndefined(opts.type) ? opts.type : defaultViewer;\n                const viewer = this.getViewer(type) && this.getViewer(type).clone();\n                const cont = document.createElement('div');\n                const txtarea = document.createElement('textarea');\n                cont.appendChild(txtarea);\n                viewer.set(opts);\n                viewer.init(txtarea);\n                viewer.setElement(cont);\n                return viewer;\n            },\n            updateViewer(viewer, code) {\n                viewer.setContent(code);\n            },\n            getCode(model, genId, opt = {}) {\n                opt.em = c.em;\n                var generator = this.getGenerator(genId);\n                return generator ? generator.build(model, opt) : '';\n            },\n            loadDefaultGenerators() {\n                for (var id in defGenerators)\n                    this.addGenerator(id, defGenerators[id]);\n                return this;\n            },\n            loadDefaultViewers() {\n                for (var id in defViewers)\n                    this.addViewer(id, defViewers[id]);\n                return this;\n            }\n        };\n    };\n});"]}
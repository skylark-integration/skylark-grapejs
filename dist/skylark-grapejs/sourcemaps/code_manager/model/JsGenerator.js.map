{"version":3,"sources":["code_manager/model/JsGenerator.js"],"names":["define","a","Backbone","Model","extend","[object Object]","model","code","script","get","type","comps","id","getId","attr","set","silent","scrStr","getScriptString","this","mapJs","ids","mapType","push","each","mapModel","join"],"mappings":";;;;;;;AAAAA,QACI,qBACA,oBACD,SAAUC,EAAGC,GACZ,aACA,OAAOA,EAASC,MAAMC,QAClBC,SAASC,GACL,IAAIC,EAAO,GACPC,EAASF,EAAMG,IAAI,kBAAoBH,EAAMG,IAAI,UACjDC,EAAOJ,EAAMG,IAAI,QACjBE,EAAQL,EAAMG,IAAI,cAClBG,EAAKN,EAAMO,QACf,GAAIL,EAAQ,CACR,IAAIM,EAAOR,EAAMG,IAAI,cACrBK,EAAOb,EAAEG,UAAWU,GAAQF,GAAAA,IAC5BN,EAAMS,IAAI,aAAcD,GAAQE,OAAQ,IACxC,IAAIC,EAASX,EAAMY,gBAAgBV,GACnC,GAAIF,EAAMG,IAAI,iBACVU,KAAKC,MAAMV,EAAO,IAAME,IACpBS,KAAMT,GACNL,KAAMU,OAEP,CACH,IAAIK,EAAUH,KAAKC,MAAMV,GACrBY,EACAA,EAAQD,IAAIE,KAAKX,GAEjBO,KAAKC,MAAMV,IACPW,KAAMT,GACNL,KAAMU,IAQtB,OAHAN,EAAMa,KAAK,SAAUlB,GACjBC,GAAQY,KAAKM,SAASnB,IACvBa,MACIZ,GAEXF,MAAMC,GACFa,KAAKC,SACLD,KAAKM,SAASnB,GACd,IAAIC,EAAO,GACX,IAAK,IAAIG,KAAQS,KAAKC,MAAO,CACzB,IAAIE,EAAUH,KAAKC,MAAMV,GAEzBH,uDADU,IAAMe,EAAQD,IAAIK,KAAK,iGAIxBJ,EAAQf,sCAGrB,OAAOA","file":"../../../code_manager/model/JsGenerator.js","sourcesContent":["define([\n    'skylark-underscore',\n    'skylark-backbone'\n], function (a, Backbone) {\n    'use strict';\n    return Backbone.Model.extend({\n        mapModel(model) {\n            var code = '';\n            var script = model.get('script-export') || model.get('script');\n            var type = model.get('type');\n            var comps = model.get('components');\n            var id = model.getId();\n            if (script) {\n                var attr = model.get('attributes');\n                attr = a.extend({}, attr, { id });\n                model.set('attributes', attr, { silent: 1 });\n                var scrStr = model.getScriptString(script);\n                if (model.get('scriptUpdated')) {\n                    this.mapJs[type + '-' + id] = {\n                        ids: [id],\n                        code: scrStr\n                    };\n                } else {\n                    var mapType = this.mapJs[type];\n                    if (mapType) {\n                        mapType.ids.push(id);\n                    } else {\n                        this.mapJs[type] = {\n                            ids: [id],\n                            code: scrStr\n                        };\n                    }\n                }\n            }\n            comps.each(function (model) {\n                code += this.mapModel(model);\n            }, this);\n            return code;\n        },\n        build(model) {\n            this.mapJs = {};\n            this.mapModel(model);\n            var code = '';\n            for (var type in this.mapJs) {\n                var mapType = this.mapJs[type];\n                var ids = '#' + mapType.ids.join(', #');\n                code += `\n        var items = document.querySelectorAll('${ ids }');\n        for (var i = 0, len = items.length; i < len; i++) {\n          (function(){${ mapType.code }}.bind(items[i]))();\n        }`;\n            }\n            return code;\n        }\n    });\n});"]}
{"version":3,"sources":["canvas/view/CanvasView.js"],"names":["define","langx","$","Backbone","_","mixins","FramesView","timerZoom","View","extend","events","wheel","[object Object]","pfx","this","o","bindAll","on","window","clearOff","model","frames","get","config","em","stylePrefix","ppfx","pStylePrefix","className","collection","mixin","canvasView","renderContent","listenTo","checkSelected","updateFrames","trigger","toggleListeners","component","opts","scroll","currFrame","views","forEach","view","_getFrame","scrollIntoView","prototype","remove","apply","arguments","ev","preventDefault","_parentEvent","enable","document","onKeyPress","getKeyChar","getZoomDecimal","runCommand","ctrlKey","metaKey","getConfig","delta","Math","max","min","wheelDelta","detail","zoom","set","x","y","attributes","getZoom","defOpts","preserveSelected","mpl","framesArea","style","transform","stopDefault","clearTimeout","setTimeout","runDefault","el","elem","getElement","rect","getElRect","frameRect","getFrameOffset","rTop","top","rLeft","left","height","width","docBody","ownerDocument","body","noScroll","scrollTop","scrollLeft","frmOff","cvsOff","frEl","defaultView","frameElement","frame","offset","opt","getCanvasOffset","eo","frmTop","avoidFrameOffset","frmLeft","isTextNode","result","styles","getComputedStyle","parseFloat","doc","contentDocument","bEl","fo","co","id","getId","scriptContainer","getJsContainer","appendChild","html","script","createElement","innerHTML","getScriptString","frameView","getFrameView","$el","cssc","wrapper","template","$frames","find","render","root","getWrapper","getAll","toolsWrp","toolsWrapper","append","toolsEl","querySelector","hlEl","badgeEl","placerEl","ghostEl","toolbarEl","resizerEl","offsetEl","fixedOffsetEl","toolsGlobEl","frms","listenToLoad","setCurrentFrame","at"],"mappings":";;;;;;;AAAAA,QACI,sBACA,iBACA,mBACA,qBACA,qBACA,gBACD,SAAUC,EAAMC,EAAEC,EAAUC,EAAGC,EAAQC,GACtC,aACA,IAAIC,EACJ,OAAOJ,EAASK,KAAKC,QACjBC,QAAUC,MAAO,WACjBC,WACI,MAAMC,IAACA,GAAOC,KACd,6BACSD,uDACHA,kBAAsBA,2CAGhCD,WAAWG,GACPX,EAAEY,QAAQF,KAAM,WAAY,cAC5BT,EAAOY,GAAGC,OAAQ,gBAAiBJ,KAAKK,UACxC,MAAMC,MAACA,GAASN,KACVO,EAASD,EAAME,IAAI,UACzBR,KAAKS,OAASR,EAAEQ,WAChBT,KAAKU,GAAKV,KAAKS,OAAOC,OACtBV,KAAKD,IAAMC,KAAKS,OAAOE,aAAe,GACtCX,KAAKY,KAAOZ,KAAKS,OAAOI,cAAgB,GACxCb,KAAKc,UAAYd,KAAKS,OAAOE,YAAc,SAC3C,MAAMD,GAACA,EAAED,OAAEA,GAAUT,KACrBA,KAAKO,OAAS,IAAIf,GACduB,WAAYR,EACZE,OAAQtB,EAAM6B,SAASP,GACnBQ,WAAYjB,KACZkB,cAAe,MAGvBlB,KAAKmB,SAAST,EAAI,sBAAuBV,KAAKK,UAC9CL,KAAKmB,SAAST,EAAI,qBAAsBV,KAAKoB,eAC7CpB,KAAKmB,SAASb,EAAO,gCAAiCN,KAAKqB,cAC3DrB,KAAKmB,SAASZ,EAAQ,aAAc,IAAMG,EAAGY,QAAQ,WACrDtB,KAAKuB,gBAAgB,IAEzBzB,cAAc0B,EAAWC,MACrB,MAAMC,OAACA,GAAUD,EACXE,EAAY3B,KAAKU,GAAGF,IAAI,gBAC9BkB,GAAUF,EAAUI,MAAMC,QAAQC,IAC9BA,EAAKC,cAAgBJ,GAAaG,EAAKE,eAAeN,MAG9D5B,SACIT,EAASK,KAAKuC,UAAUC,OAAOC,MAAMnC,KAAMoC,WAC3CpC,KAAKuB,mBAETzB,eAAeuC,GACPA,IACAA,EAAGC,iBACHD,EAAGE,cAAgBF,EAAGE,aAAaD,mBAG3CxC,gBAAgB0C,GAGZjD,EAFeiD,EAAS,KAAO,OAEhBC,SAAU,WAAYzC,KAAK0C,aAE9C5C,WAAWuC,GACP,MAAM3B,GAACA,GAAMV,KAED,MADAT,EAAOoD,WAAWN,IACa,IAAxB3B,EAAGkC,mBAClB5C,KAAKsC,eAAeD,GACpB3B,EAAGF,IAAI,UAAUqC,WAAW,sBAGpC/C,QAAQuC,GACJ,IAAKA,EAAGS,SAAWT,EAAGU,UAAY/C,KAAKU,GAAGsC,UAAU,eAAgB,CAChEhD,KAAKsC,eAAeD,GACpB,MAAM/B,MAACA,GAASN,KACViD,EAAQC,KAAKC,KAAK,EAAGD,KAAKE,IAAI,EAAGf,EAAGgB,aAAehB,EAAGiB,SACtDC,EAAOjD,EAAME,IAAI,QACvBF,EAAMkD,IAAI,OAAQD,EAAe,EAARN,KAGjCnD,aAAauC,GACT,MAAM3B,GAACA,EAAEJ,MAAEA,GAASN,MACdyD,EAACA,EAACC,EAAEA,GAAKpD,EAAMqD,WACfJ,EAAOvD,KAAK4D,UACZC,GAAYC,iBAAkB,GAC9BC,EAAMR,EAAO,EAAIA,EAAO,EAC9BvD,KAAKgE,WAAWC,MAAMC,mBAAsBX,gBAAqBE,EAAIM,QAAYL,EAAIK,OACrF/D,KAAKK,WACLK,EAAGyD,YAAYN,GACfnD,EAAGY,QAAQ,gBAAiBe,GAC5B5C,GAAa2E,aAAa3E,GAC1BA,EAAY4E,WAAW,IAAM3D,EAAG4D,WAAWT,GAAU,MAEzD/D,UACI,OAAOE,KAAKU,GAAGkC,kBAEnB9C,eAAeyE,GACX,MAAMC,EAAOjF,EAAOkF,WAAWF,GACzBG,EAAOnF,EAAOoF,UAAUH,GACxBI,EAAY5E,KAAK6E,eAAeL,GAChCM,EAAOJ,EAAKK,IACZC,EAAQN,EAAKO,KACnB,OAAOH,GAAQ,GAAKE,GAAS,GAAKF,GAAQF,EAAUM,QAAUF,GAASJ,EAAUO,OAErFrF,OAAOyE,EAAI9C,MACP,MAAMiD,EAAOnF,EAAOoF,UAAUJ,GACxBa,EAAUb,EAAGc,cAAcC,MAC3BC,SAACA,GAAY9D,EACnB,OACIsD,IAAKL,EAAKK,KAAOQ,EAAW,EAAIH,EAAQI,WACxCP,KAAMP,EAAKO,MAAQM,EAAW,EAAIH,EAAQK,YAC1CN,MAAOT,EAAKS,MACZD,OAAQR,EAAKQ,SAGrBpF,WACIE,KAAK0F,OAAS,KACd1F,KAAK2F,OAAS,MAElB7F,eAAeyE,GACX,IAAKvE,KAAK0F,QAAUnB,EAAI,CACpB,MAAMqB,EAAOrB,EAAKA,EAAGc,cAAcQ,YAAYC,aAAe9F,KAAK+F,MAAMxB,GACzEvE,KAAK0F,OAAS1F,KAAKgG,OAAOJ,GAE9B,OAAO5F,KAAK0F,QAEhB5F,kBAGI,OAFKE,KAAK2F,SACN3F,KAAK2F,OAAS3F,KAAKgG,OAAOhG,KAAKuE,KAC5BvE,KAAK2F,QAEhB7F,cAAcyE,EAAI9C,GACd,MAAM8B,EAAOvD,KAAK4D,UAClB,IAAIqC,EAAMxE,MACNiE,EAAS1F,KAAK6E,eAAeN,GAC7BoB,EAAS3F,KAAKkG,kBACdC,EAAKnG,KAAKgG,OAAOzB,EAAI9C,GACrB2E,EAASH,EAAII,iBAAmB,EAAIX,EAAOX,IAC3CuB,EAAUL,EAAII,iBAAmB,EAAIX,EAAOT,KAKhD,OACIF,IALQoB,EAAGpB,IAAMxB,EAAO6C,EAAST,EAAOZ,IAMxCE,KALSkB,EAAGlB,KAAO1B,EAAO+C,EAAUX,EAAOV,KAM3CC,OALWiB,EAAGjB,OAAS3B,EAMvB4B,MALUgB,EAAGhB,MAAQ5B,EAMrBA,KAAAA,EACAmB,KAAMyB,IAGdrG,kBAAkByE,GACd,IAAKA,GAAMhF,EAAOgH,WAAWhC,GACzB,SACJ,MAAMiC,KACAC,EAASrG,OAAOsG,iBAAiBnC,GAavC,OAXI,YACA,cACA,eACA,aACA,aACA,eACA,gBACA,eACF1C,QAAQmE,IACNQ,EAAOR,GAAUW,WAAWF,EAAOT,IAAWhG,KAAK4D,YAEhD4C,GAEX1G,YAAY2B,MACR,MAAMmF,EAAM5G,KAAK+F,MAAMxB,GAAGsC,gBAC1B,IAAKD,EACD,OACJ,MAAME,EAAMF,EAAItB,KACV/B,EAAOvD,KAAK4D,UACZmD,EAAK/G,KAAK6E,iBACVmC,EAAKhH,KAAKkG,mBACVX,SAACA,GAAY9D,EACnB,OACIsD,IAAKgC,EAAGhC,KAAOQ,EAAW,EAAIuB,EAAItB,WAAajC,EAAOyD,EAAGjC,IACzDE,KAAM8B,EAAG9B,MAAQM,EAAW,EAAIuB,EAAIrB,YAAclC,EAAOyD,EAAG/B,KAC5DE,MAAO6B,EAAG7B,MACVD,OAAQ8B,EAAG9B,SAGnBpF,aAAagC,GACT,MAAMxB,EAAQwB,EAAKxB,MACb2G,EAAK3G,EAAM4G,QACZpF,EAAKqF,kBACNrF,EAAKqF,gBAAkB/H,mBAAoB6H,OAC3CjH,KAAKoH,iBAAiBC,YAAYvF,EAAKqF,gBAAgB3G,IAAI,KAE/DsB,EAAKyC,GAAG0C,GAAKA,EACbnF,EAAKqF,gBAAgBG,KAAK,IAC1B,MAAMC,EAAS9E,SAAS+E,cAAc,UACtCD,EAAOE,8FAE8BR,2EAGlC3G,EAAMoH,gEAGTrD,WAAW,IAAMvC,EAAKqF,gBAAgB3G,IAAI,GAAG6G,YAAYE,GAAS,IAEtEzH,eAAegC,GACX,MAAM6F,EAAY3H,KAAK4H,aAAa9F,GACpC,OAAO6F,GAAaA,EAAUP,kBAElCtH,aAAagC,GACT,OAAOA,GAAQA,EAAKC,aAAe/B,KAAKU,GAAGF,IAAI,iBAEnDV,SACI,MAAMyE,GAACA,EAAEsD,IAAEA,EAAGjH,KAAEA,EAAIN,MAAEA,EAAKI,GAAEA,EAAEH,OAAEA,GAAUP,KACrC8H,EAAOpH,EAAGF,IAAI,eACduH,EAAUzH,EAAME,IAAI,WAC1BqH,EAAIP,KAAKtH,KAAKgI,YACd,MAAMC,EAAUJ,EAAIK,KAAK,iBACzBlI,KAAKgE,WAAaiE,EAAQzH,IAAI,GAC9BR,KAAK+H,QAAUA,EACXA,GAAoC,mBAAlBA,EAAQI,QAC1B7H,EAAME,IAAI,SAASgD,KACfuE,QAAAA,EACAK,KAAML,EAAQM,aACd5B,OAAQqB,EAAKQ,WAGrB,MAAMC,EAAWV,EAAIK,KAAK,gBAC1BlI,KAAKwI,aAAeD,EAAS/H,IAAI,GACjC+H,EAASE,8BACA7H,UAAeA,gEACbA,yCACEA,0EAGPA,6DACKA,uCACAA,uCACAA,oEACAA,yCACAA,0CACAA,+CAGX,MAAM8H,EAAUnE,EAAGoE,kBAAmB/H,UACtCZ,KAAK4I,KAAOrE,EAAGoE,kBAAmB/H,gBAClCZ,KAAK6I,QAAUtE,EAAGoE,kBAAmB/H,UACrCZ,KAAK8I,SAAWvE,EAAGoE,kBAAmB/H,gBACtCZ,KAAK+I,QAAUxE,EAAGoE,kBAAmB/H,UACrCZ,KAAKgJ,UAAYzE,EAAGoE,kBAAmB/H,YACvCZ,KAAKiJ,UAAY1E,EAAGoE,kBAAmB/H,YACvCZ,KAAKkJ,SAAW3E,EAAGoE,kBAAmB/H,aACtCZ,KAAKmJ,cAAgB5E,EAAGoE,kBAAmB/H,mBAC3CZ,KAAKoJ,YAAc7E,EAAGoE,kBAAmB/H,aACzCZ,KAAK0I,QAAUA,EACf1I,KAAKuE,GAAGzD,UAAYd,KAAKc,UACzB,MAAMuI,EAAO/I,EAAME,IAAI,UAMvB,OALA6I,EAAKC,eACL/I,EAAO4H,SACPzH,EAAG6I,gBAAgBF,EAAKG,GAAG,GAAG1H,MAC9BmG,EAAQQ,OAAOlI,EAAOgE,IACtBvE,KAAK+F,MAAQsD,EAAKG,GAAG,GAAG1H,KACjB9B","file":"../../../canvas/view/CanvasView.js","sourcesContent":["define([\n    \"skylark-langx/langx\",\n    \"skylark-jquery\",\n    'skylark-backbone',\n    'skylark-underscore',\n    '../../utils/mixins',\n    './FramesView'\n], function (langx,$,Backbone, _, mixins, FramesView) {\n    'use strict';\n    let timerZoom;\n    return Backbone.View.extend({\n        events: { wheel: 'onWheel' },\n        template() {\n            const {pfx} = this;\n            return `\n      <div class=\"${ pfx }canvas__frames\" data-frames></div>\n      <div id=\"${ pfx }tools\" class=\"${ pfx }canvas__tools\" data-tools></div>\n    `;\n        },\n        initialize(o) {\n            _.bindAll(this, 'clearOff', 'onKeyPress');\n            mixins.on(window, 'scroll resize', this.clearOff);\n            const {model} = this;\n            const frames = model.get('frames');\n            this.config = o.config || {};\n            this.em = this.config.em || {};\n            this.pfx = this.config.stylePrefix || '';\n            this.ppfx = this.config.pStylePrefix || '';\n            this.className = this.config.stylePrefix + 'canvas';\n            const {em, config} = this;\n            this.frames = new FramesView({\n                collection: frames,\n                config: langx.mixin({},config,{\n                    canvasView: this,\n                    renderContent: 1\n                })\n            });\n            this.listenTo(em, 'change:canvasOffset', this.clearOff);\n            this.listenTo(em, 'component:selected', this.checkSelected);\n            this.listenTo(model, 'change:zoom change:x change:y', this.updateFrames);\n            this.listenTo(frames, 'loaded:all', () => em.trigger('loaded'));\n            this.toggleListeners(1);\n        },\n        checkSelected(component, opts = {}) {\n            const {scroll} = opts;\n            const currFrame = this.em.get('currentFrame');\n            scroll && component.views.forEach(view => {\n                view._getFrame() !== currFrame && view.scrollIntoView(scroll);\n            });\n        },\n        remove() {\n            Backbone.View.prototype.remove.apply(this, arguments);\n            this.toggleListeners();\n        },\n        preventDefault(ev) {\n            if (ev) {\n                ev.preventDefault();\n                ev._parentEvent && ev._parentEvent.preventDefault();\n            }\n        },\n        toggleListeners(enable) {\n            const method = enable ? 'on' : 'off';\n\n            mixins[method](document, 'keypress', this.onKeyPress);\n        },\n        onKeyPress(ev) {\n            const {em} = this;\n            const key = mixins.getKeyChar(ev);\n            if (key === ' ' && em.getZoomDecimal() !== 1) {\n                this.preventDefault(ev);\n                em.get('Editor').runCommand('core:canvas-move');\n            }\n        },\n        onWheel(ev) {\n            if ((ev.ctrlKey || ev.metaKey) && this.em.getConfig('multiFrames')) {\n                this.preventDefault(ev);\n                const {model} = this;\n                const delta = Math.max(-1, Math.min(1, ev.wheelDelta || -ev.detail));\n                const zoom = model.get('zoom');\n                model.set('zoom', zoom + delta * 2);\n            }\n        },\n        updateFrames(ev) {\n            const {em, model} = this;\n            const {x, y} = model.attributes;\n            const zoom = this.getZoom();\n            const defOpts = { preserveSelected: 1 };\n            const mpl = zoom ? 1 / zoom : 1;\n            this.framesArea.style.transform = `scale(${ zoom }) translate(${ x * mpl }px, ${ y * mpl }px)`;\n            this.clearOff();\n            em.stopDefault(defOpts);\n            em.trigger('canvas:update', ev);\n            timerZoom && clearTimeout(timerZoom);\n            timerZoom = setTimeout(() => em.runDefault(defOpts), 300);\n        },\n        getZoom() {\n            return this.em.getZoomDecimal();\n        },\n        isElInViewport(el) {\n            const elem = mixins.getElement(el);\n            const rect = mixins.getElRect(elem);\n            const frameRect = this.getFrameOffset(elem);\n            const rTop = rect.top;\n            const rLeft = rect.left;\n            return rTop >= 0 && rLeft >= 0 && rTop <= frameRect.height && rLeft <= frameRect.width;\n        },\n        offset(el, opts = {}) {\n            const rect = mixins.getElRect(el);\n            const docBody = el.ownerDocument.body;\n            const {noScroll} = opts;\n            return {\n                top: rect.top + (noScroll ? 0 : docBody.scrollTop),\n                left: rect.left + (noScroll ? 0 : docBody.scrollLeft),\n                width: rect.width,\n                height: rect.height\n            };\n        },\n        clearOff() {\n            this.frmOff = null;\n            this.cvsOff = null;\n        },\n        getFrameOffset(el) {\n            if (!this.frmOff || el) {\n                const frEl = el ? el.ownerDocument.defaultView.frameElement : this.frame.el;\n                this.frmOff = this.offset(frEl);\n            }\n            return this.frmOff;\n        },\n        getCanvasOffset() {\n            if (!this.cvsOff)\n                this.cvsOff = this.offset(this.el);\n            return this.cvsOff;\n        },\n        getElementPos(el, opts) {\n            const zoom = this.getZoom();\n            var opt = opts || {};\n            var frmOff = this.getFrameOffset(el);\n            var cvsOff = this.getCanvasOffset();\n            var eo = this.offset(el, opts);\n            var frmTop = opt.avoidFrameOffset ? 0 : frmOff.top;\n            var frmLeft = opt.avoidFrameOffset ? 0 : frmOff.left;\n            const top = eo.top * zoom + frmTop - cvsOff.top;\n            const left = eo.left * zoom + frmLeft - cvsOff.left;\n            const height = eo.height * zoom;\n            const width = eo.width * zoom;\n            return {\n                top,\n                left,\n                height,\n                width,\n                zoom,\n                rect: eo\n            };\n        },\n        getElementOffsets(el) {\n            if (!el || mixins.isTextNode(el))\n                return {};\n            const result = {};\n            const styles = window.getComputedStyle(el);\n            [\n                'marginTop',\n                'marginRight',\n                'marginBottom',\n                'marginLeft',\n                'paddingTop',\n                'paddingRight',\n                'paddingBottom',\n                'paddingLeft'\n            ].forEach(offset => {\n                result[offset] = parseFloat(styles[offset]) * this.getZoom();\n            });\n            return result;\n        },\n        getPosition(opts = {}) {\n            const doc = this.frame.el.contentDocument;\n            if (!doc)\n                return;\n            const bEl = doc.body;\n            const zoom = this.getZoom();\n            const fo = this.getFrameOffset();\n            const co = this.getCanvasOffset();\n            const {noScroll} = opts;\n            return {\n                top: fo.top + (noScroll ? 0 : bEl.scrollTop) * zoom - co.top,\n                left: fo.left + (noScroll ? 0 : bEl.scrollLeft) * zoom - co.left,\n                width: co.width,\n                height: co.height\n            };\n        },\n        updateScript(view) {\n            const model = view.model;\n            const id = model.getId();\n            if (!view.scriptContainer) {\n                view.scriptContainer = $(`<div data-id=\"${ id }\">`);\n                this.getJsContainer().appendChild(view.scriptContainer.get(0));\n            }\n            view.el.id = id;\n            view.scriptContainer.html('');\n            const script = document.createElement('script');\n            script.innerHTML = `\n        setTimeout(function() {\n          var item = document.getElementById('${ id }');\n          if (!item) return;\n          (function(){\n            ${ model.getScriptString() };\n          }.bind(item))()\n        }, 1);`;\n            setTimeout(() => view.scriptContainer.get(0).appendChild(script), 0);\n        },\n        getJsContainer(view) {\n            const frameView = this.getFrameView(view);\n            return frameView && frameView.getJsContainer();\n        },\n        getFrameView(view) {\n            return view && view._getFrame() || this.em.get('currentFrame');\n        },\n        render() {\n            const {el, $el, ppfx, model, em, frames} = this;\n            const cssc = em.get('CssComposer');\n            const wrapper = model.get('wrapper');\n            $el.html(this.template());\n            const $frames = $el.find('[data-frames]');\n            this.framesArea = $frames.get(0);\n            this.wrapper = wrapper;\n            if (wrapper && typeof wrapper.render == 'function') {\n                model.get('frame').set({\n                    wrapper,\n                    root: wrapper.getWrapper(),\n                    styles: cssc.getAll()\n                });\n            }\n            const toolsWrp = $el.find('[data-tools]');\n            this.toolsWrapper = toolsWrp.get(0);\n            toolsWrp.append(`\n      <div class=\"${ ppfx }tools ${ ppfx }tools-gl\" style=\"pointer-events:none\">\n        <div class=\"${ ppfx }placeholder\">\n          <div class=\"${ ppfx }placeholder-int\"></div>\n        </div>\n      </div>\n      <div id=\"${ ppfx }tools\" style=\"pointer-events:none\">\n        <div class=\"${ ppfx }badge\"></div>\n        <div class=\"${ ppfx }ghost\"></div>\n        <div class=\"${ ppfx }toolbar\" style=\"pointer-events:all\"></div>\n        <div class=\"${ ppfx }resizer\"></div>\n        <div class=\"${ ppfx }offset-v\"></div>\n        <div class=\"${ ppfx }offset-fixed-v\"></div>\n      </div>\n    `);\n            const toolsEl = el.querySelector(`#${ ppfx }tools`);\n            this.hlEl = el.querySelector(`.${ ppfx }highlighter`);\n            this.badgeEl = el.querySelector(`.${ ppfx }badge`);\n            this.placerEl = el.querySelector(`.${ ppfx }placeholder`);\n            this.ghostEl = el.querySelector(`.${ ppfx }ghost`);\n            this.toolbarEl = el.querySelector(`.${ ppfx }toolbar`);\n            this.resizerEl = el.querySelector(`.${ ppfx }resizer`);\n            this.offsetEl = el.querySelector(`.${ ppfx }offset-v`);\n            this.fixedOffsetEl = el.querySelector(`.${ ppfx }offset-fixed-v`);\n            this.toolsGlobEl = el.querySelector(`.${ ppfx }tools-gl`);\n            this.toolsEl = toolsEl;\n            this.el.className = this.className;\n            const frms = model.get('frames');\n            frms.listenToLoad();\n            frames.render();\n            em.setCurrentFrame(frms.at(0).view);\n            $frames.append(frames.el);\n            this.frame = frms.at(0).view;\n            return this;\n        }\n    });\n});"]}
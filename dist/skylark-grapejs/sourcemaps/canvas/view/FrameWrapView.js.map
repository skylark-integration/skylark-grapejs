{"version":3,"sources":["canvas/view/FrameWrapView.js"],"names":["define","Backbone","FrameView","a","b","Dragger","View","extend","events","click [data-action-remove]","mousedown [data-action-move]","[object Object]","opts","conf","bindAll","this","model","config","frameWrapView","canvasView","em","cv","canvas","get","ppfx","pStylePrefix","frame","classAnim","listenTo","frameLoaded","updatePos","updateSize","setupDragger","dragX","dragY","zoom","toggleEffects","on","toggleFramesEvents","dragger","onStart","x","y","attributes","getZoomMultiplier","onEnd","setPosition","posOpts","set","ev","start","prototype","remove","apply","arguments","updateOffset","debounce","$el","runDefault","preserveSelected","removeClass","_emitUpdated","md","el","style","rect","left","isNaN","top","updateDim","width","height","currW","currH","newW","newH","noChanges","addClass","isNumber","isNull","newDims","offsetWidth","offsetHeight","silent","stopDefault","one","motionsEv","trigger","body","getBody","target","getWindow","onscroll","onScroll","onRender","render","empty","attr","class","append","elTools","createEl","toolsWrapper","appendChild","elTop","querySelector","elRight","elBottom","elLeft","frameWrapperView","startDrag"],"mappings":"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","file":"../../../canvas/view/FrameWrapView.js","sourcesContent":["define([\n    'skylark-backbone',\n    './FrameView',\n    'skylark-underscore',\n    '../../utils/dom',\n    '../../utils/Dragger'\n], function (Backbone, FrameView, a, b, Dragger) {\n    'use strict';\n    return Backbone.View.extend({\n        events: {\n            'click [data-action-remove]': 'remove',\n            'mousedown [data-action-move]': 'startDrag'\n        },\n        initialize(opts = {}, conf = {}) {\n            a.bindAll(this, 'onScroll', 'frameLoaded', 'updateOffset', 'remove', 'startDrag');\n            const {model} = this;\n            const config = {\n                ...opts.config || conf,\n                frameWrapView: this\n            };\n            const {canvasView, em} = config;\n            this.cv = canvasView;\n            this.config = config;\n            this.em = em;\n            this.canvas = em && em.get('Canvas');\n            this.ppfx = config.pStylePrefix || '';\n            this.frame = new FrameView({\n                model,\n                config\n            });\n            this.classAnim = `${ this.ppfx }frame-wrapper--anim`;\n            this.listenTo(model, 'loaded', this.frameLoaded);\n            this.listenTo(model, 'change:x change:y', this.updatePos);\n            this.listenTo(model, 'change:width change:height', this.updateSize);\n            this.updatePos();\n            this.setupDragger();\n        },\n        setupDragger() {\n            const {canvas, model} = this;\n            let dragX, dragY, zoom;\n            const toggleEffects = on => {\n                canvas.toggleFramesEvents(on);\n            };\n            this.dragger = new Dragger({\n                onStart: () => {\n                    const {x, y} = model.attributes;\n                    zoom = this.em.getZoomMultiplier();\n                    dragX = x;\n                    dragY = y;\n                    toggleEffects();\n                },\n                onEnd: () => toggleEffects(1),\n                setPosition: posOpts => {\n                    model.set({\n                        x: dragX + posOpts.x * zoom,\n                        y: dragY + posOpts.y * zoom\n                    });\n                }\n            });\n        },\n        startDrag(ev) {\n            ev && this.dragger.start(ev);\n        },\n        remove() {\n            Backbone.View.prototype.remove.apply(this, arguments);\n            this.frame.remove();\n            return this;\n        },\n        updateOffset: a.debounce(function () {\n            const {em, $el, frame} = this;\n            em.runDefault({ preserveSelected: 1 });\n            $el.removeClass(this.classAnim);\n            frame.model._emitUpdated();\n        }),\n        updatePos(md) {\n            const {model, el} = this;\n            const {x, y} = model.attributes;\n            const {style} = el;\n            this.frame.rect = 0;\n            style.left = isNaN(x) ? x : `${ x }px`;\n            style.top = isNaN(y) ? y : `${ y }px`;\n            md && this.updateOffset();\n        },\n        updateSize: a.debounce(function () {\n            this.updateDim();\n        }),\n        updateDim() {\n            const {em, el, $el, model, classAnim} = this;\n            const {width, height} = model.attributes;\n            const {style} = el;\n            const currW = style.width || '';\n            const currH = style.height || '';\n            const newW = width || '';\n            const newH = height || '';\n            const noChanges = currW == newW && currH == newH;\n            const un = 'px';\n            this.frame.rect = 0;\n            $el.addClass(classAnim);\n            style.width = a.isNumber(newW) ? `${ newW }${ un }` : newW;\n            style.height = a.isNumber(newH) ? `${ newH }${ un }` : newH;\n            if (a.isNull(width) || a.isNull(height)) {\n                const newDims = {\n                    ...!width ? { width: el.offsetWidth } : {},\n                    ...!height ? { height: el.offsetHeight } : {}\n                };\n                model.set(newDims, { silent: 1 });\n            }\n            em.stopDefault({ preserveSelected: 1 });\n            noChanges ? this.updateOffset() : $el.one(b.motionsEv, this.updateOffset);\n        },\n        onScroll() {\n            const {frame, em} = this;\n            em.trigger('frame:scroll', {\n                frame,\n                body: frame.getBody(),\n                target: frame.getWindow()\n            });\n        },\n        frameLoaded() {\n            const {frame} = this;\n            frame.getWindow().onscroll = this.onScroll;\n            this.updateDim();\n        },\n        render() {\n            const {frame, $el, ppfx, cv, model, el} = this;\n            const {onRender} = model.attributes;\n            frame.render();\n            $el.empty().attr({ class: `${ ppfx }frame-wrapper` }).append(`\n      <div class=\"${ ppfx }frame-wrapper__top gjs-two-color\" data-frame-top>\n        <div class=\"${ ppfx }frame-wrapper__name\" data-action-move>\n          ${ model.get('name') || '' }\n        </div>\n        <div class=\"${ ppfx }frame-wrapper__top-r\">\n          <div class=\"${ ppfx }frame-wrapper__icon\" data-action-remove style=\"display: none\">\n            <svg viewBox=\"0 0 24 24\"><path d=\"M19 4h-3.5l-1-1h-5l-1 1H5v2h14M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12z\"></path></svg>\n          </div>\n        </div>\n      </div>\n      <div class=\"${ ppfx }frame-wrapper__right\" data-frame-right></div>\n      <div class=\"${ ppfx }frame-wrapper__left\" data-frame-left></div>\n      <div class=\"${ ppfx }frame-wrapper__bottom\" data-frame-bottom></div>\n      `).append(frame.el);\n            const elTools = b.createEl('div', {\n                class: `${ ppfx }tools`,\n                style: 'pointer-events:none; opacity: 0'\n            }, `\n      <div class=\"${ ppfx }highlighter\" data-hl></div>\n      <div class=\"${ ppfx }badge\" data-badge></div>\n      <div class=\"${ ppfx }placeholder\">\n        <div class=\"${ ppfx }placeholder-int\"></div>\n      </div>\n      <div class=\"${ ppfx }ghost\"></div>\n      <div class=\"${ ppfx }toolbar\" style=\"pointer-events:all\"></div>\n      <div class=\"${ ppfx }resizer\"></div>\n      <div class=\"${ ppfx }offset-v\" data-offset>\n        <div class=\"gjs-marginName\" data-offset-m>\n          <div class=\"gjs-margin-v-el gjs-margin-v-top\" data-offset-m-t></div>\n          <div class=\"gjs-margin-v-el gjs-margin-v-bottom\" data-offset-m-b></div>\n          <div class=\"gjs-margin-v-el gjs-margin-v-left\" data-offset-m-l></div>\n          <div class=\"gjs-margin-v-el gjs-margin-v-right\" data-offset-m-r></div>\n        </div>\n        <div class=\"gjs-paddingName\" data-offset-m>\n          <div class=\"gjs-padding-v-el gjs-padding-v-top\" data-offset-p-t></div>\n          <div class=\"gjs-padding-v-el gjs-padding-v-bottom\" data-offset-p-b></div>\n          <div class=\"gjs-padding-v-el gjs-padding-v-left\" data-offset-p-l></div>\n          <div class=\"gjs-padding-v-el gjs-padding-v-right\" data-offset-p-r></div>\n        </div>\n      </div>\n      <div class=\"${ ppfx }offset-fixed-v\"></div>\n    `);\n            this.elTools = elTools;\n            cv.toolsWrapper.appendChild(elTools);\n            onRender && onRender({\n                el,\n                elTop: el.querySelector('[data-frame-top]'),\n                elRight: el.querySelector('[data-frame-right]'),\n                elBottom: el.querySelector('[data-frame-bottom]'),\n                elLeft: el.querySelector('[data-frame-left]'),\n                frame: model,\n                frameWrapperView: this,\n                remove: this.remove,\n                startDrag: this.startDrag\n            });\n            return this;\n        }\n    });\n});"]}
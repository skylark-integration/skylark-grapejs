{"version":3,"sources":["utils/Sorter.js"],"names":["define","Backbone","_","mixins","$","View","extend","[object Object]","opt","this","bindAll","o","elT","elL","borderOffset","el","container","document","querySelector","$el","containerSel","itemSel","draggable","nested","pfx","ppfx","freezeClass","onStart","onEndMove","direction","onMoveClb","onMove","relative","ignoreViewChildren","ignoreModels","plh","placer","wmargin","offTop","offsetTop","offLeft","offsetLeft","$document","dropContent","em","dragHelper","canvasRelative","selectOnEnd","avoidSelectOnEnd","scale","activeTextModel","on","updateOffset","result","elem","elDoc","ownerDocument","get","getBody","docs","push","offset","top","left","content","dropModel","e","Canvas","targetDoc","getDocument","range","caretRangeFromPoint","poiner","getPointerEvent","clientX","clientY","rangeParent","createRange","setStart","rangeOffset","sel","getWindow","getSelection","getFrameEl","focus","removeAllRanges","addRange","model","mode","getEl","contentEditable","active","cv","startAutoscroll","stopAutoscroll","event","ev","clonedEl","cloneNode","rect","getBoundingClientRect","computed","getComputedStyle","style","i","length","prop","getPropertyValue","body","appendChild","className","setAttribute","width","height","moveDragHelper","doc","target","posY","pageY","posX","pageX","addTop","addLeft","frame","defaultView","parentWindow","frameElement","dragHelperStyle","frameRect","documentElement","scrollTop","scrollLeft","matches","selector","useBody","call","parentNode","nodeType","createElement","ins","display","src","opts","contSel","getContainerEl","getDocuments","srcModel","prevTarget","moved","closest","eV","createPlaceholder","getSourceModel","set","endMove","rollback","parent","index","clearSelection","toggleSortCursor","trigger","data","source","avoidChildren","isTextable","isTextableActive","comps","getComponents","avoidStore","avoidUpdateStyle","tempModel","add","temporary","remove","Array","Collection","targetModel","dsp","eO","Math","abs","rY","rX","mousePos","getMouseRelativeCanvas","noScroll","x","y","eventMove","sourceModel","dims","dimsFromTarget","getTargetModel","selectTargetModel","lastDims","pos","findPosition","setContentEditable","lastPos","updateTextViewCursorPosition","disableTextable","method","movePlaceholder","prevTargetDim","$plh","css","isFunction","trg","is","getView","disableEditing","offsetHeight","styleInFlow","isTextNode","$parent","overflow","position","tagName","trgModel","valid","view","join","dragInfo","isString","droppable","dropInfo","targetP","validResult","validTarget","getDim","cacheDimsP","getChildrenDim","cacheDims","nearBorders","targetParent","targetPrev","getTargetFromEl","nearElBorders","getCurrentPos","canvas","getElementPos","elOffsets","getElementOffsets","marginTop","marginLeft","marginBottom","marginRight","offsetWidth","getCurrentView","getChildrenContainer","each","children","getModel","elIndex","dim","dir","isInFlow","off","t","l","h","w","indexEl","leftLimit","xLimit","dimRight","yLimit","xCenter","yCenter","dimDown","len","trgDim","un","elDim","borderColor","borderWidth","brd","margin","marg","brdCol","parseInt","margI","toMove","isArray","forEach","move","removeChild","m","cancelled","dst","srcEl","getElement","modelToDrop","modelTemp","created","warns","targetCollection","at","noIncrement","silent","collection","viewActive","activeRte","modelEl","render","outerHTML","insertHTML","console","warn","which","keyCode"],"mappings":"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","file":"../../utils/Sorter.js","sourcesContent":["define([\n    'skylark-backbone',\n    'skylark-underscore',\n    './mixins'\n], function (Backbone, _, mixins) {\n    'use strict';\n    const $ = Backbone.$;\n    return Backbone.View.extend({\n        initialize(opt) {\n            this.opt = opt || {};\n            _.bindAll(this, 'startSort', 'onMove', 'endMove', 'rollback', 'updateOffset', 'moveDragHelper');\n            var o = opt || {};\n            this.elT = 0;\n            this.elL = 0;\n            this.borderOffset = o.borderOffset || 10;\n            var el = o.container;\n            this.el = typeof el === 'string' ? document.querySelector(el) : el;\n            this.$el = $(this.el);\n            this.containerSel = o.containerSel || 'div';\n            this.itemSel = o.itemSel || 'div';\n            this.draggable = o.draggable || true;\n            this.nested = o.nested || 0;\n            this.pfx = o.pfx || '';\n            this.ppfx = o.ppfx || '';\n            this.freezeClass = o.freezeClass || this.pfx + 'freezed';\n            this.onStart = o.onStart || '';\n            this.onEndMove = o.onEndMove || '';\n            this.direction = o.direction || 'v';\n            this.onMoveClb = o.onMove || '';\n            this.relative = o.relative || 0;\n            this.ignoreViewChildren = o.ignoreViewChildren || 0;\n            this.ignoreModels = o.ignoreModels || 0;\n            this.plh = o.placer || '';\n            this.wmargin = o.wmargin || 0;\n            this.offTop = o.offsetTop || 0;\n            this.offLeft = o.offsetLeft || 0;\n            this.document = o.document || document;\n            this.$document = $(this.document);\n            this.dropContent = null;\n            this.em = o.em || '';\n            this.dragHelper = null;\n            this.canvasRelative = o.canvasRelative || 0;\n            this.selectOnEnd = !o.avoidSelectOnEnd;\n            this.scale = o.scale;\n            this.activeTextModel = null;\n            if (this.em && this.em.on) {\n                this.em.on('change:canvasOffset', this.updateOffset);\n                this.updateOffset();\n            }\n        },\n        getScale() {\n            return _.result(this, scale) || 1;\n        },\n        getContainerEl(elem) {\n            if (elem)\n                this.el = elem;\n            if (!this.el) {\n                var el = this.opt.container;\n                this.el = typeof el === 'string' ? document.querySelector(el) : el;\n                this.$el = $(this.el);\n            }\n            return this.el;\n        },\n        getDocuments(el) {\n            const em = this.em;\n            const elDoc = el ? el.ownerDocument : em && em.get('Canvas').getBody().ownerDocument;\n            const docs = [document];\n            elDoc && docs.push(elDoc);\n            return docs;\n        },\n        updateOffset() {\n            const offset = this.em.get('canvasOffset') || {};\n            this.offTop = offset.top;\n            this.offLeft = offset.left;\n        },\n        setDropContent(content) {\n            this.dropModel = null;\n            this.dropContent = content;\n        },\n        updateTextViewCursorPosition(e) {\n            const Canvas = this.em.get('Canvas');\n            const targetDoc = Canvas.getDocument();\n            let range = null;\n            if (targetDoc.caretRangeFromPoint) {\n                const poiner = mixins.getPointerEvent(e);\n                range = targetDoc.caretRangeFromPoint(poiner.clientX, poiner.clientY);\n            } else if (e.rangeParent) {\n                range = targetDoc.createRange();\n                range.setStart(e.rangeParent, e.rangeOffset);\n            }\n            const sel = Canvas.getWindow().getSelection();\n            Canvas.getFrameEl().focus();\n            sel.removeAllRanges();\n            range && sel.addRange(range);\n        },\n        setContentEditable(model, mode) {\n            if (model) {\n                const el = model.getEl();\n                if (el.contentEditable != mode)\n                    el.contentEditable = mode;\n            }\n        },\n        toggleSortCursor(active) {\n            const {em} = this;\n            const cv = em && em.get('Canvas');\n            cv && (active ? cv.startAutoscroll() : cv.stopAutoscroll());\n        },\n        setDragHelper(el, event) {\n            const ev = event || '';\n            const clonedEl = el.cloneNode(1);\n            const rect = el.getBoundingClientRect();\n            const computed = getComputedStyle(el);\n            let style = '';\n            for (var i = 0; i < computed.length; i++) {\n                const prop = computed[i];\n                style += `${ prop }:${ computed.getPropertyValue(prop) };`;\n            }\n            document.body.appendChild(clonedEl);\n            clonedEl.className += ` ${ this.pfx }bdrag`;\n            clonedEl.setAttribute('style', style);\n            this.dragHelper = clonedEl;\n            clonedEl.style.width = `${ rect.width }px`;\n            clonedEl.style.height = `${ rect.height }px`;\n            ev && this.moveDragHelper(ev);\n            if (this.em) {\n                $(this.em.get('Canvas').getBody().ownerDocument).on('mousemove', this.moveDragHelper).on('mousemove', this.moveDragHelper);\n            }\n            $(document).on('mousemove', this.moveDragHelper).on('mousemove', this.moveDragHelper);\n        },\n        moveDragHelper(e) {\n            const doc = e.target.ownerDocument;\n            if (!this.dragHelper || !doc) {\n                return;\n            }\n            let posY = e.pageY;\n            let posX = e.pageX;\n            let addTop = 0;\n            let addLeft = 0;\n            const window = doc.defaultView || doc.parentWindow;\n            const frame = window.frameElement;\n            const dragHelperStyle = this.dragHelper.style;\n            if (frame) {\n                const frameRect = frame.getBoundingClientRect();\n                addTop = frameRect.top + document.documentElement.scrollTop;\n                addLeft = frameRect.left + document.documentElement.scrollLeft;\n                posY = e.clientY;\n                posX = e.clientX;\n            }\n            dragHelperStyle.top = posY + addTop + 'px';\n            dragHelperStyle.left = posX + addLeft + 'px';\n        },\n        matches(el, selector, useBody) {\n            return mixins.matches.call(el, selector);\n        },\n        closest(el, selector) {\n            if (!el)\n                return;\n            var elem = el.parentNode;\n            while (elem && elem.nodeType === 1) {\n                if (this.matches(elem, selector))\n                    return elem;\n                elem = elem.parentNode;\n            }\n            return null;\n        },\n        offset(el) {\n            var rect = el.getBoundingClientRect();\n            return {\n                top: rect.top + document.body.scrollTop,\n                left: rect.left + document.body.scrollLeft\n            };\n        },\n        createPlaceholder() {\n            var pfx = this.pfx;\n            var el = document.createElement('div');\n            var ins = document.createElement('div');\n            el.className = pfx + 'placeholder';\n            el.style.display = 'none';\n            el.style['pointer-events'] = 'none';\n            ins.className = pfx + 'placeholder-int';\n            el.appendChild(ins);\n            return el;\n        },\n        startSort(src, opts = {}) {\n            const em = this.em;\n            const itemSel = this.itemSel;\n            const contSel = this.containerSel;\n            const container = this.getContainerEl(opts.container);\n            const docs = this.getDocuments(src);\n            const onStart = this.onStart;\n            let srcModel;\n            let plh = this.plh;\n            this.dropModel = null;\n            this.target = null;\n            this.prevTarget = null;\n            this.moved = 0;\n            if (src && !this.matches(src, `${ itemSel }, ${ contSel }`)) {\n                src = this.closest(src, itemSel);\n            }\n            this.eV = src;\n            if (!plh) {\n                plh = this.createPlaceholder();\n                container.appendChild(plh);\n                this.plh = plh;\n            }\n            if (src) {\n                srcModel = this.getSourceModel(src);\n                srcModel && srcModel.set && srcModel.set('status', 'freezed');\n                this.srcModel = srcModel;\n            }\n            mixins.on(container, 'mousemove dragover', this.onMove);\n            mixins.on(docs, 'mouseup dragend touchend', this.endMove);\n            mixins.on(docs, 'keydown', this.rollback);\n            onStart && onStart({\n                target: srcModel,\n                parent: srcModel && srcModel.parent(),\n                index: srcModel && srcModel.index()\n            });\n            em && em.clearSelection();\n            this.toggleSortCursor(1);\n            em && em.trigger('sorter:drag:start', src, srcModel);\n        },\n        getTargetModel(el) {\n            let elem = el || this.target;\n            return $(elem).data('model');\n        },\n        getSourceModel(source, {target, avoidChildren = 1} = {}) {\n            const {em, eV} = this;\n            const src = source || eV;\n            let {dropModel, dropContent} = this;\n            const isTextable = src => src && target && src.opt && src.opt.avoidChildren && this.isTextableActive(src, target);\n            if (dropContent && em) {\n                if (isTextable(dropModel)) {\n                    dropModel = null;\n                }\n                if (!dropModel) {\n                    const comps = em.get('DomComponents').getComponents();\n                    const opts = {\n                        avoidChildren,\n                        avoidStore: 1,\n                        avoidUpdateStyle: 1\n                    };\n                    const tempModel = comps.add(dropContent, {...opts,\n                        temporary: 1\n                    });\n                    dropModel = comps.remove(tempModel, opts);\n                    dropModel = dropModel instanceof Array ? dropModel[0] : dropModel;\n                    this.dropModel = dropModel;\n                    if (isTextable(dropModel)) {\n                        return this.getSourceModel(src, {\n                            target,\n                            avoidChildren: 0\n                        });\n                    }\n                }\n                return dropModel;\n            }\n            return src && $(src).data('model');\n        },\n        selectTargetModel(model) {\n            if (model instanceof Backbone.Collection) {\n                return;\n            }\n            const {targetModel} = this;\n            if (targetModel && targetModel !== this.srcModel) {\n                targetModel.set('status', '');\n            }\n            if (model && model.set) {\n                model.set('status', 'selected-parent');\n                this.targetModel = model;\n            }\n        },\n        onMove(e) {\n            const ev = e;\n            const {em, onMoveClb, plh} = this;\n            this.moved = 1;\n            var dsp = plh.style.display;\n            if (!dsp || dsp === 'none')\n                plh.style.display = 'block';\n            var eO = this.offset(this.el);\n            this.elT = this.wmargin ? Math.abs(eO.top) : eO.top;\n            this.elL = this.wmargin ? Math.abs(eO.left) : eO.left;\n            var rY = e.pageY - this.elT + this.el.scrollTop;\n            var rX = e.pageX - this.elL + this.el.scrollLeft;\n            if (this.canvasRelative && em) {\n                const mousePos = em.get('Canvas').getMouseRelativeCanvas(e, { noScroll: 1 });\n                rX = mousePos.x;\n                rY = mousePos.y;\n            }\n            this.rX = rX;\n            this.rY = rY;\n            this.eventMove = e;\n            const sourceModel = this.getSourceModel();\n            const dims = this.dimsFromTarget(e.target, rX, rY);\n            const target = this.target;\n            const targetModel = target && this.getTargetModel(target);\n            this.selectTargetModel(targetModel);\n            if (!targetModel)\n                plh.style.display = 'none';\n            if (!target)\n                return;\n            this.lastDims = dims;\n            const pos = this.findPosition(dims, rX, rY);\n            if (this.isTextableActive(sourceModel, targetModel)) {\n                this.activeTextModel = targetModel;\n                this.setContentEditable(targetModel, true);\n                plh.style.display = 'none';\n                this.lastPos = pos;\n                this.updateTextViewCursorPosition(ev);\n            } else {\n                this.disableTextable();\n                this.activeTextModel = null;\n                if (!this.lastPos || (this.lastPos.index != pos.index || this.lastPos.method != pos.method)) {\n                    this.movePlaceholder(this.plh, dims, pos, this.prevTargetDim);\n                    if (!this.$plh)\n                        this.$plh = $(this.plh);\n                    if (!this.canvasRelative) {\n                        if (this.offTop)\n                            this.$plh.css('top', '+=' + this.offTop + 'px');\n                        if (this.offLeft)\n                            this.$plh.css('left', '+=' + this.offLeft + 'px');\n                    }\n                    this.lastPos = pos;\n                }\n            }\n            _.isFunction(onMoveClb) && onMoveClb({\n                event: e,\n                target: sourceModel,\n                parent: targetModel,\n                index: pos.index + (pos.method == 'after' ? 1 : 0)\n            });\n            em && em.trigger('sorter:drag', {\n                target,\n                targetModel,\n                sourceModel,\n                dims,\n                pos,\n                x: rX,\n                y: rY\n            });\n        },\n        isTextableActive(src, trg) {\n            return src && src.get && src.get('textable') && trg && trg.is('text');\n        },\n        disableTextable() {\n            const {activeTextModel} = this;\n            activeTextModel && activeTextModel.getView().disableEditing();\n        },\n        isInFlow(el, parent) {\n            if (!el)\n                return false;\n            parent = parent || document.body;\n            var ch = -1, h;\n            var elem = el;\n            h = elem.offsetHeight;\n            if (!this.styleInFlow(elem, parent))\n                return false;\n            else\n                return true;\n        },\n        styleInFlow(el, parent) {\n            if (mixins.isTextNode(el))\n                return;\n            const style = el.style || {};\n            const $el = $(el);\n            const $parent = parent && $(parent);\n            if (style.overflow && style.overflow !== 'visible')\n                return;\n            if ($el.css('float') !== 'none')\n                return;\n            if ($parent && $parent.css('display') == 'flex' && $parent.css('flex-direction') !== 'column')\n                return;\n            switch (style.position) {\n            case 'static':\n            case 'relative':\n            case '':\n                break;\n            default:\n                return;\n            }\n            switch (el.tagName) {\n            case 'TR':\n            case 'TBODY':\n            case 'THEAD':\n            case 'TFOOT':\n                return true;\n            }\n            switch ($el.css('display')) {\n            case 'block':\n            case 'list-item':\n            case 'table':\n            case 'flex':\n                return true;\n            }\n            return;\n        },\n        validTarget(trg, src) {\n            const trgModel = this.getTargetModel(trg);\n            const srcModel = this.getSourceModel(src, { target: trgModel });\n            src = srcModel && srcModel.view && srcModel.view.el;\n            trg = trgModel && trgModel.view && trgModel.view.el;\n            let result = {\n                valid: true,\n                src,\n                srcModel,\n                trg,\n                trgModel\n            };\n            if (!src || !trg) {\n                result.valid = false;\n                return result;\n            }\n            let draggable = srcModel.get('draggable');\n            draggable = draggable instanceof Array ? draggable.join(', ') : draggable;\n            result.dragInfo = draggable;\n            draggable = _.isString(draggable) ? this.matches(trg, draggable) : draggable;\n            result.draggable = draggable;\n            let droppable = trgModel.get('droppable');\n            droppable = droppable instanceof Backbone.Collection ? 1 : droppable;\n            droppable = droppable instanceof Array ? droppable.join(', ') : droppable;\n            result.dropInfo = droppable;\n            droppable = _.isString(droppable) ? this.matches(src, droppable) : droppable;\n            droppable = draggable && this.isTextableActive(srcModel, trgModel) ? 1 : droppable;\n            result.droppable = droppable;\n            if (!droppable || !draggable) {\n                result.valid = false;\n            }\n            return result;\n        },\n        dimsFromTarget(target, rX, rY) {\n            const em = this.em;\n            var dims = [];\n            if (!target) {\n                return dims;\n            }\n            if (!this.matches(target, `${ this.itemSel }, ${ this.containerSel }`)) {\n                target = this.closest(target, this.itemSel);\n            }\n            if (this.draggable instanceof Array) {\n                target = this.closest(target, this.draggable.join(','));\n            }\n            if (!target) {\n                return dims;\n            }\n            if (this.prevTarget && this.prevTarget != target) {\n                this.prevTarget = null;\n            }\n            if (!this.prevTarget) {\n                this.targetP = this.closest(target, this.containerSel);\n                let validResult = this.validTarget(target);\n                em && em.trigger('sorter:drag:validation', validResult);\n                if (!validResult.valid && this.targetP) {\n                    return this.dimsFromTarget(this.targetP, rX, rY);\n                }\n                this.prevTarget = target;\n                this.prevTargetDim = this.getDim(target);\n                this.cacheDimsP = this.getChildrenDim(this.targetP);\n                this.cacheDims = this.getChildrenDim(target);\n            }\n            if (this.prevTarget == target)\n                dims = this.cacheDims;\n            this.target = this.prevTarget;\n            if (this.nearBorders(this.prevTargetDim, rX, rY) || !this.nested && !this.cacheDims.length) {\n                const targetParent = this.targetP;\n                if (targetParent && this.validTarget(targetParent).valid) {\n                    dims = this.cacheDimsP;\n                    this.target = targetParent;\n                }\n            }\n            this.lastPos = null;\n            return dims;\n        },\n        getTargetFromEl(el) {\n            let target = el;\n            let targetParent;\n            let targetPrev = this.targetPrev;\n            const em = this.em;\n            const containerSel = this.containerSel;\n            const itemSel = this.itemSel;\n            if (!this.matches(target, `${ itemSel }, ${ containerSel }`)) {\n                target = this.closest(target, itemSel);\n            }\n            if (this.draggable instanceof Array) {\n                target = this.closest(target, this.draggable.join(','));\n            }\n            if (targetPrev && targetPrev != target) {\n                this.targetPrev = '';\n            }\n            if (!this.targetPrev) {\n                targetParent = this.closest(target, containerSel);\n                const validResult = this.validTarget(target);\n                em && em.trigger('sorter:drag:validation', validResult);\n                if (!validResult.valid && targetParent) {\n                    return this.getTargetFromEl(targetParent);\n                }\n                this.targetPrev = target;\n            }\n            if (this.nearElBorders(target)) {\n                targetParent = this.closest(target, containerSel);\n                if (targetParent && this.validTarget(targetParent).valid) {\n                    target = targetParent;\n                }\n            }\n            return target;\n        },\n        nearElBorders(el) {\n            const off = 10;\n            const rect = el.getBoundingClientRect();\n            const body = el.ownerDocument.body;\n            const {x, y} = this.getCurrentPos();\n            const top = rect.top + body.scrollTop;\n            const left = rect.left + body.scrollLeft;\n            const width = rect.width;\n            const height = rect.height;\n            if (y < top + off || y > top + height - off || x < left + off || x > left + width - off) {\n                return 1;\n            }\n        },\n        getCurrentPos() {\n            const ev = this.eventMove;\n            const x = ev.pageX || 0;\n            const y = ev.pageY || 0;\n            return {\n                x,\n                y\n            };\n        },\n        getDim(el) {\n            const {em, canvasRelative} = this;\n            var top, left, height, width;\n            if (canvasRelative && em) {\n                const canvas = em.get('Canvas');\n                const pos = canvas.getElementPos(el, { noScroll: 1 });\n                const elOffsets = canvas.getElementOffsets(el);\n                top = pos.top - elOffsets.marginTop;\n                left = pos.left - elOffsets.marginLeft;\n                height = pos.height + elOffsets.marginTop + elOffsets.marginBottom;\n                width = pos.width + elOffsets.marginLeft + elOffsets.marginRight;\n            } else {\n                var o = this.offset(el);\n                top = this.relative ? el.offsetTop : o.top - (this.wmargin ? -1 : 1) * this.elT;\n                left = this.relative ? el.offsetLeft : o.left - (this.wmargin ? -1 : 1) * this.elL;\n                height = el.offsetHeight;\n                width = el.offsetWidth;\n            }\n            return [\n                top,\n                left,\n                height,\n                width\n            ];\n        },\n        getChildrenDim(trg) {\n            const dims = [];\n            if (!trg)\n                return dims;\n            const trgModel = this.getTargetModel(trg);\n            if (trgModel && trgModel.view && !this.ignoreViewChildren) {\n                const view = trgModel.getCurrentView ? trgModel.getCurrentView() : trgModel.view;\n                trg = view.getChildrenContainer();\n            }\n            _.each(trg.children, (el, i) => {\n                const model = mixins.getModel(el, $);\n                const elIndex = model && model.index ? model.index() : i;\n                if (!mixins.isTextNode(el) && !this.matches(el, this.itemSel)) {\n                    return;\n                }\n                const dim = this.getDim(el);\n                let dir = this.direction;\n                if (dir == 'v')\n                    dir = true;\n                else if (dir == 'h')\n                    dir = false;\n                else\n                    dir = this.isInFlow(el, trg);\n                dim.push(dir, el, elIndex);\n                dims.push(dim);\n            });\n            return dims;\n        },\n        nearBorders(dim, rX, rY) {\n            var result = 0;\n            var off = this.borderOffset;\n            var x = rX || 0;\n            var y = rY || 0;\n            var t = dim[0];\n            var l = dim[1];\n            var h = dim[2];\n            var w = dim[3];\n            if (t + off > y || y > t + h - off || l + off > x || x > l + w - off)\n                result = 1;\n            return !!result;\n        },\n        findPosition(dims, posX, posY) {\n            var result = {\n                index: 0,\n                indexEl: 0,\n                method: 'before'\n            };\n            var leftLimit = 0, xLimit = 0, dimRight = 0, yLimit = 0, xCenter = 0, yCenter = 0, dimDown = 0, dim = 0;\n            for (var i = 0, len = dims.length; i < len; i++) {\n                dim = dims[i];\n                dimRight = dim[1] + dim[3];\n                dimDown = dim[0] + dim[2];\n                xCenter = dim[1] + dim[3] / 2;\n                yCenter = dim[0] + dim[2] / 2;\n                if (xLimit && dim[1] > xLimit || yLimit && yCenter >= yLimit || leftLimit && dimRight < leftLimit)\n                    continue;\n                result.index = i;\n                result.indexEl = dim[6];\n                if (!dim[4]) {\n                    if (posY < dimDown)\n                        yLimit = dimDown;\n                    if (posX < xCenter) {\n                        xLimit = xCenter;\n                        result.method = 'before';\n                    } else {\n                        leftLimit = xCenter;\n                        result.method = 'after';\n                    }\n                } else {\n                    if (posY < yCenter) {\n                        result.method = 'before';\n                        break;\n                    } else\n                        result.method = 'after';\n                }\n            }\n            return result;\n        },\n        movePlaceholder(plh, dims, pos, trgDim) {\n            var marg = 0, t = 0, l = 0, w = 0, h = 0, un = 'px', margI = 5, brdCol = '#62c462', brd = 3, method = pos.method;\n            var elDim = dims[pos.index];\n            plh.style.borderColor = 'transparent ' + brdCol;\n            plh.style.borderWidth = brd + un + ' ' + (brd + 2) + un;\n            plh.style.margin = '-' + brd + 'px 0 0';\n            if (elDim) {\n                if (!elDim[4]) {\n                    w = 'auto';\n                    h = elDim[2] - marg * 2 + un;\n                    t = elDim[0] + marg;\n                    l = method == 'before' ? elDim[1] - marg : elDim[1] + elDim[3] - marg;\n                    plh.style.borderColor = brdCol + ' transparent';\n                    plh.style.borderWidth = brd + 2 + un + ' ' + brd + un;\n                    plh.style.margin = '0 0 0 -' + brd + 'px';\n                } else {\n                    w = elDim[3] + un;\n                    h = 'auto';\n                    t = method == 'before' ? elDim[0] - marg : elDim[0] + elDim[2] - marg;\n                    l = elDim[1];\n                }\n            } else {\n                if (!this.nested) {\n                    plh.style.display = 'none';\n                    return;\n                }\n                if (trgDim) {\n                    t = trgDim[0] + margI;\n                    l = trgDim[1] + margI;\n                    w = parseInt(trgDim[3]) - margI * 2 + un;\n                    h = 'auto';\n                }\n            }\n            plh.style.top = t + un;\n            plh.style.left = l + un;\n            if (w)\n                plh.style.width = w;\n            if (h)\n                plh.style.height = h;\n        },\n        endMove(e) {\n            const src = this.eV;\n            const moved = [];\n            const docs = this.getDocuments();\n            const container = this.getContainerEl();\n            const onEndMove = this.onEndMove;\n            const {target, lastPos} = this;\n            let srcModel;\n            mixins.off(container, 'mousemove dragover', this.onMove);\n            mixins.off(docs, 'mouseup dragend touchend', this.endMove);\n            mixins.off(docs, 'keydown', this.rollback);\n            this.plh.style.display = 'none';\n            if (src) {\n                srcModel = this.getSourceModel();\n                if (this.selectOnEnd && srcModel && srcModel.set) {\n                    srcModel.set('status', '');\n                    srcModel.set('status', 'selected');\n                }\n            }\n            if (this.moved) {\n                const toMove = this.toMove;\n                const toMoveArr = _.isArray(toMove) ? toMove : toMove ? [toMove] : [src];\n                toMoveArr.forEach(model => {\n                    moved.push(this.move(target, model, lastPos));\n                });\n            }\n            if (this.plh)\n                this.plh.style.display = 'none';\n            var dragHelper = this.dragHelper;\n            if (dragHelper) {\n                dragHelper.parentNode.removeChild(dragHelper);\n                this.dragHelper = null;\n            }\n            this.disableTextable();\n            this.selectTargetModel();\n            this.toggleSortCursor();\n            this.toMove = null;\n            if (_.isFunction(onEndMove)) {\n                const data = {\n                    target: srcModel,\n                    parent: srcModel && srcModel.parent(),\n                    index: srcModel && srcModel.index()\n                };\n                moved.length ? moved.forEach(m => onEndMove(m, this, data)) : onEndMove(null, this, {\n                    ...data, \n                    cancelled: 1\n                });\n            }\n        },\n        move(dst, src, pos) {\n            const {em, activeTextModel, dropContent} = this;\n            const srcEl = mixins.getElement(src);\n            em && em.trigger('component:dragEnd:before', dst, srcEl, pos);\n            var warns = [];\n            var index = pos.indexEl;\n            var modelToDrop, modelTemp, created;\n            var validResult = this.validTarget(dst, srcEl);\n            var targetCollection = $(dst).data('collection');\n            var model = validResult.srcModel;\n            var droppable = validResult.droppable;\n            var draggable = validResult.draggable;\n            var dropInfo = validResult.dropInfo;\n            var dragInfo = validResult.dragInfo;\n            const {trgModel} = validResult;\n            droppable = trgModel instanceof Backbone.Collection ? 1 : droppable;\n            const isTextableActive = this.isTextableActive(model, trgModel);\n            if (targetCollection && droppable && draggable) {\n                index = pos.method === 'after' ? index + 1 : index;\n                var opts = {\n                    at: index,\n                    noIncrement: 1\n                };\n                if (!dropContent) {\n                    opts.temporary = 1;\n                    modelTemp = targetCollection.add({}, {...opts });\n                    if (model.collection) {\n                        modelToDrop = model.collection.remove(model, { temporary: 1 });\n                    }\n                } else {\n                    modelToDrop = dropContent;\n                    opts.silent = false;\n                    opts.avoidUpdateStyle = 1;\n                }\n                if (isTextableActive) {\n                    const viewActive = activeTextModel.getView();\n                    activeTextModel.trigger('active');\n                    const {activeRte} = viewActive;\n                    const modelEl = model.getEl();\n                    delete model.opt.temporary;\n                    model.getView().render();\n                    modelEl.setAttribute('data-gjs-textable', 'true');\n                    const {outerHTML} = modelEl;\n                    activeRte.insertHTML && activeRte.insertHTML(outerHTML);\n                } else {\n                    created = targetCollection.add(modelToDrop, opts);\n                }\n                if (!dropContent) {\n                    targetCollection.remove(modelTemp);\n                } else {\n                    this.dropContent = null;\n                }\n                this.prevTarget = null;\n            } else {\n                if (!targetCollection) {\n                    warns.push('Target collection not found');\n                }\n                if (!droppable) {\n                    warns.push(`Target is not droppable, accepts [${ dropInfo }]`);\n                }\n                if (!draggable) {\n                    warns.push(`Component not draggable, acceptable by [${ dragInfo }]`);\n                }\n                console.warn('Invalid target position: ' + warns.join(', '));\n            }\n            em && em.trigger('component:dragEnd', targetCollection, modelToDrop, warns);\n            em && em.trigger('sorter:drag:end', {\n                targetCollection,\n                modelToDrop,\n                warns,\n                validResult,\n                dst,\n                srcEl\n            });\n            return created;\n        },\n        rollback(e) {\n            mixins.off(this.getDocuments(), 'keydown', this.rollback);\n            const key = e.which || e.keyCode;\n            if (key == 27) {\n                this.moved = 0;\n                this.endMove();\n            }\n        }\n    });\n});"]}
{"version":3,"sources":["utils/fetch.js"],"names":["define","fetch","bind","url","options","Promise","res","rej","req","XMLHttpRequest","open","method","withCredentials","credentials","k","headers","setRequestHeader","onload","e","status","statusText","text","resolve","responseText","onerror","upload","onProgress","onprogress","body","send"],"mappings":";;;;;;;AAAAA,UACG,WACC,aACA,MAAuB,mBAATC,MAAsBA,MAAMC,OAAS,CAACC,EAAKC,IAC9C,IAAIC,QAAQ,CAACC,EAAKC,KACrB,MAAMC,EAAM,IAAIC,eAChBD,EAAIE,KAAKN,EAAQO,QAAU,MAAOR,GAClCK,EAAII,gBAAyC,WAAvBR,EAAQS,YAC9B,IAAK,IAAIC,KAAKV,EAAQW,YAClBP,EAAIQ,iBAAiBF,EAAGV,EAAQW,QAAQD,IAE5CN,EAAIS,OAASC,CAAAA,GAAKZ,GACda,OAAQX,EAAIW,OACZC,WAAYZ,EAAIY,WAChBC,KAAM,IAAMhB,QAAQiB,QAAQd,EAAIe,iBAEpCf,EAAIgB,QAAUjB,EACVC,EAAIiB,QAAUrB,EAAQsB,aACtBlB,EAAIiB,OAAOE,WAAavB,EAAQsB,YAEpCtB,EAAQwB,KAAOpB,EAAIqB,KAAKzB,EAAQwB,MAAQpB,EAAIqB","file":"../../utils/fetch.js","sourcesContent":["define([\n], function () {\n    'use strict';\n    return typeof fetch == 'function' ? fetch.bind() : (url, options) => {\n        return new Promise((res, rej) => {\n            const req = new XMLHttpRequest();\n            req.open(options.method || 'get', url);\n            req.withCredentials = options.credentials == 'include';\n            for (let k in options.headers || {}) {\n                req.setRequestHeader(k, options.headers[k]);\n            }\n            req.onload = e => res({\n                status: req.status,\n                statusText: req.statusText,\n                text: () => Promise.resolve(req.responseText)\n            });\n            req.onerror = rej;\n            if (req.upload && options.onProgress) {\n                req.upload.onprogress = options.onProgress;\n            }\n            options.body ? req.send(options.body) : req.send();\n        });\n    };\n});"]}
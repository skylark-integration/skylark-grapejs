{"version":3,"sources":["utils/Resizer.js"],"names":["define","langx","_","mixins","defaultOpts","mousePosFetcher","updateTarget","ratioDefault","posFetcher","onStart","onMove","onEnd","onUpdateContainer","step","minDim","maxDim","unitHeight","unitWidth","keyHeight","keyWidth","currentUnit","silentFrames","avoidContainerUpdate","keepAutoHeight","keepAutoWidth","autoHeight","autoWidth","tl","tc","tr","cl","cr","bl","bc","br","createHandler","name","opts","pfx","prefix","el","document","createElement","className","setAttribute","getBoundingRect","win","w","window","rect","getBoundingClientRect","left","pageXOffset","top","pageYOffset","width","height","init","[object Object]","this","setOptions","bindAll","options","defaults","setup","appendTo","body","container","appendChild","firstChild","removeChild","handlers","forEach","hdl","n","handler","silent","frames","querySelectorAll","each","frame","style","pointerEvents","ownerDocument","updateContainer","forceShow","on","getDocumentEl","handleMouseDown","display","off","e","button","preventDefault","stopPropagation","config","attrName","getElementPos","target","handlerAttr","getAttribute","clickedHandler","startDim","t","l","h","rectDim","startPos","x","clientX","y","clientY","doc","move","handleKeyDown","stop","isFunction","docs","resizer","toggleFrames","mouseFetch","currentPos","delta","keys","shift","shiftKey","ctrl","ctrlKey","alt","altKey","calc","updateRect","which","store","selectedHandler","getSelectedHandler","elStyle","opt","mixin","keyCode","isHandler","start","blur","data","value","deltaX","deltaY","startW","startH","box","attr","indexOf","normalizeFloat","Math","max","min","ratioActive","ratio","round"],"mappings":"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","file":"../../utils/Resizer.js","sourcesContent":["define([\n    \"skylark-langx/langx\",\n    'skylark-underscore',\n    './mixins'\n], function (langx,_, mixins) {\n    'use strict';\n    var defaultOpts = {\n        mousePosFetcher: null,\n        updateTarget: null,\n        ratioDefault: 0,\n        posFetcher: null,\n        onStart: null,\n        onMove: null,\n        onEnd: null,\n        onUpdateContainer: () => {\n        },\n        step: 1,\n        minDim: 32,\n        maxDim: '',\n        unitHeight: 'px',\n        unitWidth: 'px',\n        keyHeight: 'height',\n        keyWidth: 'width',\n        currentUnit: 1,\n        silentFrames: 0,\n        avoidContainerUpdate: 0,\n        keepAutoHeight: false,\n        keepAutoWidth: false,\n        autoHeight: false,\n        autoWidth: false,\n        tl: 1,\n        tc: 1,\n        tr: 1,\n        cl: 1,\n        cr: 1,\n        bl: 1,\n        bc: 1,\n        br: 1\n    };\n    var createHandler = (name, opts) => {\n        var pfx = opts.prefix || '';\n        var el = document.createElement('i');\n        el.className = pfx + 'resizer-h ' + pfx + 'resizer-h-' + name;\n        el.setAttribute('data-' + pfx + 'handler', name);\n        return el;\n    };\n    var getBoundingRect = (el, win) => {\n        var w = win || window;\n        var rect = el.getBoundingClientRect();\n        return {\n            left: rect.left + w.pageXOffset,\n            top: rect.top + w.pageYOffset,\n            width: rect.width,\n            height: rect.height\n        };\n    };\n    class Resizer {\n        constructor(opts = {}) {\n            this.setOptions(opts);\n            _.bindAll(this, 'handleKeyDown', 'handleMouseDown', 'move', 'stop');\n            return this;\n        }\n        getConfig() {\n            return this.opts;\n        }\n        setOptions(options = {}) {\n            this.opts = _.defaults(options, defaultOpts);\n            this.setup();\n        }\n        setup() {\n            const opts = this.opts;\n            const pfx = opts.prefix || '';\n            const appendTo = opts.appendTo || document.body;\n            let container = this.container;\n            if (!container) {\n                container = document.createElement('div');\n                container.className = `${ pfx }resizer-c`;\n                appendTo.appendChild(container);\n                this.container = container;\n            }\n            while (container.firstChild) {\n                container.removeChild(container.firstChild);\n            }\n            const handlers = {};\n            [\n                'tl',\n                'tc',\n                'tr',\n                'cl',\n                'cr',\n                'bl',\n                'bc',\n                'br'\n            ].forEach(hdl => handlers[hdl] = opts[hdl] ? createHandler(hdl, opts) : '');\n            for (let n in handlers) {\n                const handler = handlers[n];\n                handler && container.appendChild(handler);\n            }\n            this.handlers = handlers;\n            this.mousePosFetcher = opts.mousePosFetcher;\n            this.updateTarget = opts.updateTarget;\n            this.posFetcher = opts.posFetcher;\n            this.onStart = opts.onStart;\n            this.onMove = opts.onMove;\n            this.onEnd = opts.onEnd;\n            this.onUpdateContainer = opts.onUpdateContainer;\n        }\n        toggleFrames(silent) {\n            if (this.opts.silentFrames) {\n                const frames = document.querySelectorAll('iframe');\n                _.each(frames, frame => frame.style.pointerEvents = silent ? 'none' : '');\n            }\n        }\n        isHandler(el) {\n            var handlers = this.handlers;\n            for (var n in handlers) {\n                if (handlers[n] === el)\n                    return true;\n            }\n            return false;\n        }\n        getFocusedEl() {\n            return this.el;\n        }\n        getDocumentEl() {\n            return [\n                this.el.ownerDocument,\n                document\n            ];\n        }\n        getElementPos(el, opts = {}) {\n            var posFetcher = this.posFetcher || '';\n            return posFetcher ? posFetcher(el, opts) : getBoundingRect(el);\n        }\n        focus(el) {\n            if (el && el === this.el) {\n                return;\n            }\n            this.el = el;\n            this.updateContainer({ forceShow: 1 });\n            mixins.on(this.getDocumentEl(), 'mousedown', this.handleMouseDown);\n        }\n        blur() {\n            this.container.style.display = 'none';\n            if (this.el) {\n                mixins.off(this.getDocumentEl(), 'mousedown', this.handleMouseDown);\n                this.el = null;\n            }\n        }\n        start(e) {\n            if (e.button !== 0)\n                return;\n            e.preventDefault();\n            e.stopPropagation();\n            const el = this.el;\n            const resizer = this;\n            const config = this.opts || {};\n            var attrName = 'data-' + config.prefix + 'handler';\n            var rect = this.getElementPos(el, { target: 'el' });\n            this.handlerAttr = e.target.getAttribute(attrName);\n            this.clickedHandler = e.target;\n            this.startDim = {\n                t: rect.top,\n                l: rect.left,\n                w: rect.width,\n                h: rect.height\n            };\n            this.rectDim = {\n                t: rect.top,\n                l: rect.left,\n                w: rect.width,\n                h: rect.height\n            };\n            this.startPos = {\n                x: e.clientX,\n                y: e.clientY\n            };\n            var doc = this.getDocumentEl();\n            mixins.on(doc, 'mousemove', this.move);\n            mixins.on(doc, 'keydown', this.handleKeyDown);\n            mixins.on(doc, 'mouseup', this.stop);\n            _.isFunction(this.onStart) && this.onStart(e, {\n                docs: doc,\n                config,\n                el,\n                resizer\n            });\n            this.toggleFrames(1);\n            this.move(e);\n        }\n        move(e) {\n            const onMove = this.onMove;\n            var mouseFetch = this.mousePosFetcher;\n            var currentPos = mouseFetch ? mouseFetch(e) : {\n                x: e.clientX,\n                y: e.clientY\n            };\n            this.currentPos = currentPos;\n            this.delta = {\n                x: currentPos.x - this.startPos.x,\n                y: currentPos.y - this.startPos.y\n            };\n            this.keys = {\n                shift: e.shiftKey,\n                ctrl: e.ctrlKey,\n                alt: e.altKey\n            };\n            this.rectDim = this.calc(this);\n            this.updateRect(0);\n            onMove && onMove(e);\n            if (e.which === 0) {\n                this.stop(e);\n            }\n        }\n        stop(e) {\n            const config = this.opts;\n            var doc = this.getDocumentEl();\n            mixins.off(doc, 'mousemove', this.move);\n            mixins.off(doc, 'keydown', this.handleKeyDown);\n            mixins.off(doc, 'mouseup', this.stop);\n            this.updateRect(1);\n            this.toggleFrames();\n            _.isFunction(this.onEnd) && this.onEnd(e, {\n                docs: doc,\n                config\n            });\n        }\n        updateRect(store) {\n            const el = this.el;\n            const resizer = this;\n            const config = this.opts;\n            const rect = this.rectDim;\n            const updateTarget = this.updateTarget;\n            const selectedHandler = this.getSelectedHandler();\n            const {unitHeight, unitWidth, keyWidth, keyHeight} = config;\n            if (_.isFunction(updateTarget)) {\n                updateTarget(el, rect, {\n                    store,\n                    selectedHandler,\n                    resizer,\n                    config\n                });\n            } else {\n                const elStyle = el.style;\n                elStyle[keyWidth] = rect.w + unitWidth;\n                elStyle[keyHeight] = rect.h + unitHeight;\n            }\n            this.updateContainer();\n        }\n        updateContainer(opt = {}) {\n            const {opts, container, el} = this;\n            const {style} = container;\n            if (!opts.avoidContainerUpdate && el) {\n                if (opt.forceShow)\n                    style.display = 'block';\n            }\n            this.onUpdateContainer({\n                el: container,\n                resizer: this,\n                opts: langx.mixin({},opts,opt)\n            });\n        }\n        getSelectedHandler() {\n            var handlers = this.handlers;\n            if (!this.selectedHandler) {\n                return;\n            }\n            for (let n in handlers) {\n                if (handlers[n] === this.selectedHandler)\n                    return n;\n            }\n        }\n        handleKeyDown(e) {\n            if (e.keyCode === 27) {\n                this.rectDim = this.startDim;\n                this.stop(e);\n            }\n        }\n        handleMouseDown(e) {\n            var el = e.target;\n            if (this.isHandler(el)) {\n                this.selectedHandler = el;\n                this.start(e);\n            } else if (el !== this.el) {\n                this.selectedHandler = '';\n                this.blur();\n            }\n        }\n        calc(data) {\n            let value;\n            const opts = this.opts || {};\n            const step = opts.step;\n            const startDim = this.startDim;\n            const minDim = opts.minDim;\n            const maxDim = opts.maxDim;\n            const deltaX = data.delta.x;\n            const deltaY = data.delta.y;\n            const startW = startDim.w;\n            const startH = startDim.h;\n            var box = {\n                t: 0,\n                l: 0,\n                w: startW,\n                h: startH\n            };\n            if (!data)\n                return;\n            var attr = data.handlerAttr;\n            if (~attr.indexOf('r')) {\n                value = mixins.normalizeFloat(startW + deltaX * step, step);\n                value = Math.max(minDim, value);\n                maxDim && (value = Math.min(maxDim, value));\n                box.w = value;\n            }\n            if (~attr.indexOf('b')) {\n                value = mixins.normalizeFloat(startH + deltaY * step, step);\n                value = Math.max(minDim, value);\n                maxDim && (value = Math.min(maxDim, value));\n                box.h = value;\n            }\n            if (~attr.indexOf('l')) {\n                value = mixins.normalizeFloat(startW - deltaX * step, step);\n                value = Math.max(minDim, value);\n                maxDim && (value = Math.min(maxDim, value));\n                box.w = value;\n            }\n            if (~attr.indexOf('t')) {\n                value = mixins.normalizeFloat(startH - deltaY * step, step);\n                value = Math.max(minDim, value);\n                maxDim && (value = Math.min(maxDim, value));\n                box.h = value;\n            }\n            var ratioActive = opts.ratioDefault ? !data.keys.shift : data.keys.shift;\n            if (attr.indexOf('c') < 0 && ratioActive) {\n                var ratio = startDim.w / startDim.h;\n                if (box.w / box.h > ratio) {\n                    box.h = Math.round(box.w / ratio);\n                } else {\n                    box.w = Math.round(box.h * ratio);\n                }\n            }\n            if (~attr.indexOf('l')) {\n                box.l = startDim.w - box.w;\n            }\n            if (~attr.indexOf('t')) {\n                box.t = startDim.h - box.h;\n            }\n            return box;\n        }\n    }\n    return {\n        init(opts) {\n            return new Resizer(opts);\n        }\n    };\n});"]}
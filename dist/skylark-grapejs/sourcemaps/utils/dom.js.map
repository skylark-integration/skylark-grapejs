{"version":3,"sources":["utils/dom.js"],"names":["define","_","appendAtIndex","parent","child","index","childNodes","total","length","at","isUndefined","isString","insertAdjacentHTML","lastChild","removeChild","appendChild","insertBefore","motionsEv","empty","node","firstChild","replaceWith","oldEl","newEl","parentNode","replaceChild","append","createEl","tag","attrs","el","document","createElement","each","value","key","setAttribute","innerHTML","createCustomEvent","e","cls","oEvent","window","type","createEvent","initEvent","keyCodeVal","keyCode","_parentEvent","forEach","prop","Object","defineProperty","[object Object]","this","appendVNodes","vNodes","Array","isArray","vnode","attr"],"mappings":";;;;;;;AAAAA,QAAQ,sBAAuB,SAAUC,GACrC,aACA,MAWMC,EAAgB,CAACC,EAAQC,EAAOC,KAClC,MAAMC,WAACA,GAAcH,EACfI,EAAQD,EAAWE,OACnBC,EAAKR,EAAES,YAAYL,GAASE,EAAQF,EACtCJ,EAAEU,SAASP,KACXD,EAAOS,mBAAmB,YAAaR,GACvCA,EAAQD,EAAOU,UACfV,EAAOW,YAAYV,IAEnBK,GAAMF,EACNJ,EAAOY,YAAYX,GAEnBD,EAAOa,aAAaZ,EAAOE,EAAWG,KAiD9C,OACIQ,UAtEc,iEAuEdC,MAtEUC,IACV,KAAOA,EAAKC,YACRD,EAAKL,YAAYK,EAAKC,aAqE1BC,YAnEgB,CAACC,EAAOC,KACxBD,EAAME,WAAWC,aAAaF,EAAOD,IAmErCpB,cAAeA,EACfwB,OAnDW,CAACvB,EAAQC,IAAUF,EAAcC,EAAQC,GAoDpDuB,SAnDa,CAACC,EAAKC,EAAQ,GAAIzB,KAC/B,MAAM0B,EAAKC,SAASC,cAAcJ,GAQlC,OAPAC,GAAS5B,EAAEgC,KAAKJ,EAAO,CAACK,EAAOC,IAAQL,EAAGM,aAAaD,EAAKD,IACxD9B,IACIH,EAAEU,SAASP,GACX0B,EAAGO,UAAYjC,EAEf0B,EAAGf,YAAYX,IAEhB0B,GA2CPQ,kBAzCsB,CAACC,EAAGC,KAC1B,IAAIC,EACJ,IACIA,EAAS,IAAIC,OAAOF,GAAKD,EAAEI,KAAMJ,GACnC,MAAOA,IACLE,EAASV,SAASa,YAAYJ,IACvBK,UAAUN,EAAEI,MAAM,GAAM,GAcnC,OAZAF,EAAOK,WAAaP,EAAEQ,QACtBN,EAAOO,aAAeT,GAElB,UACA,SACFU,QAAQC,IACNC,OAAOC,eAAeX,EAAQS,GAC1BG,MACI,OAAOC,KAAKR,gBAIjBL,GAsBPc,aApBiB,CAACpC,EAAMqC,SACNC,MAAMC,QAAQF,GAAUA,GAAUA,IAC1CP,QAAQU,IACd,MAAM/B,EAAM+B,EAAa,KAAK,MACxBC,EAAOD,EAAc,eACrB7B,EAAKC,SAASC,cAAcJ,GAClC3B,EAAEgC,KAAK2B,EAAM,CAAC1B,EAAOC,KACjBL,EAAGM,aAAaD,EAAKD,KAEzBf,EAAKJ,YAAYe","file":"../../utils/dom.js","sourcesContent":["define(['skylark-underscore'], function (_) {\n    'use strict';\n    const KEY_TAG = 'tag';\n    const KEY_ATTR = 'attributes';\n    const KEY_CHILD = 'children';\n    const motionsEv = 'transitionend oTransitionEnd transitionend webkitTransitionEnd';\n    const empty = node => {\n        while (node.firstChild)\n            node.removeChild(node.firstChild);\n    };\n    const replaceWith = (oldEl, newEl) => {\n        oldEl.parentNode.replaceChild(newEl, oldEl);\n    };\n    const appendAtIndex = (parent, child, index) => {\n        const {childNodes} = parent;\n        const total = childNodes.length;\n        const at = _.isUndefined(index) ? total : index;\n        if (_.isString(child)) {\n            parent.insertAdjacentHTML('beforeEnd', child);\n            child = parent.lastChild;\n            parent.removeChild(child);\n        }\n        if (at >= total) {\n            parent.appendChild(child);\n        } else {\n            parent.insertBefore(child, childNodes[at]);\n        }\n    };\n    const append = (parent, child) => appendAtIndex(parent, child);\n    const createEl = (tag, attrs = '', child) => {\n        const el = document.createElement(tag);\n        attrs && _.each(attrs, (value, key) => el.setAttribute(key, value));\n        if (child) {\n            if (_.isString(child))\n                el.innerHTML = child;\n            else\n                el.appendChild(child);\n        }\n        return el;\n    };\n    const createCustomEvent = (e, cls) => {\n        let oEvent;\n        try {\n            oEvent = new window[cls](e.type, e);\n        } catch (e) {\n            oEvent = document.createEvent(cls);\n            oEvent.initEvent(e.type, true, true);\n        }\n        oEvent.keyCodeVal = e.keyCode;\n        oEvent._parentEvent = e;\n        [\n            'keyCode',\n            'which'\n        ].forEach(prop => {\n            Object.defineProperty(oEvent, prop, {\n                get() {\n                    return this.keyCodeVal;\n                }\n            });\n        });\n        return oEvent;\n    };\n    const appendVNodes = (node, vNodes = []) => {\n        const vNodesArr = Array.isArray(vNodes) ? vNodes : [vNodes];\n        vNodesArr.forEach(vnode => {\n            const tag = vnode[KEY_TAG] || 'div';\n            const attr = vnode[KEY_ATTR] || {};\n            const el = document.createElement(tag);\n            _.each(attr, (value, key) => {\n                el.setAttribute(key, value);\n            });\n            node.appendChild(el);\n        });\n    };\n    return {\n        motionsEv: motionsEv,\n        empty: empty,\n        replaceWith: replaceWith,\n        appendAtIndex: appendAtIndex,\n        append: append,\n        createEl: createEl,\n        createCustomEvent: createCustomEvent,\n        appendVNodes: appendVNodes\n    };\n});"]}
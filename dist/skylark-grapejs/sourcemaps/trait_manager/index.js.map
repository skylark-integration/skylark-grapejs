{"version":3,"sources":["trait_manager/index.js"],"names":["define","a","defaultOpts","TraitsView","TraitsViewer","c","name","getConfig","[object Object]","config","defaults","ppfx","pStylePrefix","stylePrefix","collection","editor","em","this","elTo","appendTo","isElement","document","querySelector","appendChild","render","getTraitsViewer","trait","itemView","itemsView","extend","getType","el"],"mappings":";;;;;;;AAAAA,QACI,qBACA,kBACA,qBACD,SAAUC,EAAGC,EAAaC,GACzB,aACA,MAAO,KACH,IACIC,EADAC,KAEJ,OACIF,WAAAA,EACAG,KAAM,eACNC,UAAS,IACEF,EAEXG,KAAKC,MACDJ,EAAII,EACJR,EAAES,SAASL,EAAGH,GACd,MAAMS,EAAON,EAAEO,aAOf,OANAD,IAASN,EAAEQ,eAAkBF,IAASN,EAAEQ,eACxCT,EAAe,IAAID,GACfW,cACAC,OAAQV,EAAEW,GACVP,OAAQJ,IAELY,MAEXT,aACI,MAAMU,EAAOD,KAAKV,YAAYY,SAC9B,GAAID,EAAM,EACKjB,EAAEmB,UAAUF,GAAQA,EAAOG,SAASC,cAAcJ,IAC1DK,YAAYN,KAAKO,YAG5BC,gBAAe,IACJrB,EAEXI,QAAQF,EAAMoB,GACV,IAAIC,EAAWvB,EAAauB,SAC5BvB,EAAawB,UAAUtB,GAAQqB,EAASE,OAAOH,IAEnDI,QAAQxB,GACGF,EAAawB,UAAUtB,GAElCkB,OAAM,IACKpB,EAAaoB,SAASO","file":"../../trait_manager/index.js","sourcesContent":["define([\n    'skylark-underscore',\n    './config/config',\n    './view/TraitsView'\n], function (a, defaultOpts, TraitsView) {\n    'use strict';\n    return () => {\n        let c = {};\n        let TraitsViewer;\n        return {\n            TraitsView,\n            name: 'TraitManager',\n            getConfig() {\n                return c;\n            },\n            init(config = {}) {\n                c = config;\n                a.defaults(c, defaultOpts);\n                const ppfx = c.pStylePrefix;\n                ppfx && (c.stylePrefix = `${ ppfx }${ c.stylePrefix }`);\n                TraitsViewer = new TraitsView({\n                    collection: [],\n                    editor: c.em,\n                    config: c\n                });\n                return this;\n            },\n            postRender() {\n                const elTo = this.getConfig().appendTo;\n                if (elTo) {\n                    const el = a.isElement(elTo) ? elTo : document.querySelector(elTo);\n                    el.appendChild(this.render());\n                }\n            },\n            getTraitsViewer() {\n                return TraitsViewer;\n            },\n            addType(name, trait) {\n                var itemView = TraitsViewer.itemView;\n                TraitsViewer.itemsView[name] = itemView.extend(trait);\n            },\n            getType(name) {\n                return TraitsViewer.itemsView[name];\n            },\n            render() {\n                return TraitsViewer.render().el;\n            }\n        };\n    };\n});"]}
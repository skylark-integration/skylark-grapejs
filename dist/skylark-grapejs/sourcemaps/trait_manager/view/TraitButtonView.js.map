{"version":3,"sources":["trait_manager/view/TraitButtonView.js"],"names":["define","a","TraitView","extend","events","click button","templateInput","[object Object]","model","em","this","command","get","isString","run","prototype","renderLabel","apply","arguments","ppfx","labelButton","text","full","props","className"],"mappings":";;;;;;;AAAAA,QACI,qBACA,eACD,SAAUC,EAAGC,GACZ,aACA,OAAOA,EAAUC,QACbC,QAAUC,eAAgB,eAC1BC,cAAe,GACfC,cACI,MAAMC,MAACA,EAAKC,GAAEA,GAAMC,KACdC,EAAUH,EAAMI,IAAI,WACtBD,IACIV,EAAEY,SAASF,GACXF,EAAGG,IAAI,YAAYE,IAAIH,GAEvBA,EAAQF,EAAGG,IAAI,UAAWJ,KAItCD,cACQG,KAAKF,MAAMI,IAAI,UACfV,EAAUa,UAAUC,YAAYC,MAAMP,KAAMQ,YAGpDX,aACI,MAAMC,MAACA,EAAKW,KAAEA,GAAQT,MAChBU,YAACA,EAAWC,KAAEA,EAAIC,KAAEA,GAAQd,EAAMe,QAElCC,KAAgBL,OAEtB,sCAD+CK,SAAmBF,MAAYE,UAAqB,OAFrFJ,GAAeC","file":"../../../trait_manager/view/TraitButtonView.js","sourcesContent":["define([\n    'skylark-underscore',\n    './TraitView'\n], function (a, TraitView) {\n    'use strict';\n    return TraitView.extend({\n        events: { 'click button': 'handleClick' },\n        templateInput: '',\n        handleClick() {\n            const {model, em} = this;\n            const command = model.get('command');\n            if (command) {\n                if (a.isString(command)) {\n                    em.get('Commands').run(command);\n                } else {\n                    command(em.get('Editor'), model);\n                }\n            }\n        },\n        renderLabel() {\n            if (this.model.get('label')) {\n                TraitView.prototype.renderLabel.apply(this, arguments);\n            }\n        },\n        getInputEl() {\n            const {model, ppfx} = this;\n            const {labelButton, text, full} = model.props();\n            const label = labelButton || text;\n            const className = `${ ppfx }btn`;\n            const input = `<button type=\"button\" class=\"${ className }-prim${ full ? ` ${ className }--full` : '' }\">${ label }</button>`;\n            return input;\n        }\n    });\n});"]}
{"version":3,"sources":["commands/view/ExportTemplate.js"],"names":["define","Backbone","$","[object Object]","editor","sender","opts","set","config","getConfig","modal","Modal","pfx","stylePrefix","this","cm","CodeManager","$editors","oHtmlEd","buildEditor","oCsslEd","htmlEditor","el","cssEditor","append","$el","open","title","textViewCode","content","getModel","once","stopCommand","id","setContent","getHtml","getCss","close","codeName","theme","label","input","document","createElement","codeMirror","getViewer","clone","EditorView","model","render","init"],"mappings":";;;;;;;AAAAA,QAAQ,oBAAqB,SAAUC,GACnC,aACA,MAAMC,EAAID,EAASC,EACnB,OACIC,IAAIC,EAAQC,EAAQC,MAChBD,GAAUA,EAAOE,KAAOF,EAAOE,IAAI,SAAU,GAC7C,MAAMC,EAASJ,EAAOK,YAChBC,EAAQN,EAAOO,MACfC,EAAMJ,EAAOK,YAEnB,GADAC,KAAKC,GAAKX,EAAOY,aAAe,MAC3BF,KAAKG,SAAU,CAChB,MAAMC,EAAUJ,KAAKK,YAAY,YAAa,YAAa,QACrDC,EAAUN,KAAKK,YAAY,MAAO,YAAa,OACrDL,KAAKO,WAAaH,EAAQI,GAC1BR,KAAKS,UAAYH,EAAQE,GACzB,MAAML,EAAWf,iBAAkBU,sBACnCK,EAASO,OAAON,EAAQO,KAAKD,OAAOJ,EAAQK,KAC5CX,KAAKG,SAAWA,EAEpBP,EAAMgB,MACFC,MAAOnB,EAAOoB,aACdC,QAASf,KAAKG,WACfa,WAAWC,KAAK,cAAe,IAAM3B,EAAO4B,YAAYlB,KAAKmB,KAChEnB,KAAKO,WAAWa,WAAW9B,EAAO+B,WAClCrB,KAAKS,UAAUW,WAAW9B,EAAOgC,WAErCjC,KAAKC,GACD,MAAMM,EAAQN,EAAOO,MACrBD,GAASA,EAAM2B,SAEnBlC,YAAYmC,EAAUC,EAAOC,GACzB,MAAMC,EAAQC,SAASC,cAAc,aACpC7B,KAAK8B,aAAe9B,KAAK8B,WAAa9B,KAAKC,GAAG8B,UAAU,eACzD,MAAMvB,EAAKR,KAAK8B,WAAWE,QAAQvC,KAC/BiC,MAAAA,EACAF,SAAAA,EACAC,MAAAA,EACAE,MAAAA,IAEEhB,EAAM,IAAIX,KAAKC,GAAGgC,YACpBC,MAAO1B,EACPd,OAAQM,KAAKC,GAAGN,cACjBwC,SAASxB,IAEZ,OADAH,EAAG4B,KAAKT,IAEJnB,GAAAA,EACAG,IAAAA","file":"../../../commands/view/ExportTemplate.js","sourcesContent":["define(['skylark-backbone'], function (Backbone) {\n    'use strict';\n    const $ = Backbone.$;\n    return {\n        run(editor, sender, opts = {}) {\n            sender && sender.set && sender.set('active', 0);\n            const config = editor.getConfig();\n            const modal = editor.Modal;\n            const pfx = config.stylePrefix;\n            this.cm = editor.CodeManager || null;\n            if (!this.$editors) {\n                const oHtmlEd = this.buildEditor('htmlmixed', 'hopscotch', 'HTML');\n                const oCsslEd = this.buildEditor('css', 'hopscotch', 'CSS');\n                this.htmlEditor = oHtmlEd.el;\n                this.cssEditor = oCsslEd.el;\n                const $editors = $(`<div class=\"${ pfx }export-dl\"></div>`);\n                $editors.append(oHtmlEd.$el).append(oCsslEd.$el);\n                this.$editors = $editors;\n            }\n            modal.open({\n                title: config.textViewCode,\n                content: this.$editors\n            }).getModel().once('change:open', () => editor.stopCommand(this.id));\n            this.htmlEditor.setContent(editor.getHtml());\n            this.cssEditor.setContent(editor.getCss());\n        },\n        stop(editor) {\n            const modal = editor.Modal;\n            modal && modal.close();\n        },\n        buildEditor(codeName, theme, label) {\n            const input = document.createElement('textarea');\n            !this.codeMirror && (this.codeMirror = this.cm.getViewer('CodeMirror'));\n            const el = this.codeMirror.clone().set({\n                label,\n                codeName,\n                theme,\n                input\n            });\n            const $el = new this.cm.EditorView({\n                model: el,\n                config: this.cm.getConfig()\n            }).render().$el;\n            el.init(input);\n            return {\n                el,\n                $el\n            };\n        }\n    };\n});"]}
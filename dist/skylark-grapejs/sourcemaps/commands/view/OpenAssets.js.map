{"version":3,"sources":["commands/view/OpenAssets.js"],"names":["define","[object Object]","editor","sender","opts","modal","Modal","am","AssetManager","config","getConfig","amContainer","getContainer","title","modalTitle","t","types","accept","setTarget","target","onClick","onDblClick","onSelect","this","rendered","assets","getAll","filter","i","length","a","indexOf","get","render","uploadEl","querySelector","stylePrefix","setAttribute","open","content","getModel","once","stopCommand","id","close"],"mappings":";;;;;;;AAAAA,OAAO,WACH,aACA,OACIC,IAAIC,EAAQC,EAAQC,MAChB,MAAMC,EAAQH,EAAOI,MACfC,EAAKL,EAAOM,aACZC,EAASF,EAAGG,YACZC,EAAcJ,EAAGK,eACjBC,EAAQT,EAAKU,YAAcZ,EAAOa,EAAE,4BAA8B,GAClEC,EAAQZ,EAAKY,MACbC,EAASb,EAAKa,OAKpB,GAJAV,EAAGW,UAAUd,EAAKe,QAClBZ,EAAGa,QAAQhB,EAAKgB,SAChBb,EAAGc,WAAWjB,EAAKiB,YACnBd,EAAGe,SAASlB,EAAKkB,WACZC,KAAKC,UAAYR,EAAO,CACzB,IAAIS,EAASlB,EAAGmB,SAASC,OAAOC,GAAK,GACjCZ,GAASA,EAAMa,SACfJ,EAASA,EAAOE,OAAOG,IAAuC,IAAlCd,EAAMe,QAAQD,EAAEE,IAAI,WAEpDzB,EAAG0B,OAAOR,GACVF,KAAKC,SAAW,EAEpB,GAAIP,EAAQ,CACR,MAAMiB,EAAWvB,EAAYwB,uBAAwB1B,EAAO2B,yBAC5DF,GAAYA,EAASG,aAAa,SAAUpB,GAMhD,OAJAZ,EAAMiC,MACFzB,MAAAA,EACA0B,QAAS5B,IACV6B,WAAWC,KAAK,cAAe,IAAMvC,EAAOwC,YAAYnB,KAAKoB,KACzDpB,MAEXtB,KAAKC,GAED,OADAA,EAAOI,MAAMsC,QACNrB","file":"../../../commands/view/OpenAssets.js","sourcesContent":["define(function () {\n    'use strict';\n    return {\n        run(editor, sender, opts = {}) {\n            const modal = editor.Modal;\n            const am = editor.AssetManager;\n            const config = am.getConfig();\n            const amContainer = am.getContainer();\n            const title = opts.modalTitle || editor.t('assetManager.modalTitle') || '';\n            const types = opts.types;\n            const accept = opts.accept;\n            am.setTarget(opts.target);\n            am.onClick(opts.onClick);\n            am.onDblClick(opts.onDblClick);\n            am.onSelect(opts.onSelect);\n            if (!this.rendered || types) {\n                let assets = am.getAll().filter(i => 1);\n                if (types && types.length) {\n                    assets = assets.filter(a => types.indexOf(a.get('type')) !== -1);\n                }\n                am.render(assets);\n                this.rendered = 1;\n            }\n            if (accept) {\n                const uploadEl = amContainer.querySelector(`input#${ config.stylePrefix }uploadFile`);\n                uploadEl && uploadEl.setAttribute('accept', accept);\n            }\n            modal.open({\n                title,\n                content: amContainer\n            }).getModel().once('change:open', () => editor.stopCommand(this.id));\n            return this;\n        },\n        stop(editor) {\n            editor.Modal.close();\n            return this;\n        }\n    };\n});"]}
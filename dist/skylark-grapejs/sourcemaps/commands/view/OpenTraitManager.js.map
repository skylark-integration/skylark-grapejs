{"version":3,"sources":["commands/view/OpenTraitManager.js"],"names":["define","Backbone","$","[object Object]","editor","sender","this","em","getModel","pfx","Config","stylePrefix","tm","TraitManager","$cn","tmView","getTraitsViewer","confTm","getConfig","$cn2","append","$header","t","render","el","panels","Panels","getPanel","addPanel","id","set","get","trigger","target","listenTo","toggleTm","getSelectedAll","length","show","hide"],"mappings":";;;;;;;AAAAA,QAAQ,oBAAqB,SAAUC,GACnC,aACA,MAAMC,EAAID,EAASC,EACnB,OACIC,IAAIC,EAAQC,GACRC,KAAKD,OAASA,EACd,MAAME,EAAKH,EAAOI,WAClB,IACIC,EADSL,EAAOM,OACHC,YACbC,EAAKR,EAAOS,aAEhB,IAAKP,KAAKQ,IAAK,CACX,IAAIC,EAASH,EAAGI,kBACZC,EAASL,EAAGM,YAChBZ,KAAKQ,IAAMZ,EAAE,eACbI,KAAKa,KAAOjB,EAAE,eACdI,KAAKQ,IAAIM,OAAOd,KAAKa,MACrBb,KAAKe,QAAUnB,EAAE,SAASkB,sBAAuBH,EAAON,sBAAwBJ,EAAGe,EAAE,+BACrFhB,KAAKQ,IAAIM,OAAOd,KAAKe,SACrBf,KAAKa,KAAKC,sBAAuBX,kBAAsBF,EAAGe,EAAE,+BAC5DhB,KAAKa,KAAKC,OAAOL,EAAOQ,SAASC,IACjC,IAAIC,EAASrB,EAAOsB,QACfD,EAAOE,SAAS,mBAGRF,EAAOE,SAAS,mBAFhBF,EAAOG,UAAWC,GAAI,qBAG5BC,IAAI,gBAAiBxB,KAAKQ,IAAIiB,IAAI,IAAIC,QAAQ,wBACrD1B,KAAK2B,OAAS7B,EAAOI,WACrBF,KAAK4B,SAAS5B,KAAK2B,OAAQ,oBAAqB3B,KAAK6B,UAEzD7B,KAAK6B,YAEThC,WACI,MAAME,EAASC,KAAKD,OAChBA,GAAUA,EAAO0B,MAAQ1B,EAAO0B,IAAI,YAEI,IAAxCzB,KAAK2B,OAAOG,iBAAiBC,QAC7B/B,KAAKa,KAAKmB,OACVhC,KAAKe,QAAQkB,SAEbjC,KAAKa,KAAKoB,OACVjC,KAAKe,QAAQiB,UAGrBnC,OACIG,KAAKa,MAAQb,KAAKa,KAAKoB,OACvBjC,KAAKe,SAAWf,KAAKe,QAAQkB","file":"../../../commands/view/OpenTraitManager.js","sourcesContent":["define(['skylark-backbone'], function (Backbone) {\n    'use strict';\n    const $ = Backbone.$;\n    return {\n        run(editor, sender) {\n            this.sender = sender;\n            const em = editor.getModel();\n            var config = editor.Config;\n            var pfx = config.stylePrefix;\n            var tm = editor.TraitManager;\n            var panelC;\n            if (!this.$cn) {\n                var tmView = tm.getTraitsViewer();\n                var confTm = tm.getConfig();\n                this.$cn = $('<div></div>');\n                this.$cn2 = $('<div></div>');\n                this.$cn.append(this.$cn2);\n                this.$header = $('<div>').append(`<div class=\"${ confTm.stylePrefix }header\">${ em.t('traitManager.empty') }</div>`);\n                this.$cn.append(this.$header);\n                this.$cn2.append(`<div class=\"${ pfx }traits-label\">${ em.t('traitManager.label') }</div>`);\n                this.$cn2.append(tmView.render().el);\n                var panels = editor.Panels;\n                if (!panels.getPanel('views-container'))\n                    panelC = panels.addPanel({ id: 'views-container' });\n                else\n                    panelC = panels.getPanel('views-container');\n                panelC.set('appendContent', this.$cn.get(0)).trigger('change:appendContent');\n                this.target = editor.getModel();\n                this.listenTo(this.target, 'component:toggled', this.toggleTm);\n            }\n            this.toggleTm();\n        },\n        toggleTm() {\n            const sender = this.sender;\n            if (sender && sender.get && !sender.get('active'))\n                return;\n            if (this.target.getSelectedAll().length === 1) {\n                this.$cn2.show();\n                this.$header.hide();\n            } else {\n                this.$cn2.hide();\n                this.$header.show();\n            }\n        },\n        stop() {\n            this.$cn2 && this.$cn2.hide();\n            this.$header && this.$header.hide();\n        }\n    };\n});"]}
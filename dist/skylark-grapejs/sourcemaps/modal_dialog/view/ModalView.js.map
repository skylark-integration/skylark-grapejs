{"version":3,"sources":["modal_dialog/view/ModalView.js"],"names":["define","Backbone","View","extend","template","pfx","ppfx","content","title","events","click","click [data-close-modal]","[object Object]","o","model","this","config","stylePrefix","pStylePrefix","listenTo","updateOpen","updateTitle","updateContent","e","backdrop","target","el","hide","$collector","$el","find","$content","$title","get","getContent","children","coll","getCollector","body","length","append","empty","getTitle","innerHTML","style","display","set","obj","toJSON","html","attr"],"mappings":";;;;;;;AAAAA,QAAQ,oBAAqB,SAAUC,GACnC,aACA,OAAOA,EAASC,KAAKC,QACjBC,SAAQ,EAACC,IAACA,EAAGC,KAAEA,EAAIC,QAAEA,EAAOC,MAAEA,oBACHH,WAAeC,WAAgBA,mCAC7CD,kCACEA,WAAeG,gCACfH,+EAEFA,gCACDA,OAAWE,8FAIZF,2CAEXI,QACIC,MAAO,UACPC,2BAA4B,QAEhCC,WAAWC,GACP,MAAMC,EAAQC,KAAKD,MACbE,EAASH,EAAEG,WACXX,EAAMW,EAAOC,aAAe,GAClCF,KAAKC,OAASA,EACdD,KAAKV,IAAMA,EACXU,KAAKT,KAAOU,EAAOE,cAAgB,GACnCH,KAAKI,SAASL,EAAO,cAAeC,KAAKK,YACzCL,KAAKI,SAASL,EAAO,eAAgBC,KAAKM,aAC1CN,KAAKI,SAASL,EAAO,iBAAkBC,KAAKO,gBAEhDV,QAAQW,GACQR,KAAKC,OAAOQ,UACjBD,EAAEE,SAAWV,KAAKW,IAAMX,KAAKY,QAExCf,eAGI,OAFKG,KAAKa,aACNb,KAAKa,WAAab,KAAKc,IAAIC,KAAK,IAAMf,KAAKV,IAAM,cAC9CU,KAAKa,YAEhBhB,aACI,MAAMP,EAAMU,KAAKV,IAIjB,OAHKU,KAAKgB,WACNhB,KAAKgB,SAAWhB,KAAKc,IAAIC,SAAUzB,aAAiBA,OAEjDU,KAAKgB,UAEhBnB,WAGI,OAFKG,KAAKiB,SACNjB,KAAKiB,OAASjB,KAAKc,IAAIC,KAAK,IAAMf,KAAKV,IAAM,UAC1CU,KAAKiB,OAAOC,IAAI,IAE3BrB,gBACI,IAAIL,EAAUQ,KAAKmB,aACnB,MAAMC,EAAW5B,EAAQ4B,WACnBC,EAAOrB,KAAKsB,eACZC,EAAOvB,KAAKD,MAAMmB,IAAI,WAC5BE,EAASI,QAAUH,EAAKI,OAAOL,GAC/B5B,EAAQkC,QAAQD,OAAOF,IAE3B1B,cACI,IAAIJ,EAAQO,KAAK2B,WACblC,IACAA,EAAMmC,UAAY5B,KAAKD,MAAMmB,IAAI,WAEzCrB,aACIG,KAAKW,GAAGkB,MAAMC,QAAU9B,KAAKD,MAAMmB,IAAI,QAAU,GAAK,QAE1DrB,OACIG,KAAKD,MAAMgC,IAAI,OAAQ,IAE3BlC,OACIG,KAAKD,MAAMgC,IAAI,OAAQ,IAE3BlC,SACI,MAAMc,EAAKX,KAAKc,IACVxB,EAAMU,KAAKV,IAEX0C,GADOhC,KAAKT,KACNS,KAAKD,MAAMkC,UAMvB,OALAD,EAAI1C,IAAMU,KAAKV,IACf0C,EAAIzC,KAAOS,KAAKT,KAChBoB,EAAGuB,KAAKlC,KAAKX,SAAS2C,IACtBrB,EAAGwB,KAAK,WAAa7C,cACrBU,KAAKK,aACEL","file":"../../../modal_dialog/view/ModalView.js","sourcesContent":["define(['skylark-backbone'], function (Backbone) {\n    'use strict';\n    return Backbone.View.extend({\n        template({pfx, ppfx, content, title}) {\n            return `<div class=\"${ pfx }dialog ${ ppfx }one-bg ${ ppfx }two-color\">\n      <div class=\"${ pfx }header\">\n        <div class=\"${ pfx }title\">${ title }</div>\n        <div class=\"${ pfx }btn-close\" data-close-modal>&Cross;</div>\n      </div>\n      <div class=\"${ pfx }content\">\n        <div id=\"${ pfx }c\">${ content }</div>\n        <div style=\"clear:both\"></div>\n      </div>\n    </div>\n    <div class=\"${ pfx }collector\" style=\"display: none\"></div>`;\n        },\n        events: {\n            click: 'onClick',\n            'click [data-close-modal]': 'hide'\n        },\n        initialize(o) {\n            const model = this.model;\n            const config = o.config || {};\n            const pfx = config.stylePrefix || '';\n            this.config = config;\n            this.pfx = pfx;\n            this.ppfx = config.pStylePrefix || '';\n            this.listenTo(model, 'change:open', this.updateOpen);\n            this.listenTo(model, 'change:title', this.updateTitle);\n            this.listenTo(model, 'change:content', this.updateContent);\n        },\n        onClick(e) {\n            const bkd = this.config.backdrop;\n            bkd && e.target === this.el && this.hide();\n        },\n        getCollector() {\n            if (!this.$collector)\n                this.$collector = this.$el.find('.' + this.pfx + 'collector');\n            return this.$collector;\n        },\n        getContent() {\n            const pfx = this.pfx;\n            if (!this.$content) {\n                this.$content = this.$el.find(`.${ pfx }content #${ pfx }c`);\n            }\n            return this.$content;\n        },\n        getTitle() {\n            if (!this.$title)\n                this.$title = this.$el.find('.' + this.pfx + 'title');\n            return this.$title.get(0);\n        },\n        updateContent() {\n            var content = this.getContent();\n            const children = content.children();\n            const coll = this.getCollector();\n            const body = this.model.get('content');\n            children.length && coll.append(children);\n            content.empty().append(body);\n        },\n        updateTitle() {\n            var title = this.getTitle();\n            if (title)\n                title.innerHTML = this.model.get('title');\n        },\n        updateOpen() {\n            this.el.style.display = this.model.get('open') ? '' : 'none';\n        },\n        hide() {\n            this.model.set('open', 0);\n        },\n        show() {\n            this.model.set('open', 1);\n        },\n        render() {\n            const el = this.$el;\n            const pfx = this.pfx;\n            const ppfx = this.ppfx;\n            const obj = this.model.toJSON();\n            obj.pfx = this.pfx;\n            obj.ppfx = this.ppfx;\n            el.html(this.template(obj));\n            el.attr('class', `${ pfx }container`);\n            this.updateOpen();\n            return this;\n        }\n    });\n});"]}
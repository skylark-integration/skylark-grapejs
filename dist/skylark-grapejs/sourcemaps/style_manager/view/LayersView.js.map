{"version":3,"sources":["style_manager/view/LayersView.js"],"names":["define","Backbone","LayerView","View","extend","[object Object]","o","this","config","stackModel","preview","pfx","stylePrefix","ppfx","pStylePrefix","propsConfig","collection","className","listenTo","addTo","deselectAll","render","em","utils","get","sorter","Sorter","container","el","ignoreViewChildren","containerSel","itemSel","view","$el","data","model","i","indexOf","addToCollection","fragmentEl","index","fragment","set","rendered","appendChild","method","children","length","append","eq","find","removeClass","document","createDocumentFragment","empty","each","attr","plh"],"mappings":";;;;;;;AAAAA,QACI,mBACA,eACD,SAAUC,EAAUC,GACnB,aACA,OAAOD,EAASE,KAAKC,QACjBC,WAAWC,GACPC,KAAKC,OAASF,EAAEE,WAChBD,KAAKE,WAAaH,EAAEG,WACpBF,KAAKG,QAAUJ,EAAEI,QACjBH,KAAKI,IAAMJ,KAAKC,OAAOI,aAAe,GACtCL,KAAKM,KAAON,KAAKC,OAAOM,cAAgB,GACxCP,KAAKQ,YAAcT,EAAES,YACrB,IAAIJ,EAAMJ,KAAKI,IACXE,EAAON,KAAKM,KACZG,EAAaT,KAAKS,WACtBT,KAAKU,aAAgBN,WAAeE,SACpCN,KAAKW,SAASF,EAAY,MAAOT,KAAKY,OACtCZ,KAAKW,SAASF,EAAY,cAAeT,KAAKa,aAC9Cb,KAAKW,SAASF,EAAY,QAAST,KAAKc,QACxC,IAAIC,EAAKf,KAAKC,OAAOc,IAAM,GACvBC,EAAQD,EAAKA,EAAGE,IAAI,SAAW,GACnCjB,KAAKkB,OAASF,EAAQ,IAAIA,EAAMG,QAC5BC,UAAWpB,KAAKqB,GAChBC,mBAAoB,EACpBC,iBAAmBnB,UACnBoB,YAAcpB,SACdA,IAAKJ,KAAKC,OAAOM,eAChB,GACLE,EAAWgB,KAAOzB,KAClBA,KAAK0B,IAAIC,KAAK,QAASlB,GACvBT,KAAK0B,IAAIC,KAAK,aAAclB,IAEhCX,MAAM8B,GACF,IAAIC,EAAI7B,KAAKS,WAAWqB,QAAQF,GAChC5B,KAAK+B,gBAAgBH,EAAO,KAAMC,IAEtC/B,gBAAgB8B,EAAOI,EAAYC,GAC/B,IAAIC,EAAWF,GAAc,KAC7B,MAAM9B,EAAaF,KAAKE,WAClBD,EAASD,KAAKC,OACdiB,EAASlB,KAAKkB,OACdV,EAAcR,KAAKQ,iBACG,IAAjBR,KAAKG,SACZyB,EAAMO,IAAI,UAAWnC,KAAKG,SAE9B,IAOIiC,EAPO,IAAIzC,GACXiC,MAAAA,EACA3B,OAAAA,EACAiB,OAAAA,EACAhB,WAAAA,EACAM,YAAAA,IAEgBM,SAASO,GAC7B,GAAIa,EACAA,EAASG,YAAYD,QAErB,QAAoB,IAATH,EAAsB,CAC7B,IAAIK,EAAS,SACTtC,KAAK0B,IAAIa,WAAWC,QAAUP,IAC9BA,IACAK,EAAS,SAETL,EAAQ,EACRjC,KAAK0B,IAAIe,OAAOL,GAEhBpC,KAAK0B,IAAIa,WAAWG,GAAGT,GAAOK,GAAQF,QAE1CpC,KAAK0B,IAAIe,OAAOL,GAExB,OAAOA,GAEXtC,cACIE,KAAK0B,IAAIiB,KAAK,IAAM3C,KAAKI,IAAM,SAASwC,YAAY5C,KAAKI,IAAM,WAEnEN,SACI,IAAIoC,EAAWW,SAASC,yBASxB,OARA9C,KAAK0B,IAAIqB,QACT/C,KAAKS,WAAWuC,KAAK,SAAUpB,GAC3B5B,KAAK+B,gBAAgBH,EAAOM,IAC7BlC,MACHA,KAAK0B,IAAIe,OAAOP,GAChBlC,KAAK0B,IAAIuB,KAAK,QAASjD,KAAKU,WACxBV,KAAKkB,SACLlB,KAAKkB,OAAOgC,IAAM,MACflD","file":"../../../style_manager/view/LayersView.js","sourcesContent":["define([\n    'skylark-backbone',\n    './LayerView'\n], function (Backbone, LayerView) {\n    'use strict';\n    return Backbone.View.extend({\n        initialize(o) {\n            this.config = o.config || {};\n            this.stackModel = o.stackModel;\n            this.preview = o.preview;\n            this.pfx = this.config.stylePrefix || '';\n            this.ppfx = this.config.pStylePrefix || '';\n            this.propsConfig = o.propsConfig;\n            let pfx = this.pfx;\n            let ppfx = this.ppfx;\n            let collection = this.collection;\n            this.className = `${ pfx }layers ${ ppfx }field`;\n            this.listenTo(collection, 'add', this.addTo);\n            this.listenTo(collection, 'deselectAll', this.deselectAll);\n            this.listenTo(collection, 'reset', this.render);\n            var em = this.config.em || '';\n            var utils = em ? em.get('Utils') : '';\n            this.sorter = utils ? new utils.Sorter({\n                container: this.el,\n                ignoreViewChildren: 1,\n                containerSel: `.${ pfx }layers`,\n                itemSel: `.${ pfx }layer`,\n                pfx: this.config.pStylePrefix\n            }) : '';\n            collection.view = this;\n            this.$el.data('model', collection);\n            this.$el.data('collection', collection);\n        },\n        addTo(model) {\n            var i = this.collection.indexOf(model);\n            this.addToCollection(model, null, i);\n        },\n        addToCollection(model, fragmentEl, index) {\n            var fragment = fragmentEl || null;\n            const stackModel = this.stackModel;\n            const config = this.config;\n            const sorter = this.sorter;\n            const propsConfig = this.propsConfig;\n            if (typeof this.preview !== 'undefined') {\n                model.set('preview', this.preview);\n            }\n            var view = new LayerView({\n                model,\n                config,\n                sorter,\n                stackModel,\n                propsConfig\n            });\n            var rendered = view.render().el;\n            if (fragment) {\n                fragment.appendChild(rendered);\n            } else {\n                if (typeof index != 'undefined') {\n                    var method = 'before';\n                    if (this.$el.children().length == index) {\n                        index--;\n                        method = 'after';\n                    }\n                    if (index < 0) {\n                        this.$el.append(rendered);\n                    } else\n                        this.$el.children().eq(index)[method](rendered);\n                } else\n                    this.$el.append(rendered);\n            }\n            return rendered;\n        },\n        deselectAll() {\n            this.$el.find('.' + this.pfx + 'layer').removeClass(this.pfx + 'active');\n        },\n        render() {\n            var fragment = document.createDocumentFragment();\n            this.$el.empty();\n            this.collection.each(function (model) {\n                this.addToCollection(model, fragment);\n            }, this);\n            this.$el.append(fragment);\n            this.$el.attr('class', this.className);\n            if (this.sorter)\n                this.sorter.plh = null;\n            return this;\n        }\n    });\n});"]}
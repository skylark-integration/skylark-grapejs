{"version":3,"sources":["style_manager/view/PropertyFileView.js"],"names":["define","a","Backbone","PropertyView","$","extend","[object Object]","pfx","em","this","t","modal","get","am","events","delegateEvents","$input","plh","model","getDefaultValue","$preview","$el","find","$previewBox","setValue","componentValue","prototype","clearCached","apply","arguments","value","f","setPreviewView","setPreview","v","pv","css","display","url","set","preview","indexOf","silent","args","cleanValue","e","editor","runCommand","types","accept","target","getTargetModel","onSelect","asset","close","isString","spreadUrl"],"mappings":";;;;;;;AAAAA,QACI,qBACA,mBACA,kBACD,SAAUC,EAAGC,EAAUC,GACtB,aACA,MAAMC,EAAIF,EAASE,EACnB,OAAOD,EAAaE,QAChBC,gBACI,MAAMC,IAACA,EAAGC,GAAEA,GAAMC,KAClB,2BACOF,UAAcA,2BACfA,wCACKA,sCACKA,aAAiBA,wCAC9BC,EAAGE,EAAE,0IAKFH,oCACEA,2CACAA,yDAKZD,OACI,MAAME,EAAKC,KAAKD,GAChBC,KAAKE,MAAQH,EAAGI,IAAI,SACpBH,KAAKI,GAAKL,EAAGI,IAAI,gBACjBH,KAAKK,OAAO,UAAYL,KAAKF,IAAM,SAAW,aAC9CE,KAAKK,OAAO,UAAYL,KAAKF,IAAM,UAAY,mBAC/CE,KAAKM,kBAETT,WACI,IAAKG,KAAKO,OAAQ,CACd,MAAMC,EAAMR,KAAKS,MAAMC,kBACvBV,KAAKO,OAASZ,yBAA0Ba,OAEvCR,KAAKW,WACNX,KAAKW,SAAWX,KAAKY,IAAIC,KAAK,IAAMb,KAAKF,IAAM,iBAE9CE,KAAKc,cACNd,KAAKc,YAAcd,KAAKY,IAAIC,KAAK,IAAMb,KAAKF,IAAM,gBAEtDE,KAAKe,SAASf,KAAKgB,eAAgB,IAEvCnB,cACIH,EAAauB,UAAUC,YAAYC,MAAMnB,KAAMoB,WAC/CpB,KAAKW,SAAW,KAChBX,KAAKc,YAAc,MAEvBjB,SAASwB,EAAOC,GACZ5B,EAAauB,UAAUF,SAASI,MAAMnB,KAAMoB,WAC5CpB,KAAKuB,eAAeF,GAASA,GAASrB,KAAKS,MAAMC,mBACjDV,KAAKwB,WAAWH,IAEpBxB,eAAe4B,GACX,MAAMC,EAAK1B,KAAKc,YAChBY,GAAMA,EAAGD,EAAI,WAAa,kBAAmBzB,KAAKF,WAClD4B,GAAMA,EAAGC,KAAMC,QAASH,EAAI,QAAU,UAE1C5B,UAAUgC,GACN7B,KAAKS,MAAMqB,IAAI,QAASD,GACxB7B,KAAKuB,eAAe,IAExB1B,WAAWwB,GACP,MAAMU,EAAU/B,KAAKW,SACrBU,EAAQA,GAASA,EAAMW,QAAQ,QAAU,SAAYX,KAAYA,EACjEU,GAAWA,EAAQJ,IAAI,mBAAoBN,IAE/CxB,aACIG,KAAKuB,eAAe,GACpBvB,KAAKS,MAAMqB,KAAMT,MAAO,KAAQY,QAAQ,KAE5CpC,cAAcqC,GACVlC,KAAKS,MAAMqB,IAAI,QAAS9B,KAAKS,MAAMC,mBACnChB,EAAauB,UAAUkB,WAAWhB,MAAMnB,KAAMkC,GAC9ClC,KAAKuB,eAAe,IAExB1B,iBAAiBuC,GACb,MAAMrC,GAACA,EAAEG,MAAEA,GAASF,KACdqC,EAAStC,EAAKA,EAAGI,IAAI,UAAY,GACnCkC,GACAA,EAAOC,WAAW,eACdC,OAAQ,SACRC,OAAQ,UACRC,OAAQzC,KAAK0C,iBACb7C,YAEAA,eAEA8C,SAAUC,IACN1C,EAAM2C,QACN,MAAMhB,EAAMrC,EAAEsD,SAASF,GAASA,EAAQA,EAAMzC,IAAI,OAClDH,KAAK+C,UAAUlB","file":"../../../style_manager/view/PropertyFileView.js","sourcesContent":["define([\n    'skylark-underscore',\n    'skylark-backbone',\n    './PropertyView'\n], function (a, Backbone, PropertyView) {\n    'use strict';\n    const $ = Backbone.$;\n    return PropertyView.extend({\n        templateInput() {\n            const {pfx, em} = this;\n            return `\n    <div class=\"${ pfx }field ${ pfx }file\">\n      <div id='${ pfx }input-holder'>\n        <div class=\"${ pfx }btn-c\">\n          <button class=\"${ pfx }btn\" id=\"${ pfx }images\" type=\"button\">\n            ${ em.t('styleManager.fileButton') }\n          </button>\n        </div>\n        <div style=\"clear:both;\"></div>\n      </div>\n      <div id=\"${ pfx }preview-box\">\n        <div id=\"${ pfx }preview-file\"></div>\n        <div id=\"${ pfx }close\">&Cross;</div>\n      </div>\n    </div>\n    `;\n        },\n        init() {\n            const em = this.em;\n            this.modal = em.get('Modal');\n            this.am = em.get('AssetManager');\n            this.events['click #' + this.pfx + 'close'] = 'removeFile';\n            this.events['click #' + this.pfx + 'images'] = 'openAssetManager';\n            this.delegateEvents();\n        },\n        onRender() {\n            if (!this.$input) {\n                const plh = this.model.getDefaultValue();\n                this.$input = $(`<input placeholder=\"${ plh }\">`);\n            }\n            if (!this.$preview) {\n                this.$preview = this.$el.find('#' + this.pfx + 'preview-file');\n            }\n            if (!this.$previewBox) {\n                this.$previewBox = this.$el.find('#' + this.pfx + 'preview-box');\n            }\n            this.setValue(this.componentValue, 0);\n        },\n        clearCached() {\n            PropertyView.prototype.clearCached.apply(this, arguments);\n            this.$preview = null;\n            this.$previewBox = null;\n        },\n        setValue(value, f) {\n            PropertyView.prototype.setValue.apply(this, arguments);\n            this.setPreviewView(value && value != this.model.getDefaultValue());\n            this.setPreview(value);\n        },\n        setPreviewView(v) {\n            const pv = this.$previewBox;\n            pv && pv[v ? 'addClass' : 'removeClass'](`${ this.pfx }show`);\n            pv && pv.css({ display: v ? 'block' : 'none' });\n        },\n        spreadUrl(url) {\n            this.model.set('value', url);\n            this.setPreviewView(1);\n        },\n        setPreview(value) {\n            const preview = this.$preview;\n            value = value && value.indexOf('url(') < 0 ? `url(${ value })` : value;\n            preview && preview.css('background-image', value);\n        },\n        cleanValue() {\n            this.setPreviewView(0);\n            this.model.set({ value: '' }, { silent: true });\n        },\n        removeFile(...args) {\n            this.model.set('value', this.model.getDefaultValue());\n            PropertyView.prototype.cleanValue.apply(this, args);\n            this.setPreviewView(0);\n        },\n        openAssetManager(e) {\n            const {em, modal} = this;\n            const editor = em ? em.get('Editor') : '';\n            if (editor) {\n                editor.runCommand('open-assets', {\n                    types: ['image'],\n                    accept: 'image/*',\n                    target: this.getTargetModel(),\n                    onClick() {\n                    },\n                    onDblClick() {\n                    },\n                    onSelect: asset => {\n                        modal.close();\n                        const url = a.isString(asset) ? asset : asset.get('src');\n                        this.spreadUrl(url);\n                    }\n                });\n            }\n        }\n    });\n});"]}
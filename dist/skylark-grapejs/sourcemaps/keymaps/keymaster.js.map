{"version":3,"sources":["keymaps/keymaster.js"],"names":["define","k","_handlers","_mods","16","18","17","91","_scope","_MODIFIERS","⇧","shift","⌥","alt","option","⌃","ctrl","control","⌘","command","_MAP","backspace","tab","clear","enter","return","esc","escape","space","left","up","right","down","del","delete","home","end","pageup","pagedown",",",".","/","`","-","=",";","'","[","]","\\","code","x","toUpperCase","charCodeAt","_downKeys","index","array","item","i","length","compareArray","a1","a2","modifierMap","updateModifierKey","event","assignKey","key","scope","method","keys","mods","getKeys","undefined","split","getMods","push","shortcut","getScope","replace","slice","mi","addEvent","object","addEventListener","attachEvent","window","document","handler","modifiersMatch","keyCode","filter","call","this","preventDefault","returnValue","stopPropagation","cancelBubble","dispatch","splice","setScope","deleteScope","handlers","tagName","target","srcElement","isPressed","getPressedKeyCodes","unbind","multipleKeys","j","obj"],"mappings":"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","file":"../../keymaps/keymaster.js","sourcesContent":["define([],function(){\r\n  var k,\r\n    _handlers = {},\r\n    _mods = { 16: false, 18: false, 17: false, 91: false },\r\n    _scope = 'all',\r\n    // modifier keys\r\n    _MODIFIERS = {\r\n      '⇧': 16, shift: 16,\r\n      '⌥': 18, alt: 18, option: 18,\r\n      '⌃': 17, ctrl: 17, control: 17,\r\n      '⌘': 91, command: 91\r\n    },\r\n    // special keys\r\n    _MAP = {\r\n      backspace: 8, tab: 9, clear: 12,\r\n      enter: 13, 'return': 13,\r\n      esc: 27, escape: 27, space: 32,\r\n      left: 37, up: 38,\r\n      right: 39, down: 40,\r\n      del: 46, 'delete': 46,\r\n      home: 36, end: 35,\r\n      pageup: 33, pagedown: 34,\r\n      ',': 188, '.': 190, '/': 191,\r\n      '`': 192, '-': 189, '=': 187,\r\n      ';': 186, '\\'': 222,\r\n      '[': 219, ']': 221, '\\\\': 220\r\n    },\r\n    code = function(x){\r\n      return _MAP[x] || x.toUpperCase().charCodeAt(0);\r\n    },\r\n    _downKeys = [];\r\n\r\n  for(k=1;k<20;k++) _MAP['f'+k] = 111+k;\r\n\r\n  // IE doesn't support Array#indexOf, so have a simple replacement\r\n  function index(array, item){\r\n    var i = array.length;\r\n    while(i--) if(array[i]===item) return i;\r\n    return -1;\r\n  }\r\n\r\n  // for comparing mods before unassignment\r\n  function compareArray(a1, a2) {\r\n    if (a1.length != a2.length) return false;\r\n    for (var i = 0; i < a1.length; i++) {\r\n        if (a1[i] !== a2[i]) return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  var modifierMap = {\r\n      16:'shiftKey',\r\n      18:'altKey',\r\n      17:'ctrlKey',\r\n      91:'metaKey'\r\n  };\r\n  function updateModifierKey(event) {\r\n      for(k in _mods) _mods[k] = event[modifierMap[k]];\r\n  };\r\n\r\n  // handle keydown event\r\n  function dispatch(event) {\r\n    var key, handler, k, i, modifiersMatch, scope;\r\n    key = event.keyCode;\r\n\r\n    if (index(_downKeys, key) == -1) {\r\n        _downKeys.push(key);\r\n    }\r\n\r\n    // if a modifier key, set the key.<modifierkeyname> property to true and return\r\n    if(key == 93 || key == 224) key = 91; // right command on webkit, command on Gecko\r\n    if(key in _mods) {\r\n      _mods[key] = true;\r\n      // 'assignKey' from inside this closure is exported to window.key\r\n      for(k in _MODIFIERS) if(_MODIFIERS[k] == key) assignKey[k] = true;\r\n      return;\r\n    }\r\n    updateModifierKey(event);\r\n\r\n    // see if we need to ignore the keypress (filter() can can be overridden)\r\n    // by default ignore key presses if a select, textarea, or input is focused\r\n    if(!assignKey.filter.call(this, event)) return;\r\n\r\n    // abort if no potentially matching shortcuts found\r\n    if (!(key in _handlers)) return;\r\n\r\n    scope = getScope();\r\n\r\n    // for each potential shortcut\r\n    for (i = 0; i < _handlers[key].length; i++) {\r\n      handler = _handlers[key][i];\r\n\r\n      // see if it's in the current scope\r\n      if(handler.scope == scope || handler.scope == 'all'){\r\n        // check if modifiers match if any\r\n        modifiersMatch = handler.mods.length > 0;\r\n        for(k in _mods)\r\n          if((!_mods[k] && index(handler.mods, +k) > -1) ||\r\n            (_mods[k] && index(handler.mods, +k) == -1)) modifiersMatch = false;\r\n        // call the handler and stop the event if neccessary\r\n        if((handler.mods.length == 0 && !_mods[16] && !_mods[18] && !_mods[17] && !_mods[91]) || modifiersMatch){\r\n          if(handler.method(event, handler)===false){\r\n            if(event.preventDefault) event.preventDefault();\r\n              else event.returnValue = false;\r\n            if(event.stopPropagation) event.stopPropagation();\r\n            if(event.cancelBubble) event.cancelBubble = true;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  // unset modifier keys on keyup\r\n  function clearModifier(event){\r\n    var key = event.keyCode, k,\r\n        i = index(_downKeys, key);\r\n\r\n    // remove key from _downKeys\r\n    if (i >= 0) {\r\n        _downKeys.splice(i, 1);\r\n    }\r\n\r\n    if(key == 93 || key == 224) key = 91;\r\n    if(key in _mods) {\r\n      _mods[key] = false;\r\n      for(k in _MODIFIERS) if(_MODIFIERS[k] == key) assignKey[k] = false;\r\n    }\r\n  };\r\n\r\n  function resetModifiers() {\r\n    for(k in _mods) _mods[k] = false;\r\n    for(k in _MODIFIERS) assignKey[k] = false;\r\n  };\r\n\r\n  // parse and assign shortcut\r\n  function assignKey(key, scope, method){\r\n    var keys, mods;\r\n    keys = getKeys(key);\r\n    if (method === undefined) {\r\n      method = scope;\r\n      scope = 'all';\r\n    }\r\n\r\n    // for each shortcut\r\n    for (var i = 0; i < keys.length; i++) {\r\n      // set modifier keys if any\r\n      mods = [];\r\n      key = keys[i].split('+');\r\n      if (key.length > 1){\r\n        mods = getMods(key);\r\n        key = [key[key.length-1]];\r\n      }\r\n      // convert to keycode and...\r\n      key = key[0]\r\n      key = code(key);\r\n      // ...store handler\r\n      if (!(key in _handlers)) _handlers[key] = [];\r\n      _handlers[key].push({ shortcut: keys[i], scope: scope, method: method, key: keys[i], mods: mods });\r\n    }\r\n  };\r\n\r\n  // unbind all handlers for given key in current scope\r\n  function unbindKey(key, scope) {\r\n    var multipleKeys, keys,\r\n      mods = [],\r\n      i, j, obj;\r\n\r\n    multipleKeys = getKeys(key);\r\n\r\n    for (j = 0; j < multipleKeys.length; j++) {\r\n      keys = multipleKeys[j].split('+');\r\n\r\n      if (keys.length > 1) {\r\n        mods = getMods(keys);\r\n        key = keys[keys.length - 1];\r\n      }\r\n\r\n      key = code(key);\r\n\r\n      if (scope === undefined) {\r\n        scope = getScope();\r\n      }\r\n      if (!_handlers[key]) {\r\n        return;\r\n      }\r\n      for (i = 0; i < _handlers[key].length; i++) {\r\n        obj = _handlers[key][i];\r\n        // only clear handlers if correct scope and mods match\r\n        if (obj.scope === scope && compareArray(obj.mods, mods)) {\r\n          _handlers[key][i] = {};\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  // Returns true if the key with code 'keyCode' is currently down\r\n  // Converts strings into key codes.\r\n  function isPressed(keyCode) {\r\n      if (typeof(keyCode)=='string') {\r\n        keyCode = code(keyCode);\r\n      }\r\n      return index(_downKeys, keyCode) != -1;\r\n  }\r\n\r\n  function getPressedKeyCodes() {\r\n      return _downKeys.slice(0);\r\n  }\r\n\r\n  function filter(event){\r\n    var tagName = (event.target || event.srcElement).tagName;\r\n    // ignore keypressed in any elements that support keyboard data input\r\n    return !(tagName == 'INPUT' || tagName == 'SELECT' || tagName == 'TEXTAREA');\r\n  }\r\n\r\n  // initialize key.<modifier> to false\r\n  for(k in _MODIFIERS) assignKey[k] = false;\r\n\r\n  // set current scope (default 'all')\r\n  function setScope(scope){ _scope = scope || 'all' };\r\n  function getScope(){ return _scope || 'all' };\r\n\r\n  // delete all handlers for a given scope\r\n  function deleteScope(scope){\r\n    var key, handlers, i;\r\n\r\n    for (key in _handlers) {\r\n      handlers = _handlers[key];\r\n      for (i = 0; i < handlers.length; ) {\r\n        if (handlers[i].scope === scope) handlers.splice(i, 1);\r\n        else i++;\r\n      }\r\n    }\r\n  };\r\n\r\n  // abstract key logic for assign and unassign\r\n  function getKeys(key) {\r\n    var keys;\r\n    key = key.replace(/\\s/g, '');\r\n    keys = key.split(',');\r\n    if ((keys[keys.length - 1]) == '') {\r\n      keys[keys.length - 2] += ',';\r\n    }\r\n    return keys;\r\n  }\r\n\r\n  // abstract mods logic for assign and unassign\r\n  function getMods(key) {\r\n    var mods = key.slice(0, key.length - 1);\r\n    for (var mi = 0; mi < mods.length; mi++)\r\n    mods[mi] = _MODIFIERS[mods[mi]];\r\n    return mods;\r\n  }\r\n\r\n  // cross-browser events\r\n  function addEvent(object, event, method) {\r\n    if (object.addEventListener)\r\n      object.addEventListener(event, method, false);\r\n    else if(object.attachEvent)\r\n      object.attachEvent('on'+event, function(){ method(window.event) });\r\n  };\r\n\r\n  // set the handlers globally on document\r\n  addEvent(document, 'keydown', function(event) { dispatch(event) }); // Passing _scope to a callback to ensure it remains the same by execution. Fixes #48\r\n  addEvent(document, 'keyup', clearModifier);\r\n\r\n  // reset modifiers to false whenever the window is (re)focused.\r\n  addEvent(window, 'focus', resetModifiers);\r\n\r\n  /*\r\n\r\n  // store previously defined key\r\n  var previousKey = global.key;\r\n\r\n  // restore previously defined key and return reference to our key object\r\n  function noConflict() {\r\n    var k = global.key;\r\n    global.key = previousKey;\r\n    return k;\r\n  }\r\n\r\n  // set window.key and window.key.set/get/deleteScope, and the default filter\r\n  global.key = assignKey;\r\n  global.key.setScope = setScope;\r\n  global.key.getScope = getScope;\r\n  global.key.deleteScope = deleteScope;\r\n  global.key.filter = filter;\r\n  global.key.isPressed = isPressed;\r\n  global.key.getPressedKeyCodes = getPressedKeyCodes;\r\n  global.key.noConflict = noConflict;\r\n  global.key.unbind = unbindKey;\r\n*/\r\n  assignKey.setScope = setScope;\r\n  assignKey.getScope = getScope;\r\n  assignKey.deleteScope = deleteScope;\r\n  assignKey.filter = filter;\r\n  assignKey.isPressed = isPressed;\r\n  assignKey.getPressedKeyCodes = getPressedKeyCodes;\r\n  assignKey.unbind = unbindKey;\r\n\r\n  return assignKey;\r\n\r\n});\r\n"]}
/**
 * skylark-grapejs - A version of garpejs that ported to running on skylarkjs
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-grapejs/
 * @license MIT
 */
define(["skylark-langx/langx","../utils/mixins","skylark-underscore","../utils/Droppable","./config/config","./model/Canvas","./view/CanvasView"],function(e,t,o,s,r,l,n){"use strict";const{requestAnimationFrame:i}=window;return()=>{let o,i,a={};return{getCanvasView:()=>i,name:"Canvas",init(t={}){a=e.mixin({},r,t,{module:this}),this.em=a.em;const s=a.pStylePrefix;s&&(a.stylePrefix=s+a.stylePrefix),o=new l(t),i=new n({model:o,config:a});var g=a.em.get("DomComponents");return g&&this.setWrapper(g),this.model=o,this.startAutoscroll=this.startAutoscroll.bind(this),this.stopAutoscroll=this.stopAutoscroll.bind(this),this},getConfig:()=>a,setWrapper(e){o.set("wrapper",e)},getElement:()=>i.el,getFrame:()=>o.get("frame"),getFrameEl(){const{frame:e}=i;return e&&e.el},getFramesEl:()=>i.framesArea,getWindow(){return this.getFrameEl().contentWindow},getDocument(){const e=this.getFrameEl();return e&&e.contentDocument},getBody(){const e=this.getDocument();return e&&e.body},getWrapperEl(){const e=this.getBody();return e&&e.querySelector("#wrapper")},_getCompFrame:e=>e&&e._getFrame(),_getLocalEl(e,t,o){let s=e;const r=this._getCompFrame(t);return s=r?r[o]():s},getGlobalToolsEl:()=>i.toolsGlobEl,getToolsEl(e){return this._getLocalEl(i.toolsEl,e,"getToolsEl")},getHighlighter(e){return this._getLocalEl(i.hlEl,e,"getHighlighter")},getBadgeEl(e){return this._getLocalEl(i.badgeEl,e,"getBadgeEl")},getPlacerEl:()=>i.placerEl,getGhostEl:()=>i.ghostEl,getToolbarEl:()=>i.toolbarEl,getResizerEl:()=>i.resizerEl,getOffsetViewerEl(e){return this._getLocalEl(i.offsetEl,e,"getOffsetViewerEl")},getFixedOffsetViewerEl:()=>i.fixedOffsetEl,render:()=>i.render().el,getOffset(){var e=this.offset(this.getFrameEl()),t=this.offset(this.getElement());return{top:e.top-t.top,left:e.left-t.left}},offset:e=>i.offset(e),setCustomBadgeLabel(e){a.customBadgeLabel=e},getElementPos:(e,t)=>i.getElementPos(e,t),getElementOffsets:e=>i.getElementOffsets(e),getRect(){const{top:e,left:t}=i.getPosition();return{...i.getCanvasOffset(),topScroll:e,leftScroll:t}},getTargetToElementDim(e,t,o={}){var s=o||{},r=i.getPosition();if(r){var l=s.elPos||i.getElementPos(t),n=o.toRight||0,g=s.targetHeight||e.offsetHeight,f=s.targetWidth||e.offsetWidth,m=s.event||null,h=l.top-g,c=l.left;c+=n?l.width:0;var u=(c=n?c-f:c)<r.left?r.left:c,p=h<r.top?r.top:h,d={top:p=p>l.top+l.height?l.top+l.height:p,left:u,elementTop:l.top,elementLeft:l.left,elementWidth:l.width,elementHeight:l.height,targetWidth:e.offsetWidth,targetHeight:e.offsetHeight,canvasTop:r.top,canvasLeft:r.left,canvasWidth:r.width,canvasHeight:r.height};return m&&a.em&&a.em.trigger(m,d),d}},canvasRectOffset(e,t,o={}){const s=(e,t=1,s)=>{const r=this.em.getZoomDecimal(),l=t?"top":"left",n=e.ownerDocument,{offsetTop:i=0,offsetLeft:a=0}=o.offset?(e=>{const{defaultView:t}=e;return t&&t.frameElement})(n):{},{scrollTop:g=0,scrollLeft:f=0}=n.body||{},m=t?g:f,h=t?i:a;return s[l]-(m-h)*r};return{top:s(e,1,t),left:s(e,0,t)}},getTargetToElementFixed(e,t,o={}){const s=o.pos||this.getElementPos(e),r=o.canvasOff||this.canvasRectOffset(e,s),l=t.offsetHeight||0,n=t.offsetWidth||0,i=s.left+s.width,a=this.getCanvasView(),g=a.getPosition(),f=a.getFrameOffset(e),{event:m}=o;let h=-l,c=s.width-n;c=s.left<-c?-s.left:c,c=i>g.width?c-(i-g.width):c;const u=s.height+l,p=u<f.height;r.top<l&&(p?h+=u:h=-r.top<s.height?-r.top:s.height);const d={top:h,left:c,canvasOffsetTop:r.top,canvasOffsetLeft:r.left};return m&&this.em.trigger(m,d),d},getMouseRelativePos(e,t){var o=0,s=0,r=(t||{}).subWinOffset,l=e.target.ownerDocument,n=l.defaultView||l.parentWindow,i=n.frameElement,a=r?n.pageYOffset:0,g=r?n.pageXOffset:0;if(i){var f=i.getBoundingClientRect();o=f.top||0,s=f.left||0}return{y:e.clientY+o-a,x:e.clientX+s-g}},getMouseRelativeCanvas(e,t){const o=this.getZoomDecimal(),{top:s,left:r}=i.getPosition(t);return{y:e.clientY*o+s,x:e.clientX*o+r}},hasFocus(){return this.getDocument().hasFocus()},isInputFocused(){const e=this.getDocument(),t=["body",...this.getConfig().notTextable],o=e&&e.activeElement;return o&&!t.some(e=>o.matches(e))},scrollTo(e,o={}){const s=t.getElement(e),r=s&&t.getViewEl(s);r&&r.scrollIntoView(o)},startAutoscroll(e){const t=e&&e.view||this.em.getCurrentFrame();t&&t.startAutoscroll()},stopAutoscroll(e){const t=e&&e.view||this.em.getCurrentFrame();t&&t.stopAutoscroll()},postRender(){t.hasDnd(a.em)&&(this.droppable=new s(a.em))},setZoom(e){return o.set("zoom",parseFloat(e)),this},getZoom:()=>parseFloat(o.get("zoom")),getZoomDecimal(){return this.getZoom()/100},getZoomMultiplier(){const e=this.getZoomDecimal();return e?1/e:1},toggleFramesEvents(e){const{style:t}=this.getFramesEl();t.pointerEvents=e?"":"none"},getFrameWrapperEl:()=>i.frame.getWrapper(),getFrames:()=>o.get("frames").map(e=>e),addFrame(e={},t={}){return o.get("frames").add({...e},{...t,em:this.em})}}}});
//# sourceMappingURL=../sourcemaps/canvas/index.js.map

/**
 * skylark-grapejs - A version of garpejs that ported to running on skylarkjs
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-grapejs/
 * @license MIT
 */
define(["./mixins","skylark-underscore"],function(e,t){"use strict";return class{constructor(e,n){this.em=e;const r=n||e.get("Canvas").getFrames().map(e=>e.get("root").getEl()),a=Array.isArray(r)?r:[r];return this.el=r,this.counter=0,t.bindAll(this,"handleDragEnter","handleDragOver","handleDrop","handleDragLeave"),a.forEach(e=>this.toggleEffects(e,1)),this}toggleEffects(t,n){const r=n?"on":"off";e[r](t,"dragenter",this.handleDragEnter),e[r](t,"dragover",this.handleDragOver),e[r](t,"drop",this.handleDrop),e[r](t,"dragleave",this.handleDragLeave)}endDrop(e,t){const{em:n,dragStop:r}=this;this.counter=0,this.over=0,r&&r(e),n.runDefault({preserveSelected:1}),n.trigger("canvas:dragend",t)}handleDragLeave(e){this.updateCounter(-1,e)}updateCounter(e,t){this.counter+=e,0===this.counter&&this.endDrop(1,t)}handleDragEnter(e){const{em:t}=this,n=e.dataTransfer;if(this.updateCounter(1,e),this.over)return;this.over=1;const r=t.get("Utils"),a=t.get("Canvas"),s=a.getBody();let o,i,g=t.get("dragContent")||"<br>";if(t.stopDefault(),t.inAbsoluteMode()){const r=t.get("DomComponents").getWrapper(),a=r.append({})[0],s=t.get("Commands").run("core:component-drag",{event:e,guidesInfo:1,center:1,target:a,onEnd:(e,t,{cancelled:s})=>{if(!s){const e=r.append(g)[0],{left:t,top:s,position:o}=a.getStyle();e.addStyle({left:t,top:s,position:o}),this.handleDragEnd(e,n)}a.remove()}});o=(t=>s.stop(e,{cancel:t})),i=(e=>g=e)}else{const e=new r.Sorter({em:t,wmargin:1,nested:1,canvasRelative:1,direction:"a",container:s,placer:a.getPlacerEl(),containerSel:"*",itemSel:"*",pfx:"gjs-",onEndMove:e=>this.handleDragEnd(e,n),document:a.getFrameEl().contentDocument});e.setDropContent(g),e.startSort(),this.sorter=e,o=(t=>{t&&(e.moved=0),e.endMove()}),i=(t=>e.setDropContent(t))}this.dragStop=o,this.dragContent=i,t.trigger("canvas:dragenter",n,g)}handleDragEnd(e,t){if(!e)return;const{em:n}=this;n.set("dragResult",e),n.trigger("canvas:drop",t,e)}handleDragOver(e){e.preventDefault(),this.em.trigger("canvas:dragover",e)}handleDrop(e){e.preventDefault();const{dragContent:t}=this,n=e.dataTransfer,r=this.getContentByData(n).content;e.target.style.border="",r&&t&&t(r),this.endDrop(!r,e)}getContentByData(e){const n=this.em,r=e.types,a=e.files||[],s=n.get("dragContent");let o=e.getData("text");if(a.length){o=[];for(let e=0;e<a.length;e++){const t=a[e],n=t.type.split("/")[0];"image"==n&&o.push({type:n,file:t,attributes:{alt:t.name}})}}else if(s)o=s;else if(t.indexOf(r,"text/html")>=0)o=e.getData("text/html").replace(/<\/?meta[^>]*>/g,"");else if(t.indexOf(r,"text/uri-list")>=0)o={type:"link",attributes:{href:o},content:o};else if(t.indexOf(r,"text/json")>=0){const t=e.getData("text/json");t&&(o=JSON.parse(t))}const i={content:o};return n.trigger("canvas:dragdata",e,i),i}}});
//# sourceMappingURL=../sourcemaps/utils/Droppable.js.map

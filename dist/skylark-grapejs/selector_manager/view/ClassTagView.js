/**
 * skylark-grapejs - A version of garpejs that ported to running on skylarkjs
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-grapejs/
 * @license MIT
 */
define(["skylark-backbone"],function(t){"use strict";return t.View.extend({template(){const{pfx:t,model:e,config:a}=this;return`\n      <span id="${t}checkbox" class="${t}tag-status" data-tag-status></span>\n      <span id="${t}tag-label" data-tag-name>${e.get("label")||""}</span>\n      <span id="${t}close" class="${t}tag-close" data-tag-remove>\n        ${a.iconTagRemove}\n      </span>\n    `},events:{"click [data-tag-remove]":"removeTag","click [data-tag-status]":"changeStatus","dblclick [data-tag-name]":"startEditTag","focusout [data-tag-name]":"endEditTag"},initialize(t){const e=t.config||{};this.config=e,this.coll=t.coll||null,this.pfx=e.stylePrefix||"",this.ppfx=e.pStylePrefix||"",this.em=e.em,this.listenTo(this.model,"change:active",this.updateStatus)},getInputEl(){return this.inputEl||(this.inputEl=this.el.querySelector("[data-tag-name]")),this.inputEl},startEditTag(){const{em:t}=this,e=this.getInputEl();e.contentEditable=!0,e.focus(),t&&t.setEditing(1)},endEditTag(){const t=this.model,e=this.getInputEl(),a=e.textContent,s=this.em,i=s&&s.get("SelectorManager");if(e.contentEditable=!1,s&&s.setEditing(0),i){const s=i.escapeName(a);i.get(s)?e.innerText=t.get("label"):t.set({name:s,label:a})}},changeStatus(){const{model:t}=this;t.set("active",!t.get("active"))},removeTag(){const{em:t,model:e}=this;(t&&t.getSelectedAll()).forEach(t=>{!e.get("protected")&&t&&t.getSelectors().remove(e)})},updateStatus(){const{model:t,$el:e,config:a}=this,{iconTagOn:s,iconTagOff:i}=a,n=e.find("[data-tag-status]");t.get("active")?(n.html(s),e.removeClass("opac50")):(n.html(i),e.addClass("opac50"))},render(){const t=this.pfx,e=this.ppfx;return this.$el.html(this.template()),this.$el.attr("class",`${t}tag ${e}three-bg`),this.updateStatus(),this}})});
//# sourceMappingURL=../../sourcemaps/selector_manager/view/ClassTagView.js.map

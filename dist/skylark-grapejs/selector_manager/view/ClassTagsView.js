/**
 * skylark-grapejs - A version of garpejs that ported to running on skylarkjs
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-grapejs/
 * @license MIT
 */
define(["skylark-underscore","skylark-backbone","./ClassTagView"],function(t,e,s){"use strict";return e.View.extend({template:({labelInfo:t,labelStates:e,labelHead:s,iconSync:a,iconAdd:n,pfx:i,ppfx:l})=>`\n    <div id="${i}up" class="${i}header">\n      <div id="${i}label" class="${i}header-label">${s}</div>\n      <div id="${i}status-c" class="${i}header-status">\n        <span id="${i}input-c" data-states-c>\n          <div class="${l}field ${l}select">\n            <span id="${l}input-holder">\n              <select id="${i}states" data-states>\n                <option value="">${e}</option>\n              </select>\n            </span>\n            <div class="${l}sel-arrow">\n              <div class="${l}d-s-arrow"></div>\n            </div>\n          </div>\n        </span>\n      </div>\n    </div>\n    <div id="${i}tags-field" class="${l}field">\n      <div id="${i}tags-c" data-selectors></div>\n      <input id="${i}new" data-input/>\n      <span id="${i}add-tag" class="${i}tags-btn ${i}tags-btn__add" data-add>\n        ${n}\n      </span>\n      <span class="${i}tags-btn ${i}tags-btn__sync" style="display: none" data-sync-style>\n        ${a}\n      </span>\n    </div>\n    <div class="${i}sels-info">\n      <div class="${i}label-sel">${t}:</div>\n      <div class="${i}sels" data-selected></div>\n      <div style="clear:both"></div>\n    </div>`,events:{"change [data-states]":"stateChanged","click [data-add]":"startNewTag","focusout [data-input]":"endNewTag","keyup [data-input]":"onInputKeyUp","click [data-sync-style]":"syncStyle"},initialize(t={}){this.config=t.config||{},this.pfx=this.config.stylePrefix||"",this.ppfx=this.config.pStylePrefix||"",this.className=this.pfx+"tags",this.stateInputId=this.pfx+"states",this.stateInputC=this.pfx+"input-c",this.states=this.config.states||[];const{em:e}=this.config,s=this.getStyleEmitter(),a=this.collection;this.target=this.config.em,this.em=e;this.listenTo(e,"component:toggled component:update:classes",this.componentChanged),this.listenTo(s,"styleManager:update",this.componentChanged),this.listenTo(e,"component:update:classes change:state",this.__handleStateChange),this.listenTo(e,"styleable:change change:device",this.checkSync),this.listenTo(a,"add",this.addNew),this.listenTo(a,"reset",this.renderClasses),this.listenTo(a,"remove",this.tagRemoved),this.delegateEvents()},syncStyle(){const{em:t}=this,e=this.getTarget(),s=t.get("CssComposer"),a=this.getCommonSelectors({opts:{noDisabled:1}}),n=t.get("state"),i=t.getCurrentMedia(),l=[],d=s.get(a,n,i)||s.add(a,n,i);let c;this.getTargets().forEach(t=>{const e=s.getIdRule(t.getId(),{state:n,mediaText:i});c=e.getStyle(),e.setStyle({}),l.push(e)}),c&&d.addStyle(c),t.trigger("component:toggled"),t.trigger("component:sync-style",{component:e,selectors:a,mediaText:i,rule:d,ruleComponents:l,state:n})},getStyleEmitter(){const{em:t}=this,e=t&&t.get("StyleManager");return e&&e.getEmitter()||{}},tagRemoved(t){this.updateStateVis()},getStateOptions(){const{states:t,em:e}=this;let s=[];return t.forEach(t=>s.push(`<option value="${t.name}">${e.t(`selectorManager.states.${t.name}`)||t.label||t.name}</option>`)),s.join("")},addNew(t){this.addToClasses(t)},startNewTag(){this.$addBtn.css({display:"none"}),this.$input.show().focus()},endNewTag(){this.$addBtn.css({display:""}),this.$input.hide().val("")},onInputKeyUp(t){13===t.keyCode?this.addNewTag(this.$input.val()):27===t.keyCode&&this.endNewTag()},checkStates(){const t=this.em.getState(),e=this.getStates();e&&e.val(t)},componentChanged:t.debounce(function({targets:t}={}){this.updateSelection(t)}),updateSelection(e){let s=e||this.getTargets(),a=[];return(s=t.isArray(s)?s:[s])&&s.length&&(a=this.getCommonSelectors({targets:s}),this.checkSync({validSelectors:a})),this.collection.reset(a),this.updateStateVis(s),a},getCommonSelectors({targets:t,opts:e={}}={}){const s=(t||this.getTargets()).map(t=>t.getSelectors&&t.getSelectors().getValid(e)).filter(t=>t);return this._commonSelectors(...s)},_commonSelectors(...t){return t.length?1===t.length?t[0]:2===t.length?t[0].filter(e=>t[1].indexOf(e)>=0):t.slice(1).reduce((t,e)=>this._commonSelectors(t,e),t[0]):[]},checkSync:t.debounce(function(){const{$btnSyncEl:e,config:s,collection:a}=this,n=this.getTarget();let i;if(n&&s.componentFirst&&a.length){const e=n.getStyle();i=!t.isEmpty(e)}e&&e[i?"show":"hide"]()}),getTarget(){return this.target.getSelected()},getTargets(){return this.target.getSelectedAll()},updateStateVis(t){const e=this.em,s=e&&e.getConfig("avoidInlineStyle"),a=this.collection.length||s?"":"none";this.getStatesC().css("display",a),this.updateSelector(t)},__handleStateChange(){this.updateSelector(this.getTargets())},updateSelector(e){const s=this.el.querySelector("[data-selected]"),a=[];let n=e||this.getTargets();(n=t.isArray(n)?n:[n]).forEach(t=>a.push(this.__getName(t))),s&&(s.innerHTML=a.join(", ")),this.checkStates()},__getName(e){const{pfx:s,config:a,em:n}=this,{selectedName:i,componentFirst:l}=a;let d;if(t.isString(e))d=`<span class="${s}sel-gen">${e}</span>`;else{if(!e||!e.get)return;const t=e.getSelectors().getStyleable(),a=n.get("state"),c=e.getId?`<span class="${s}sel-cmp">${e.getName()}</span><span class="${s}sel-id">#${e.getId()}</span>`:"";d=(d=this.collection.getFullString(t))?`<span class="${s}sel-rule">${d}</span>`:e.get("selectorsAdd")||c,d=l&&c?c:d,d+=a?`<span class="${s}sel-state">:${a}</span>`:"",d=i?i({result:d,state:a,target:e}):d}return d&&`<span class="${s}sel">${d}</span>`},stateChanged(t){const{em:e}=this,{value:s}=t.target;e.set("state",s)},addNewTag(t){const{em:e}=this;if(t.trim()){if(e){const s=e.get("SelectorManager").add({label:t});this.getTargets().forEach(t=>{t.getSelectors().add(s),this.collection.add(s),this.updateStateVis()})}this.endNewTag()}},addToClasses(t,e=null){const a=e,n=this.getClasses(),i=new s({model:t,config:this.config,coll:this.collection}).render().el;return a?a.appendChild(i):n.append(i),i},renderClasses(){const t=document.createDocumentFragment(),e=this.getClasses();e.empty(),this.collection.each(e=>this.addToClasses(e,t)),e.append(t)},getClasses(){return this.$el.find("[data-selectors]")},getStates(){if(!this.$states){const t=this.$el.find("[data-states]");this.$states=t[0]&&t}return this.$states},getStatesC(){return this.$statesC||(this.$statesC=this.$el.find("#"+this.stateInputC)),this.$statesC},render(){const{em:t,pfx:e,ppfx:s,config:a,$el:n,el:i}=this,{render:l,iconSync:d,iconAdd:c}=a,o={iconSync:d,iconAdd:c,labelHead:t.t("selectorManager.label"),labelStates:t.t("selectorManager.emptyState"),labelInfo:t.t("selectorManager.selected"),ppfx:s,pfx:e,el:i};n.html(this.template(o));const h=l&&l(o);h&&h!==i&&n.empty().append(h),this.$input=n.find("[data-input]"),this.$addBtn=n.find("[data-add]"),this.$classes=n.find("#"+e+"tags-c"),this.$btnSyncEl=n.find("[data-sync-style]"),this.$input.hide();const r=this.getStates();return r&&r.append(this.getStateOptions()),this.renderClasses(),n.attr("class",`${this.className} ${s}one-bg ${s}two-color`),this}})});
//# sourceMappingURL=../../sourcemaps/selector_manager/view/ClassTagsView.js.map

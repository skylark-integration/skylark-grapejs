/**
 * skylark-grapejs - A version of garpejs that ported to running on skylarkjs
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-grapejs/
 * @license MIT
 */
define(["skylark-backbone","skylark-underscore","../../utils/mixins"],function(t,e,s){"use strict";return t.View.extend({template(t){return`\n      <div class="${this.pfx}label">\n        ${this.templateLabel(t)}\n      </div>\n      <div class="${this.ppfx}fields">\n        ${this.templateInput(t)}\n      </div>\n    `},templateLabel(t){const{pfx:e,em:s}=this,{parent:i}=t,{icon:a="",info:l="",id:r,name:n}=t.attributes;return`\n      <span class="${e}icon ${a}" title="${l}">\n        ${s&&s.t(`styleManager.properties.${r}`)||n}\n      </span>\n      ${i?"":`<b class="${e}clear" data-clear-style>&Cross;</b>`}\n    `},templateInput(t){return`\n      <div class="${this.ppfx}field">\n        <input placeholder="${t.getDefaultValue()}"/>\n      </div>\n    `},events:{change:"inputValueChanged","click [data-clear-style]":"clear"},initialize(t={}){e.bindAll(this,"targetUpdated"),this.config=t.config||{};const s=this.config.em;this.em=s,this.pfx=this.config.stylePrefix||"",this.ppfx=this.config.pStylePrefix||"",this.target=t.target||{},this.propTarget=t.propTarget||{},this.onChange=t.onChange,this.onInputRender=t.onInputRender||{},this.customValue=t.customValue||{};const i=this.model;this.property=i.get("property"),this.input=null;const a=this.pfx;this.inputHolderId="#"+a+"input-holder",this.sector=i.collection&&i.collection.sector,i.view=this,i.get("value")||i.set("value",i.getDefaultValue()),s&&s.on(`update:component:style:${this.property}`,this.targetUpdated);const l=i.get("requires");l&&Object.keys(l).forEach(t=>{s&&s.on(`component:styleUpdate:${t}`,this.targetUpdated)}),this.listenTo(this.propTarget,"update styleManager:update",this.targetUpdated),this.listenTo(i,"destroy remove",this.remove),this.listenTo(i,"change:value",this.modelValueChanged),this.listenTo(i,"targetUpdated",this.targetUpdated),this.listenTo(i,"change:visible",this.updateVisibility),this.listenTo(i,"change:status",this.updateStatus),this.listenTo(i,"change:name change:className change:full",this.render);const r=this.init&&this.init.bind(this);r&&r()},updateStatus(){const{model:t}=this,e=t.get("status"),s=t.parent,i=this.pfx,a=this.ppfx,l=this.config,r=`${a}four-color`,n=`${a}color-warn`,o=this.$el.children(`.${i}label`),h=this.getClearEl(),g=h?h.style:{};switch(o.removeClass(`${r} ${n}`),g.display="none",e){case"updated":!s&&o.addClass(r),l.clearProperties&&(g.display="inline");break;case"computed":o.addClass(n)}},clear(t){t&&t.stopPropagation(),this.model.clearValue(),setTimeout(()=>this.targetUpdated())},getClearEl(){return this.clearEl||(this.clearEl=this.el.querySelector("[data-clear-style]")),this.clearEl},getTarget(){return this.getTargetModel()},getTargets(){const{targets:t}=this.propTarget;return t||[this.getTarget()]},getTargetModel(){return this.propTarget&&this.propTarget.model},getHelperModel(){return this.propTarget&&this.propTarget.helper},inputValueChanged(t){t&&t.stopPropagation(),this.model.setValue(this.getInputValue(),1,{fromInput:1}),this.elementUpdated()},elementUpdated(){this.setStatus("updated")},setStatus(t){this.model.set("status",t);const e=this.model.parent;e&&"updated"==t&&e.set("status",t)},emitUpdateTarget:e.debounce(function(){const t=this.config.em;t&&t.trigger("styleManager:update:target",this.getTarget())}),_getTargetData(){const{model:t,config:e}=this,s=this.getTargetValue({ignoreDefault:1}),i=t.getDefaultValue(),a=this.getComputedValue();let l="",r="";return s?(l=s,e.highlightChanged&&(r="updated")):a&&e.showComputed&&a!=i?(l=a,e.highlightComputed&&(r="computed")):(l=i,r=""),{value:l,status:r,targetValue:s,defaultValue:i,computedValue:a}},targetUpdated(t,e,s={}){if(this.emitUpdateTarget(),!this.checkVisibility())return;const i=this.config.em,{model:a}=this,l=a.get("property"),r=this._getTargetData();if(this.setStatus(r.status),a.setValue(r.value,0,{fromTarget:1,...s}),i){const t={...r};i.trigger("styleManager:change",this,l,r.value,t),i.trigger(`styleManager:change:${l}`,this,r.value,t),this._emitUpdate(t)}},_emitUpdate(t={}){const{em:e,model:s}=this;if(!e)return;const i=s.get("property"),a={...this._getEventData(),...t},{id:l}=a;e.trigger("style:update",a),e.trigger(`style:update:${i}`,a),i!==l&&e.trigger(`style:update:${l}`,a)},_getEventData(){const{model:t}=this;return{propertyView:this,targets:this.getTargets(),value:t.getFullValue(),property:t,id:t.get("id"),name:t.get("property")}},checkVisibility(){var t=1;return this.config.hideNotStylable&&(this.isTargetStylable()&&this.isComponentStylable()?this.show():(this.hide(),t=0),this.sector&&this.sector.trigger("updateVisibility")),t},getTargetValue(t={}){let e;const{model:s}=this,i=this.getTargetModel(),a=this.customValue;if(!i)return e;if((e=i.getStyle()[s.get("property")])||t.ignoreDefault||(e=s.getDefaultValue()),"function"==typeof a&&!t.ignoreCustomValue){let t=a(this,s.collection.indexOf(s),e);t&&(e=t)}return e},getComputedValue(){const t=this.propTarget,e=t.computed||{},i=t.computedDefault||{},a=this.config.avoidComputed||[],l=this.model.get("property"),r=a.indexOf(l)<0,n=e[l],o=i[s.camelCase(l)];return e&&r&&o!==n&&n||""},getInputValue(){const t=this.getInputEl();return t?t.value:""},modelValueChanged(t,e,s={}){const i=this.model.getFullValue();s.fromInput||this.setValue(i),this.getTargets().forEach(t=>this.__updateTarget(t,s))},__updateTarget(t,e={}){const{model:s}=this,{em:i}=this.config,a=s.get("property"),l=s.getFullValue(),r=this.onChange;if(!t||!this.isTargetStylable(t)||!this.isComponentStylable())return;e.fromTarget||(r&&!e.fromParent?r(t,this,e):this.updateTargetStyle(l,null,{...e,target:t}));const n=i&&i.getSelected();i&&n&&(!e.noEmit&&i.trigger("component:update",n),i.trigger("component:styleUpdate",n,a),i.trigger(`component:styleUpdate:${a}`,n)),this._emitUpdate()},updateTargetStyle(t,e="",s={}){const i=e||this.model.get("property"),a=s.target||this.getTarget(),l=a.getStyle();t?l[i]=t:delete l[i],a.setStyle(l,s);const r=this.getHelperModel();r&&r.setStyle(l,s)},isTargetStylable(t){const s=t||this.getTarget(),i=this.model,a=i.get("id"),l=i.get("property"),r=i.get("toRequire"),n=s.get("unstylable"),o=s.get("stylable-require"),h=i.get("requires"),g=i.get("requiresParent"),u=this.sector?this.sector.collection:null,p=this.em?this.em.getSelected():null;let d=s.get("stylable");if(e.isArray(d)&&(d=d.indexOf(l)>=0),e.isArray(n)&&(d=n.indexOf(l)<0),r&&(d=!t||o&&(o.indexOf(a)>=0||o.indexOf(l)>=0)),u&&h){const t=Object.keys(h);u.each(s=>{s.get("properties").each(s=>{if(e.includes(t,s.id)){const t=h[s.id];d=d&&e.includes(t,s.get("value"))}})})}if(g){const t=p&&p.parent(),s=t&&t.getEl();if(s){const t=window.getComputedStyle(s);e.each(g,(s,i)=>{d=d&&t[i]&&e.includes(s,t[i])})}else d=!1}return d},isComponentStylable(){const t=this.em,e=t&&t.getSelected();return!e||this.isTargetStylable(e)},setRawValue(t){this.setValue(this.model.parseValue(t))},setValue(t){const s=this.model;let i=e.isUndefined(t)?s.getDefaultValue():t;const a=this.getInputEl();a&&(a.value=i)},getInputEl(){return this.input||(this.input=this.el.querySelector("input")),this.input},updateVisibility(){this.el.style.display=this.model.get("visible")?"block":"none"},show(){this.model.set("visible",1)},hide(){this.model.set("visible",0)},cleanValue(){this.setValue("")},clearCached(){this.clearEl=null,this.input=null,this.$input=null},render(){this.clearCached();const t=this.pfx,e=this.model,s=this.el,i=e.get("property"),a=e.get("full"),l=e.get("className")||"",r=`${t}property`;s.innerHTML=this.template(e),s.className=`${r} ${t}${e.get("type")} ${r}__${i} ${l}`.trim(),s.className+=a?` ${r}--full`:"",this.updateStatus();const n=this.onRender&&this.onRender.bind(this);n&&n(),this.setValue(e.get("value"),{targetUpdate:1})}})});
//# sourceMappingURL=../../sourcemaps/style_manager/view/PropertyView.js.map

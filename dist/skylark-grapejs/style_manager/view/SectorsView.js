/**
 * skylark-grapejs - A version of garpejs that ported to running on skylarkjs
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-grapejs/
 * @license MIT
 */
define(["skylark-backbone","skylark-underscore","../../utils/mixins","../../utils/dom","./SectorView"],function(e,t,s,o,l){"use strict";return e.View.undefined({initialize(s={}){const o=s.config||{};this.pfx=o.stylePrefix||"",this.ppfx=o.pStylePrefix||"",this.target=s.target||{},this.config=o;const l={};t.extend(l,e.Events);const r=document.body,i=document.createElement(`el-${(new Date).getTime()}`);r.appendChild(i),l.computedDefault={...window.getComputedStyle(i)},r.removeChild(i),this.propTarget=l;const n=this.collection;this.listenTo(n,"add",this.addTo),this.listenTo(n,"reset",this.render),this.listenTo(this.target,"component:toggled component:update:classes change:state change:device frame:resized",this.targetUpdated)},addTo(e,t,s={}){this.addToCollection(e,null,s)},toggleStateCls(e=[],t){e.forEach(e=>{const s=e.getEl();s&&s.classList[t?"add":"remove"]("hc-state")})},targetUpdated(e){const t=this.target,o=this.propTarget,l=t.getSelectedAll();let r=t.getSelected();const i=e&&e.toHTML?e:r;if(i&&this.toggleStateCls([i]),!r)return;const n=t.get("Config").devicePreviewMode?"":t.get("state"),{componentFirst:a}=t.get("SelectorManager").getConfig(),g=r.getEl();if(o.helper=null,o.targets=null,g&&s.isTaggableNode(g)){const e=n?`:${n}`:null;o.computed=window.getComputedStyle(g,e)}r=t.get("StyleManager").getModelToStyle(r),n&&(((e={})=>{const s=t.get("CssComposer"),l=s.getAll();let r=s.getClassRule("hc-state");r?(l.remove(r),l.add(r)):r=s.setClassRule("hc-state"),r.set("important",1),r.setStyle(e),o.helper=r})(r.getStyle()),this.toggleStateCls(l,1)),o.model=r,a&&(o.targets=l),o.trigger("update")},setTarget(e,s={}){const o=this.target,l=t.isArray(e)?e:[e],{targetIsClass:r,stylable:i}=s,n=[];l.forEach(e=>{let s=e;if(t.isString(e)){let t;const l=o.get("CssComposer").getAll();r&&(t=l.filter(t=>t.get("selectors").getFullString()===e)[0]),t||(t=l.filter(t=>t.get("selectorsAdd")===e)[0]),t||(t=l.add({selectors:[],selectorsAdd:e})),i&&t.set({stylable:i}),s=t}n.push(s)});const a=this.propTarget;return a.targets=n,a.trigger("update"),n},addToCollection(e,t,s={}){const{pfx:r,target:i,propTarget:n,config:a,el:g}=this,d=t||g,c=new l({model:e,id:`${r}${e.get("id")}`,name:e.get("name"),properties:e.get("properties"),target:i,propTarget:n,config:a}).render().el;return o.appendAtIndex(d,c,s.at),c},render(){const e=document.createDocumentFragment(),t=this.$el,s=this.pfx,o=this.ppfx;return t.empty(),this.collection.each(t=>this.addToCollection(t,e)),t.append(e),t.addClass(`${s}sectors ${o}one-bg ${o}two-color`),this}})});
//# sourceMappingURL=../../sourcemaps/style_manager/view/SectorsView.js.map
